
 /----------------------------------------------------------------------------\
 |                                                                            |
 |  yosys -- Yosys Open SYnthesis Suite                                       |
 |                                                                            |
 |  Copyright (C) 2012 - 2020  Claire Xenia Wolf <claire@yosyshq.com>         |
 |                                                                            |
 |  Permission to use, copy, modify, and/or distribute this software for any  |
 |  purpose with or without fee is hereby granted, provided that the above    |
 |  copyright notice and this permission notice appear in all copies.         |
 |                                                                            |
 |  THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES  |
 |  WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF          |
 |  MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR   |
 |  ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES    |
 |  WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN     |
 |  ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF   |
 |  OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.            |
 |                                                                            |
 \----------------------------------------------------------------------------/

 Yosys 0.27 (git sha1 5f88c218b, gcc 11.3.0-1ubuntu1~22.04 -fPIC -O3)


-- Running command `read_verilog -sv -noblackbox source/synth.sv source/clock_8Hz.sv source/clock_div.sv source/frequency_divider.sv source/keypad_encoder.sv source/mode_fsm.sv source/oscillator.sv source/pwm.sv source/sequential_div.sv source/sound_series_fsm.sv source/waveshaper.sv; synth -top synth; dfflibmap -liberty /home/shay/c/ecng007/sky130A/lib/sky130_fd_sc_hd__tt_100C_1v80.lib; abc -liberty /home/shay/c/ecng007/sky130A/lib/sky130_fd_sc_hd__tt_100C_1v80.lib; clean; write_verilog -noattr -noexpr -nohex -nodec -defparam mapped/synth.v' --

1. Executing Verilog-2005 frontend: source/synth.sv
Parsing SystemVerilog input from `source/synth.sv' to AST representation.
Generating RTLIL representation for module `\synth'.
Successfully finished Verilog frontend.

2. Executing Verilog-2005 frontend: source/clock_8Hz.sv
Parsing SystemVerilog input from `source/clock_8Hz.sv' to AST representation.
Generating RTLIL representation for module `\clock_8Hz'.
Successfully finished Verilog frontend.

3. Executing Verilog-2005 frontend: source/clock_div.sv
Parsing SystemVerilog input from `source/clock_div.sv' to AST representation.
Generating RTLIL representation for module `\clock_div'.
Successfully finished Verilog frontend.

4. Executing Verilog-2005 frontend: source/frequency_divider.sv
Parsing SystemVerilog input from `source/frequency_divider.sv' to AST representation.
Generating RTLIL representation for module `\frequency_divider'.
Successfully finished Verilog frontend.

5. Executing Verilog-2005 frontend: source/keypad_encoder.sv
Parsing SystemVerilog input from `source/keypad_encoder.sv' to AST representation.
Generating RTLIL representation for module `\keypad_encoder'.
Successfully finished Verilog frontend.

6. Executing Verilog-2005 frontend: source/mode_fsm.sv
Parsing SystemVerilog input from `source/mode_fsm.sv' to AST representation.
Generating RTLIL representation for module `\mode_fsm'.
Successfully finished Verilog frontend.

7. Executing Verilog-2005 frontend: source/oscillator.sv
Parsing SystemVerilog input from `source/oscillator.sv' to AST representation.
Generating RTLIL representation for module `\oscillator'.
Successfully finished Verilog frontend.

8. Executing Verilog-2005 frontend: source/pwm.sv
Parsing SystemVerilog input from `source/pwm.sv' to AST representation.
Generating RTLIL representation for module `\pwm'.
Successfully finished Verilog frontend.

9. Executing Verilog-2005 frontend: source/sequential_div.sv
Parsing SystemVerilog input from `source/sequential_div.sv' to AST representation.
Generating RTLIL representation for module `\sequential_div'.
Successfully finished Verilog frontend.

10. Executing Verilog-2005 frontend: source/sound_series_fsm.sv
Parsing SystemVerilog input from `source/sound_series_fsm.sv' to AST representation.
Generating RTLIL representation for module `\sound_series_fsm'.
Successfully finished Verilog frontend.

11. Executing Verilog-2005 frontend: source/waveshaper.sv
Parsing SystemVerilog input from `source/waveshaper.sv' to AST representation.
Generating RTLIL representation for module `\waveshaper'.
Successfully finished Verilog frontend.

12. Executing SYNTH pass.

12.1. Executing HIERARCHY pass (managing design hierarchy).

12.1.1. Analyzing design hierarchy..
Top module:  \synth
Used module:     \clock_8Hz
Used module:     \pwm
Used module:     \waveshaper
Used module:     \mode_fsm
Used module:     \sequential_div
Used module:     \clock_div
Used module:     \oscillator
Used module:     \frequency_divider
Used module:     \sound_series_fsm
Used module:     \keypad_encoder

12.1.2. Analyzing design hierarchy..
Top module:  \synth
Used module:     \clock_8Hz
Used module:     \pwm
Used module:     \waveshaper
Used module:     \mode_fsm
Used module:     \sequential_div
Used module:     \clock_div
Used module:     \oscillator
Used module:     \frequency_divider
Used module:     \sound_series_fsm
Used module:     \keypad_encoder
Removed 0 unused modules.

12.2. Executing PROC pass (convert processes to netlists).

12.2.1. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

12.2.2. Executing PROC_RMDEAD pass (remove dead branches from decision trees).
Removed 1 dead cases from process $proc$source/waveshaper.sv:0$111 in module waveshaper.
Marked 1 switch rules as full_case in process $proc$source/waveshaper.sv:0$111 in module waveshaper.
Marked 6 switch rules as full_case in process $proc$source/sound_series_fsm.sv:0$103 in module sound_series_fsm.
Marked 1 switch rules as full_case in process $proc$source/sound_series_fsm.sv:75$101 in module sound_series_fsm.
Marked 1 switch rules as full_case in process $proc$source/sound_series_fsm.sv:43$93 in module sound_series_fsm.
Removed 2 dead cases from process $proc$source/sound_series_fsm.sv:0$86 in module sound_series_fsm.
Marked 3 switch rules as full_case in process $proc$source/sound_series_fsm.sv:0$86 in module sound_series_fsm.
Marked 1 switch rules as full_case in process $proc$source/sequential_div.sv:112$84 in module sequential_div.
Marked 3 switch rules as full_case in process $proc$source/sequential_div.sv:0$79 in module sequential_div.
Marked 1 switch rules as full_case in process $proc$source/sequential_div.sv:77$77 in module sequential_div.
Marked 1 switch rules as full_case in process $proc$source/sequential_div.sv:0$76 in module sequential_div.
Marked 1 switch rules as full_case in process $proc$source/sequential_div.sv:0$75 in module sequential_div.
Marked 1 switch rules as full_case in process $proc$source/sequential_div.sv:48$73 in module sequential_div.
Removed 1 dead cases from process $proc$source/sequential_div.sv:0$68 in module sequential_div.
Marked 4 switch rules as full_case in process $proc$source/sequential_div.sv:0$68 in module sequential_div.
Marked 1 switch rules as full_case in process $proc$source/sequential_div.sv:0$65 in module sequential_div.
Marked 1 switch rules as full_case in process $proc$source/sequential_div.sv:14$63 in module sequential_div.
Marked 3 switch rules as full_case in process $proc$source/pwm.sv:0$58 in module pwm.
Marked 1 switch rules as full_case in process $proc$source/pwm.sv:10$56 in module pwm.
Marked 2 switch rules as full_case in process $proc$source/oscillator.sv:0$52 in module oscillator.
Marked 1 switch rules as full_case in process $proc$source/oscillator.sv:5$50 in module oscillator.
Removed 1 dead cases from process $proc$source/mode_fsm.sv:0$45 in module mode_fsm.
Marked 1 switch rules as full_case in process $proc$source/mode_fsm.sv:0$45 in module mode_fsm.
Marked 1 switch rules as full_case in process $proc$source/mode_fsm.sv:9$43 in module mode_fsm.
Marked 1 switch rules as full_case in process $proc$source/keypad_encoder.sv:55$39 in module keypad_encoder.
Marked 1 switch rules as full_case in process $proc$source/keypad_encoder.sv:42$35 in module keypad_encoder.
Marked 1 switch rules as full_case in process $proc$source/keypad_encoder.sv:0$34 in module keypad_encoder.
Marked 1 switch rules as full_case in process $proc$source/keypad_encoder.sv:11$32 in module keypad_encoder.
Marked 1 switch rules as full_case in process $proc$source/frequency_divider.sv:0$30 in module frequency_divider.
Marked 1 switch rules as full_case in process $proc$source/frequency_divider.sv:0$29 in module frequency_divider.
Marked 1 switch rules as full_case in process $proc$source/frequency_divider.sv:0$28 in module frequency_divider.
Marked 5 switch rules as full_case in process $proc$source/frequency_divider.sv:0$14 in module frequency_divider.
Marked 2 switch rules as full_case in process $proc$source/clock_div.sv:0$10 in module clock_div.
Marked 1 switch rules as full_case in process $proc$source/clock_div.sv:10$8 in module clock_div.
Marked 2 switch rules as full_case in process $proc$source/clock_8Hz.sv:0$4 in module clock_8Hz.
Marked 1 switch rules as full_case in process $proc$source/clock_8Hz.sv:10$2 in module clock_8Hz.
Removed a total of 5 dead cases.

12.2.3. Executing PROC_PRUNE pass (remove redundant assignments in processes).
Removed 19 redundant assignments.
Promoted 28 assignments to connections.

12.2.4. Executing PROC_INIT pass (extract init attributes).

12.2.5. Executing PROC_ARST pass (detect async resets in processes).
Found async reset \n_rst in `\sound_series_fsm.$proc$source/sound_series_fsm.sv:75$101'.
Found async reset \n_rst in `\sound_series_fsm.$proc$source/sound_series_fsm.sv:43$93'.
Found async reset \n_rst in `\sequential_div.$proc$source/sequential_div.sv:112$84'.
Found async reset \n_rst in `\sequential_div.$proc$source/sequential_div.sv:77$77'.
Found async reset \n_rst in `\sequential_div.$proc$source/sequential_div.sv:48$73'.
Found async reset \n_rst in `\sequential_div.$proc$source/sequential_div.sv:14$63'.
Found async reset \n_rst in `\pwm.$proc$source/pwm.sv:10$56'.
Found async reset \n_rst in `\oscillator.$proc$source/oscillator.sv:5$50'.
Found async reset \n_rst in `\mode_fsm.$proc$source/mode_fsm.sv:9$43'.
Found async reset \n_rst in `\keypad_encoder.$proc$source/keypad_encoder.sv:55$39'.
Found async reset \n_rst in `\keypad_encoder.$proc$source/keypad_encoder.sv:42$35'.
Found async reset \n_rst in `\keypad_encoder.$proc$source/keypad_encoder.sv:11$32'.
Found async reset \n_rst in `\clock_div.$proc$source/clock_div.sv:10$8'.
Found async reset \n_rst in `\clock_8Hz.$proc$source/clock_8Hz.sv:10$2'.

12.2.6. Executing PROC_ROM pass (convert switches to ROMs).
Converted 2 switches.
<suppressed ~37 debug messages>

12.2.7. Executing PROC_MUX pass (convert decision trees to multiplexers).
Creating decoders for process `\waveshaper.$proc$source/waveshaper.sv:0$111'.
     1/1: $1\sample[7:0]
Creating decoders for process `\sound_series_fsm.$proc$source/sound_series_fsm.sv:0$103'.
     1/6: $6\next_count[8:0]
     2/6: $5\next_count[8:0]
     3/6: $4\next_count[8:0]
     4/6: $3\next_count[8:0]
     5/6: $2\next_count[8:0]
     6/6: $1\next_count[8:0]
Creating decoders for process `\sound_series_fsm.$proc$source/sound_series_fsm.sv:75$101'.
     1/1: $0\count[8:0]
Creating decoders for process `\sound_series_fsm.$proc$source/sound_series_fsm.sv:43$93'.
     1/1: $0\sound[1:0]
Creating decoders for process `\sound_series_fsm.$proc$source/sound_series_fsm.sv:0$86'.
     1/5: $2\s2_on[0:0]
     2/5: $2\s1_on[0:0]
     3/5: $1\s2_on[0:0]
     4/5: $1\s1_on[0:0]
     5/5: $1\next_sound[1:0]
Creating decoders for process `\sequential_div.$proc$source/sequential_div.sv:112$84'.
     1/3: $0\D[15:0]
     2/3: $0\Q[7:0]
     3/3: $0\R[23:0]
Creating decoders for process `\sequential_div.$proc$source/sequential_div.sv:0$79'.
     1/7: $3\next_q[7:0]
     2/7: $3\next_r[23:0]
     3/7: $2\next_q[7:0]
     4/7: $2\next_r[23:0]
     5/7: $1\next_d[15:0]
     6/7: $1\next_q[7:0]
     7/7: $1\next_r[23:0]
Creating decoders for process `\sequential_div.$proc$source/sequential_div.sv:77$77'.
     1/2: $0\q_out[7:0]
     2/2: $0\dividend[15:0]
Creating decoders for process `\sequential_div.$proc$source/sequential_div.sv:0$76'.
     1/1: $1\next_q_out[7:0]
Creating decoders for process `\sequential_div.$proc$source/sequential_div.sv:0$75'.
     1/1: $1\D_count[15:0]
Creating decoders for process `\sequential_div.$proc$source/sequential_div.sv:48$73'.
     1/1: $0\state[1:0]
Creating decoders for process `\sequential_div.$proc$source/sequential_div.sv:0$68'.
     1/4: $4\next_state[1:0]
     2/4: $3\next_state[1:0]
     3/4: $2\next_state[1:0]
     4/4: $1\next_state[1:0]
Creating decoders for process `\sequential_div.$proc$source/sequential_div.sv:0$65'.
     1/1: $1\next_count[2:0]
Creating decoders for process `\sequential_div.$proc$source/sequential_div.sv:14$63'.
     1/1: $0\count_div[2:0]
Creating decoders for process `\pwm.$proc$source/pwm.sv:0$58'.
     1/4: $2\pwm[0:0]
     2/4: $2\next_count[7:0]
     3/4: $1\pwm[0:0]
     4/4: $1\next_count[7:0]
Creating decoders for process `\pwm.$proc$source/pwm.sv:10$56'.
     1/2: $0\count[7:0]
     2/2: $0\pwm_o[0:0]
Creating decoders for process `\oscillator.$proc$source/oscillator.sv:0$52'.
     1/2: $2\next_count[15:0]
     2/2: $1\next_count[15:0]
Creating decoders for process `\oscillator.$proc$source/oscillator.sv:5$50'.
     1/1: $0\count[15:0]
Creating decoders for process `\mode_fsm.$proc$source/mode_fsm.sv:0$45'.
     1/1: $1\next_mode[1:0]
Creating decoders for process `\mode_fsm.$proc$source/mode_fsm.sv:9$43'.
     1/1: $0\mode[1:0]
Creating decoders for process `\keypad_encoder.$proc$source/keypad_encoder.sv:55$39'.
     1/1: $0\last_sk[0:0]
Creating decoders for process `\keypad_encoder.$proc$source/keypad_encoder.sv:42$35'.
     1/1: $0\last_mk[0:0]
Creating decoders for process `\keypad_encoder.$proc$source/keypad_encoder.sv:0$34'.
     1/1: $1\keycode[3:0]
Creating decoders for process `\keypad_encoder.$proc$source/keypad_encoder.sv:11$32'.
     1/2: $0\sync_out[14:0]
     2/2: $0\q[14:0]
Creating decoders for process `\frequency_divider.$proc$source/frequency_divider.sv:0$30'.
     1/1: $1\divider[15:0]
Creating decoders for process `\frequency_divider.$proc$source/frequency_divider.sv:0$29'.
     1/1: $1\LUT_12MHz[15:0]
Creating decoders for process `\frequency_divider.$proc$source/frequency_divider.sv:0$28'.
     1/1: $1\LUT_10MHz[15:0]
Creating decoders for process `\frequency_divider.$proc$source/frequency_divider.sv:0$14'.
     1/5: $5\intermediate[3:0]
     2/5: $4\intermediate[3:0]
     3/5: $3\intermediate[3:0]
     4/5: $2\intermediate[3:0]
     5/5: $1\intermediate[3:0]
Creating decoders for process `\clock_div.$proc$source/clock_div.sv:0$10'.
     1/4: $2\flag[0:0]
     2/4: $2\next_count[7:0]
     3/4: $1\next_count[7:0]
     4/4: $1\flag[0:0]
Creating decoders for process `\clock_div.$proc$source/clock_div.sv:10$8'.
     1/1: $0\count[7:0]
Creating decoders for process `\clock_8Hz.$proc$source/clock_8Hz.sv:0$4'.
     1/4: $2\flag[0:0]
     2/4: $2\next_count[20:0]
     3/4: $1\next_count[20:0]
     4/4: $1\flag[0:0]
Creating decoders for process `\clock_8Hz.$proc$source/clock_8Hz.sv:10$2'.
     1/1: $0\count[20:0]

12.2.8. Executing PROC_DLATCH pass (convert process syncs to latches).
No latch inferred for signal `\waveshaper.\sample' from process `\waveshaper.$proc$source/waveshaper.sv:0$111'.
No latch inferred for signal `\sound_series_fsm.\next_count' from process `\sound_series_fsm.$proc$source/sound_series_fsm.sv:0$103'.
No latch inferred for signal `\sound_series_fsm.\next_sound' from process `\sound_series_fsm.$proc$source/sound_series_fsm.sv:0$86'.
No latch inferred for signal `\sound_series_fsm.\s1_on' from process `\sound_series_fsm.$proc$source/sound_series_fsm.sv:0$86'.
No latch inferred for signal `\sound_series_fsm.\s2_on' from process `\sound_series_fsm.$proc$source/sound_series_fsm.sv:0$86'.
No latch inferred for signal `\sequential_div.\next_r' from process `\sequential_div.$proc$source/sequential_div.sv:0$79'.
No latch inferred for signal `\sequential_div.\next_q' from process `\sequential_div.$proc$source/sequential_div.sv:0$79'.
No latch inferred for signal `\sequential_div.\next_d' from process `\sequential_div.$proc$source/sequential_div.sv:0$79'.
No latch inferred for signal `\sequential_div.\next_q_out' from process `\sequential_div.$proc$source/sequential_div.sv:0$76'.
No latch inferred for signal `\sequential_div.\D_count' from process `\sequential_div.$proc$source/sequential_div.sv:0$75'.
No latch inferred for signal `\sequential_div.\div' from process `\sequential_div.$proc$source/sequential_div.sv:0$68'.
No latch inferred for signal `\sequential_div.\done' from process `\sequential_div.$proc$source/sequential_div.sv:0$68'.
No latch inferred for signal `\sequential_div.\load' from process `\sequential_div.$proc$source/sequential_div.sv:0$68'.
No latch inferred for signal `\sequential_div.\next_state' from process `\sequential_div.$proc$source/sequential_div.sv:0$68'.
No latch inferred for signal `\sequential_div.\next_count' from process `\sequential_div.$proc$source/sequential_div.sv:0$65'.
No latch inferred for signal `\pwm.\pwm' from process `\pwm.$proc$source/pwm.sv:0$58'.
No latch inferred for signal `\pwm.\next_count' from process `\pwm.$proc$source/pwm.sv:0$58'.
No latch inferred for signal `\oscillator.\next_count' from process `\oscillator.$proc$source/oscillator.sv:0$52'.
No latch inferred for signal `\mode_fsm.\next_mode' from process `\mode_fsm.$proc$source/mode_fsm.sv:0$45'.
No latch inferred for signal `\keypad_encoder.\keycode' from process `\keypad_encoder.$proc$source/keypad_encoder.sv:0$34'.
No latch inferred for signal `\frequency_divider.\divider' from process `\frequency_divider.$proc$source/frequency_divider.sv:0$30'.
No latch inferred for signal `\frequency_divider.\LUT_12MHz' from process `\frequency_divider.$proc$source/frequency_divider.sv:0$29'.
No latch inferred for signal `\frequency_divider.\LUT_10MHz' from process `\frequency_divider.$proc$source/frequency_divider.sv:0$28'.
No latch inferred for signal `\frequency_divider.\intermediate' from process `\frequency_divider.$proc$source/frequency_divider.sv:0$14'.
No latch inferred for signal `\clock_div.\flag' from process `\clock_div.$proc$source/clock_div.sv:0$10'.
No latch inferred for signal `\clock_div.\next_count' from process `\clock_div.$proc$source/clock_div.sv:0$10'.
No latch inferred for signal `\clock_8Hz.\flag' from process `\clock_8Hz.$proc$source/clock_8Hz.sv:0$4'.
No latch inferred for signal `\clock_8Hz.\next_count' from process `\clock_8Hz.$proc$source/clock_8Hz.sv:0$4'.

12.2.9. Executing PROC_DFF pass (convert process syncs to FFs).
Creating register for signal `\sound_series_fsm.\count' using process `\sound_series_fsm.$proc$source/sound_series_fsm.sv:75$101'.
  created $adff cell `$procdff$374' with positive edge clock and negative level reset.
Creating register for signal `\sound_series_fsm.\sound' using process `\sound_series_fsm.$proc$source/sound_series_fsm.sv:43$93'.
  created $adff cell `$procdff$375' with positive edge clock and negative level reset.
Creating register for signal `\sequential_div.\D' using process `\sequential_div.$proc$source/sequential_div.sv:112$84'.
  created $adff cell `$procdff$376' with positive edge clock and negative level reset.
Creating register for signal `\sequential_div.\Q' using process `\sequential_div.$proc$source/sequential_div.sv:112$84'.
  created $adff cell `$procdff$377' with positive edge clock and negative level reset.
Creating register for signal `\sequential_div.\R' using process `\sequential_div.$proc$source/sequential_div.sv:112$84'.
  created $adff cell `$procdff$378' with positive edge clock and negative level reset.
Creating register for signal `\sequential_div.\q_out' using process `\sequential_div.$proc$source/sequential_div.sv:77$77'.
  created $adff cell `$procdff$379' with positive edge clock and negative level reset.
Creating register for signal `\sequential_div.\dividend' using process `\sequential_div.$proc$source/sequential_div.sv:77$77'.
  created $adff cell `$procdff$380' with positive edge clock and negative level reset.
Creating register for signal `\sequential_div.\state' using process `\sequential_div.$proc$source/sequential_div.sv:48$73'.
  created $adff cell `$procdff$381' with positive edge clock and negative level reset.
Creating register for signal `\sequential_div.\count_div' using process `\sequential_div.$proc$source/sequential_div.sv:14$63'.
  created $adff cell `$procdff$382' with positive edge clock and negative level reset.
Creating register for signal `\pwm.\pwm_o' using process `\pwm.$proc$source/pwm.sv:10$56'.
  created $adff cell `$procdff$383' with positive edge clock and negative level reset.
Creating register for signal `\pwm.\count' using process `\pwm.$proc$source/pwm.sv:10$56'.
  created $adff cell `$procdff$384' with positive edge clock and negative level reset.
Creating register for signal `\oscillator.\count' using process `\oscillator.$proc$source/oscillator.sv:5$50'.
  created $adff cell `$procdff$385' with positive edge clock and negative level reset.
Creating register for signal `\mode_fsm.\mode' using process `\mode_fsm.$proc$source/mode_fsm.sv:9$43'.
  created $adff cell `$procdff$386' with positive edge clock and negative level reset.
Creating register for signal `\keypad_encoder.\last_sk' using process `\keypad_encoder.$proc$source/keypad_encoder.sv:55$39'.
  created $adff cell `$procdff$387' with positive edge clock and negative level reset.
Creating register for signal `\keypad_encoder.\last_mk' using process `\keypad_encoder.$proc$source/keypad_encoder.sv:42$35'.
  created $adff cell `$procdff$388' with positive edge clock and negative level reset.
Creating register for signal `\keypad_encoder.\q' using process `\keypad_encoder.$proc$source/keypad_encoder.sv:11$32'.
  created $adff cell `$procdff$389' with positive edge clock and negative level reset.
Creating register for signal `\keypad_encoder.\sync_out' using process `\keypad_encoder.$proc$source/keypad_encoder.sv:11$32'.
  created $adff cell `$procdff$390' with positive edge clock and negative level reset.
Creating register for signal `\clock_div.\count' using process `\clock_div.$proc$source/clock_div.sv:10$8'.
  created $adff cell `$procdff$391' with positive edge clock and negative level reset.
Creating register for signal `\clock_8Hz.\count' using process `\clock_8Hz.$proc$source/clock_8Hz.sv:10$2'.
  created $adff cell `$procdff$392' with positive edge clock and negative level reset.

12.2.10. Executing PROC_MEMWR pass (convert process memory writes to cells).

12.2.11. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Found and cleaned up 1 empty switch in `\waveshaper.$proc$source/waveshaper.sv:0$111'.
Removing empty process `waveshaper.$proc$source/waveshaper.sv:0$111'.
Found and cleaned up 6 empty switches in `\sound_series_fsm.$proc$source/sound_series_fsm.sv:0$103'.
Removing empty process `sound_series_fsm.$proc$source/sound_series_fsm.sv:0$103'.
Removing empty process `sound_series_fsm.$proc$source/sound_series_fsm.sv:75$101'.
Removing empty process `sound_series_fsm.$proc$source/sound_series_fsm.sv:43$93'.
Found and cleaned up 3 empty switches in `\sound_series_fsm.$proc$source/sound_series_fsm.sv:0$86'.
Removing empty process `sound_series_fsm.$proc$source/sound_series_fsm.sv:0$86'.
Removing empty process `sequential_div.$proc$source/sequential_div.sv:112$84'.
Found and cleaned up 3 empty switches in `\sequential_div.$proc$source/sequential_div.sv:0$79'.
Removing empty process `sequential_div.$proc$source/sequential_div.sv:0$79'.
Removing empty process `sequential_div.$proc$source/sequential_div.sv:77$77'.
Found and cleaned up 1 empty switch in `\sequential_div.$proc$source/sequential_div.sv:0$76'.
Removing empty process `sequential_div.$proc$source/sequential_div.sv:0$76'.
Found and cleaned up 1 empty switch in `\sequential_div.$proc$source/sequential_div.sv:0$75'.
Removing empty process `sequential_div.$proc$source/sequential_div.sv:0$75'.
Removing empty process `sequential_div.$proc$source/sequential_div.sv:48$73'.
Found and cleaned up 4 empty switches in `\sequential_div.$proc$source/sequential_div.sv:0$68'.
Removing empty process `sequential_div.$proc$source/sequential_div.sv:0$68'.
Found and cleaned up 1 empty switch in `\sequential_div.$proc$source/sequential_div.sv:0$65'.
Removing empty process `sequential_div.$proc$source/sequential_div.sv:0$65'.
Removing empty process `sequential_div.$proc$source/sequential_div.sv:14$63'.
Found and cleaned up 3 empty switches in `\pwm.$proc$source/pwm.sv:0$58'.
Removing empty process `pwm.$proc$source/pwm.sv:0$58'.
Removing empty process `pwm.$proc$source/pwm.sv:10$56'.
Found and cleaned up 2 empty switches in `\oscillator.$proc$source/oscillator.sv:0$52'.
Removing empty process `oscillator.$proc$source/oscillator.sv:0$52'.
Removing empty process `oscillator.$proc$source/oscillator.sv:5$50'.
Found and cleaned up 1 empty switch in `\mode_fsm.$proc$source/mode_fsm.sv:0$45'.
Removing empty process `mode_fsm.$proc$source/mode_fsm.sv:0$45'.
Removing empty process `mode_fsm.$proc$source/mode_fsm.sv:9$43'.
Removing empty process `keypad_encoder.$proc$source/keypad_encoder.sv:55$39'.
Removing empty process `keypad_encoder.$proc$source/keypad_encoder.sv:42$35'.
Found and cleaned up 1 empty switch in `\keypad_encoder.$proc$source/keypad_encoder.sv:0$34'.
Removing empty process `keypad_encoder.$proc$source/keypad_encoder.sv:0$34'.
Removing empty process `keypad_encoder.$proc$source/keypad_encoder.sv:11$32'.
Found and cleaned up 1 empty switch in `\frequency_divider.$proc$source/frequency_divider.sv:0$30'.
Removing empty process `frequency_divider.$proc$source/frequency_divider.sv:0$30'.
Found and cleaned up 1 empty switch in `\frequency_divider.$proc$source/frequency_divider.sv:0$29'.
Removing empty process `frequency_divider.$proc$source/frequency_divider.sv:0$29'.
Found and cleaned up 1 empty switch in `\frequency_divider.$proc$source/frequency_divider.sv:0$28'.
Removing empty process `frequency_divider.$proc$source/frequency_divider.sv:0$28'.
Found and cleaned up 5 empty switches in `\frequency_divider.$proc$source/frequency_divider.sv:0$14'.
Removing empty process `frequency_divider.$proc$source/frequency_divider.sv:0$14'.
Found and cleaned up 2 empty switches in `\clock_div.$proc$source/clock_div.sv:0$10'.
Removing empty process `clock_div.$proc$source/clock_div.sv:0$10'.
Removing empty process `clock_div.$proc$source/clock_div.sv:10$8'.
Found and cleaned up 2 empty switches in `\clock_8Hz.$proc$source/clock_8Hz.sv:0$4'.
Removing empty process `clock_8Hz.$proc$source/clock_8Hz.sv:0$4'.
Removing empty process `clock_8Hz.$proc$source/clock_8Hz.sv:10$2'.
Cleaned up 39 empty switches.

12.2.12. Executing OPT_EXPR pass (perform const folding).
Optimizing module waveshaper.
<suppressed ~1 debug messages>
Optimizing module sound_series_fsm.
<suppressed ~4 debug messages>
Optimizing module sequential_div.
<suppressed ~5 debug messages>
Optimizing module pwm.
<suppressed ~2 debug messages>
Optimizing module oscillator.
<suppressed ~2 debug messages>
Optimizing module mode_fsm.
<suppressed ~2 debug messages>
Optimizing module keypad_encoder.
<suppressed ~3 debug messages>
Optimizing module frequency_divider.
<suppressed ~3 debug messages>
Optimizing module clock_div.
<suppressed ~2 debug messages>
Optimizing module clock_8Hz.
<suppressed ~2 debug messages>
Optimizing module synth.

12.3. Executing OPT_EXPR pass (perform const folding).
Optimizing module waveshaper.
Optimizing module sound_series_fsm.
Optimizing module sequential_div.
Optimizing module pwm.
Optimizing module oscillator.
Optimizing module mode_fsm.
Optimizing module keypad_encoder.
Optimizing module frequency_divider.
Optimizing module clock_div.
Optimizing module clock_8Hz.
Optimizing module synth.

12.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \waveshaper..
Finding unused cells or wires in module \sound_series_fsm..
Finding unused cells or wires in module \sequential_div..
Finding unused cells or wires in module \pwm..
Finding unused cells or wires in module \oscillator..
Finding unused cells or wires in module \mode_fsm..
Finding unused cells or wires in module \keypad_encoder..
Finding unused cells or wires in module \frequency_divider..
Finding unused cells or wires in module \clock_div..
Finding unused cells or wires in module \clock_8Hz..
Finding unused cells or wires in module \synth..
Removed 23 unused cells and 231 unused wires.
<suppressed ~35 debug messages>

12.5. Executing CHECK pass (checking for obvious problems).
Checking module clock_8Hz...
Checking module clock_div...
Checking module frequency_divider...
Checking module keypad_encoder...
Checking module mode_fsm...
Checking module oscillator...
Checking module pwm...
Checking module sequential_div...
Checking module sound_series_fsm...
Checking module synth...
Checking module waveshaper...
Found and reported 0 problems.

12.6. Executing OPT pass (performing simple optimizations).

12.6.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module clock_8Hz.
Optimizing module clock_div.
Optimizing module frequency_divider.
Optimizing module keypad_encoder.
Optimizing module mode_fsm.
Optimizing module oscillator.
Optimizing module pwm.
Optimizing module sequential_div.
Optimizing module sound_series_fsm.
Optimizing module synth.
Optimizing module waveshaper.

12.6.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\clock_8Hz'.
Finding identical cells in module `\clock_div'.
Finding identical cells in module `\frequency_divider'.
Finding identical cells in module `\keypad_encoder'.
Finding identical cells in module `\mode_fsm'.
Finding identical cells in module `\oscillator'.
Finding identical cells in module `\pwm'.
Finding identical cells in module `\sequential_div'.
<suppressed ~21 debug messages>
Finding identical cells in module `\sound_series_fsm'.
<suppressed ~6 debug messages>
Finding identical cells in module `\synth'.
Finding identical cells in module `\waveshaper'.
<suppressed ~3 debug messages>
Removed a total of 10 cells.

12.6.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \clock_8Hz..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
    dead port 2/2 on $mux $procmux$360.
    dead port 2/2 on $mux $procmux$366.
Running muxtree optimizer on module \clock_div..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
    dead port 2/2 on $mux $procmux$342.
    dead port 2/2 on $mux $procmux$348.
Running muxtree optimizer on module \frequency_divider..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
    dead port 2/2 on $mux $procmux$304.
    dead port 1/2 on $mux $procmux$307.
    dead port 2/2 on $mux $procmux$309.
    dead port 1/2 on $mux $procmux$316.
    dead port 2/2 on $mux $procmux$318.
    dead port 2/2 on $mux $procmux$325.
    dead port 2/2 on $mux $procmux$327.
    dead port 2/2 on $mux $procmux$333.
Running muxtree optimizer on module \keypad_encoder..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \mode_fsm..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \oscillator..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
    dead port 2/2 on $mux $procmux$269.
Running muxtree optimizer on module \pwm..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
    dead port 2/2 on $mux $procmux$251.
    dead port 2/2 on $mux $procmux$257.
Running muxtree optimizer on module \sequential_div..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
    dead port 2/2 on $mux $procmux$191.
    dead port 2/2 on $mux $procmux$197.
    dead port 2/2 on $mux $procmux$223.
    dead port 2/2 on $mux $procmux$229.
    dead port 2/2 on $mux $procmux$237.
Running muxtree optimizer on module \sound_series_fsm..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
    dead port 2/2 on $mux $procmux$134.
    dead port 2/2 on $mux $procmux$136.
    dead port 2/2 on $mux $procmux$142.
    dead port 1/2 on $mux $procmux$169.
    dead port 1/2 on $mux $procmux$174.
Running muxtree optimizer on module \synth..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \waveshaper..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 25 multiplexer ports.
<suppressed ~25 debug messages>

12.6.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \clock_8Hz.
  Optimizing cells in module \clock_div.
  Optimizing cells in module \frequency_divider.
  Optimizing cells in module \keypad_encoder.
  Optimizing cells in module \mode_fsm.
  Optimizing cells in module \oscillator.
  Optimizing cells in module \pwm.
  Optimizing cells in module \sequential_div.
  Optimizing cells in module \sound_series_fsm.
  Optimizing cells in module \synth.
  Optimizing cells in module \waveshaper.
Performed a total of 0 changes.

12.6.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\clock_8Hz'.
Finding identical cells in module `\clock_div'.
Finding identical cells in module `\frequency_divider'.
Finding identical cells in module `\keypad_encoder'.
Finding identical cells in module `\mode_fsm'.
Finding identical cells in module `\oscillator'.
Finding identical cells in module `\pwm'.
Finding identical cells in module `\sequential_div'.
<suppressed ~3 debug messages>
Finding identical cells in module `\sound_series_fsm'.
Finding identical cells in module `\synth'.
Finding identical cells in module `\waveshaper'.
Removed a total of 1 cells.

12.6.6. Executing OPT_DFF pass (perform DFF optimizations).

12.6.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \clock_8Hz..
Finding unused cells or wires in module \clock_div..
Finding unused cells or wires in module \frequency_divider..
Finding unused cells or wires in module \keypad_encoder..
Finding unused cells or wires in module \mode_fsm..
Finding unused cells or wires in module \oscillator..
Finding unused cells or wires in module \pwm..
Finding unused cells or wires in module \sequential_div..
Finding unused cells or wires in module \sound_series_fsm..
Finding unused cells or wires in module \synth..
Finding unused cells or wires in module \waveshaper..
Removed 0 unused cells and 36 unused wires.
<suppressed ~8 debug messages>

12.6.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module clock_8Hz.
Optimizing module clock_div.
Optimizing module frequency_divider.
Optimizing module keypad_encoder.
Optimizing module mode_fsm.
Optimizing module oscillator.
Optimizing module pwm.
Optimizing module sequential_div.
Optimizing module sound_series_fsm.
Optimizing module synth.
Optimizing module waveshaper.

12.6.9. Rerunning OPT passes. (Maybe there is more to do..)

12.6.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \clock_8Hz..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \clock_div..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \frequency_divider..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \keypad_encoder..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \mode_fsm..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \oscillator..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \pwm..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \sequential_div..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \sound_series_fsm..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \synth..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \waveshaper..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~25 debug messages>

12.6.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \clock_8Hz.
  Optimizing cells in module \clock_div.
  Optimizing cells in module \frequency_divider.
  Optimizing cells in module \keypad_encoder.
  Optimizing cells in module \mode_fsm.
  Optimizing cells in module \oscillator.
  Optimizing cells in module \pwm.
  Optimizing cells in module \sequential_div.
    New ctrl vector for $pmux cell $procmux$239: { \load \div $auto$opt_reduce.cc:134:opt_pmux$394 }
  Optimizing cells in module \sequential_div.
  Optimizing cells in module \sound_series_fsm.
  Optimizing cells in module \synth.
  Optimizing cells in module \waveshaper.
Performed a total of 1 changes.

12.6.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\clock_8Hz'.
Finding identical cells in module `\clock_div'.
Finding identical cells in module `\frequency_divider'.
Finding identical cells in module `\keypad_encoder'.
Finding identical cells in module `\mode_fsm'.
Finding identical cells in module `\oscillator'.
Finding identical cells in module `\pwm'.
Finding identical cells in module `\sequential_div'.
Finding identical cells in module `\sound_series_fsm'.
Finding identical cells in module `\synth'.
Finding identical cells in module `\waveshaper'.
Removed a total of 0 cells.

12.6.13. Executing OPT_DFF pass (perform DFF optimizations).

12.6.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \clock_8Hz..
Finding unused cells or wires in module \clock_div..
Finding unused cells or wires in module \frequency_divider..
Finding unused cells or wires in module \keypad_encoder..
Finding unused cells or wires in module \mode_fsm..
Finding unused cells or wires in module \oscillator..
Finding unused cells or wires in module \pwm..
Finding unused cells or wires in module \sequential_div..
Finding unused cells or wires in module \sound_series_fsm..
Finding unused cells or wires in module \synth..
Finding unused cells or wires in module \waveshaper..

12.6.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module clock_8Hz.
Optimizing module clock_div.
Optimizing module frequency_divider.
Optimizing module keypad_encoder.
Optimizing module mode_fsm.
Optimizing module oscillator.
Optimizing module pwm.
Optimizing module sequential_div.
Optimizing module sound_series_fsm.
Optimizing module synth.
Optimizing module waveshaper.

12.6.16. Rerunning OPT passes. (Maybe there is more to do..)

12.6.17. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \clock_8Hz..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \clock_div..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \frequency_divider..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \keypad_encoder..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \mode_fsm..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \oscillator..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \pwm..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \sequential_div..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \sound_series_fsm..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \synth..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \waveshaper..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~25 debug messages>

12.6.18. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \clock_8Hz.
  Optimizing cells in module \clock_div.
  Optimizing cells in module \frequency_divider.
  Optimizing cells in module \keypad_encoder.
  Optimizing cells in module \mode_fsm.
  Optimizing cells in module \oscillator.
  Optimizing cells in module \pwm.
  Optimizing cells in module \sequential_div.
  Optimizing cells in module \sound_series_fsm.
  Optimizing cells in module \synth.
  Optimizing cells in module \waveshaper.
Performed a total of 0 changes.

12.6.19. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\clock_8Hz'.
Finding identical cells in module `\clock_div'.
Finding identical cells in module `\frequency_divider'.
Finding identical cells in module `\keypad_encoder'.
Finding identical cells in module `\mode_fsm'.
Finding identical cells in module `\oscillator'.
Finding identical cells in module `\pwm'.
Finding identical cells in module `\sequential_div'.
Finding identical cells in module `\sound_series_fsm'.
Finding identical cells in module `\synth'.
Finding identical cells in module `\waveshaper'.
Removed a total of 0 cells.

12.6.20. Executing OPT_DFF pass (perform DFF optimizations).

12.6.21. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \clock_8Hz..
Finding unused cells or wires in module \clock_div..
Finding unused cells or wires in module \frequency_divider..
Finding unused cells or wires in module \keypad_encoder..
Finding unused cells or wires in module \mode_fsm..
Finding unused cells or wires in module \oscillator..
Finding unused cells or wires in module \pwm..
Finding unused cells or wires in module \sequential_div..
Finding unused cells or wires in module \sound_series_fsm..
Finding unused cells or wires in module \synth..
Finding unused cells or wires in module \waveshaper..

12.6.22. Executing OPT_EXPR pass (perform const folding).
Optimizing module clock_8Hz.
Optimizing module clock_div.
Optimizing module frequency_divider.
Optimizing module keypad_encoder.
Optimizing module mode_fsm.
Optimizing module oscillator.
Optimizing module pwm.
Optimizing module sequential_div.
Optimizing module sound_series_fsm.
Optimizing module synth.
Optimizing module waveshaper.

12.6.23. Finished OPT passes. (There is nothing left to do.)

12.7. Executing FSM pass (extract and optimize FSM).

12.7.1. Executing FSM_DETECT pass (finding FSMs in design).
Not marking mode_fsm.mode as FSM state register:
    Register is connected to module port.
    Users of register don't seem to benefit from recoding.
    Circuit seems to be self-resetting.
Not marking sequential_div.state as FSM state register:
    Circuit seems to be self-resetting.
Not marking sound_series_fsm.sound as FSM state register:
    Circuit seems to be self-resetting.

12.7.2. Executing FSM_EXTRACT pass (extracting FSM from design).

12.7.3. Executing FSM_OPT pass (simple optimizations of FSMs).

12.7.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \clock_8Hz..
Finding unused cells or wires in module \clock_div..
Finding unused cells or wires in module \frequency_divider..
Finding unused cells or wires in module \keypad_encoder..
Finding unused cells or wires in module \mode_fsm..
Finding unused cells or wires in module \oscillator..
Finding unused cells or wires in module \pwm..
Finding unused cells or wires in module \sequential_div..
Finding unused cells or wires in module \sound_series_fsm..
Finding unused cells or wires in module \synth..
Finding unused cells or wires in module \waveshaper..

12.7.5. Executing FSM_OPT pass (simple optimizations of FSMs).

12.7.6. Executing FSM_RECODE pass (re-assigning FSM state encoding).

12.7.7. Executing FSM_INFO pass (dumping all available information on FSM cells).

12.7.8. Executing FSM_MAP pass (mapping FSMs to basic logic).

12.8. Executing OPT pass (performing simple optimizations).

12.8.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module clock_8Hz.
Optimizing module clock_div.
Optimizing module frequency_divider.
Optimizing module keypad_encoder.
Optimizing module mode_fsm.
Optimizing module oscillator.
Optimizing module pwm.
Optimizing module sequential_div.
Optimizing module sound_series_fsm.
Optimizing module synth.
Optimizing module waveshaper.

12.8.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\clock_8Hz'.
Finding identical cells in module `\clock_div'.
Finding identical cells in module `\frequency_divider'.
Finding identical cells in module `\keypad_encoder'.
Finding identical cells in module `\mode_fsm'.
Finding identical cells in module `\oscillator'.
Finding identical cells in module `\pwm'.
Finding identical cells in module `\sequential_div'.
Finding identical cells in module `\sound_series_fsm'.
Finding identical cells in module `\synth'.
Finding identical cells in module `\waveshaper'.
Removed a total of 0 cells.

12.8.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \clock_8Hz..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \clock_div..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \frequency_divider..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \keypad_encoder..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \mode_fsm..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \oscillator..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \pwm..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \sequential_div..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \sound_series_fsm..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \synth..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \waveshaper..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~25 debug messages>

12.8.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \clock_8Hz.
  Optimizing cells in module \clock_div.
  Optimizing cells in module \frequency_divider.
  Optimizing cells in module \keypad_encoder.
  Optimizing cells in module \mode_fsm.
  Optimizing cells in module \oscillator.
  Optimizing cells in module \pwm.
  Optimizing cells in module \sequential_div.
  Optimizing cells in module \sound_series_fsm.
  Optimizing cells in module \synth.
  Optimizing cells in module \waveshaper.
Performed a total of 0 changes.

12.8.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\clock_8Hz'.
Finding identical cells in module `\clock_div'.
Finding identical cells in module `\frequency_divider'.
Finding identical cells in module `\keypad_encoder'.
Finding identical cells in module `\mode_fsm'.
Finding identical cells in module `\oscillator'.
Finding identical cells in module `\pwm'.
Finding identical cells in module `\sequential_div'.
Finding identical cells in module `\sound_series_fsm'.
Finding identical cells in module `\synth'.
Finding identical cells in module `\waveshaper'.
Removed a total of 0 cells.

12.8.6. Executing OPT_DFF pass (perform DFF optimizations).
Adding EN signal on $procdff$382 ($adff) from module sequential_div (D = $add$source/sequential_div.sv:23$67_Y [2:0], Q = \count_div).
Adding EN signal on $procdff$381 ($adff) from module sequential_div (D = \next_state, Q = \state).
Adding EN signal on $procdff$380 ($adff) from module sequential_div (D = \count, Q = \dividend).
Adding EN signal on $procdff$379 ($adff) from module sequential_div (D = \Q, Q = \q_out).
Adding EN signal on $procdff$378 ($adff) from module sequential_div (D = \next_r, Q = \R).
Adding EN signal on $procdff$377 ($adff) from module sequential_div (D = \next_q, Q = \Q).
Adding EN signal on $procdff$376 ($adff) from module sequential_div (D = \divider, Q = \D).
Adding EN signal on $procdff$374 ($adff) from module sound_series_fsm (D = \next_count, Q = \count).

12.8.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \clock_8Hz..
Finding unused cells or wires in module \clock_div..
Finding unused cells or wires in module \frequency_divider..
Finding unused cells or wires in module \keypad_encoder..
Finding unused cells or wires in module \mode_fsm..
Finding unused cells or wires in module \oscillator..
Finding unused cells or wires in module \pwm..
Finding unused cells or wires in module \sequential_div..
Finding unused cells or wires in module \sound_series_fsm..
Finding unused cells or wires in module \synth..
Finding unused cells or wires in module \waveshaper..
Removed 4 unused cells and 4 unused wires.
<suppressed ~8 debug messages>

12.8.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module clock_8Hz.
Optimizing module clock_div.
Optimizing module frequency_divider.
Optimizing module keypad_encoder.
Optimizing module mode_fsm.
Optimizing module oscillator.
Optimizing module pwm.
Optimizing module sequential_div.
<suppressed ~2 debug messages>
Optimizing module sound_series_fsm.
Optimizing module synth.
Optimizing module waveshaper.

12.8.9. Rerunning OPT passes. (Maybe there is more to do..)

12.8.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \clock_8Hz..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \clock_div..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \frequency_divider..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \keypad_encoder..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \mode_fsm..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \oscillator..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \pwm..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \sequential_div..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \sound_series_fsm..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \synth..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \waveshaper..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~21 debug messages>

12.8.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \clock_8Hz.
  Optimizing cells in module \clock_div.
  Optimizing cells in module \frequency_divider.
  Optimizing cells in module \keypad_encoder.
  Optimizing cells in module \mode_fsm.
  Optimizing cells in module \oscillator.
  Optimizing cells in module \pwm.
  Optimizing cells in module \sequential_div.
  Optimizing cells in module \sound_series_fsm.
  Optimizing cells in module \synth.
  Optimizing cells in module \waveshaper.
Performed a total of 0 changes.

12.8.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\clock_8Hz'.
Finding identical cells in module `\clock_div'.
Finding identical cells in module `\frequency_divider'.
Finding identical cells in module `\keypad_encoder'.
Finding identical cells in module `\mode_fsm'.
Finding identical cells in module `\oscillator'.
Finding identical cells in module `\pwm'.
Finding identical cells in module `\sequential_div'.
<suppressed ~3 debug messages>
Finding identical cells in module `\sound_series_fsm'.
Finding identical cells in module `\synth'.
Finding identical cells in module `\waveshaper'.
Removed a total of 1 cells.

12.8.13. Executing OPT_DFF pass (perform DFF optimizations).

12.8.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \clock_8Hz..
Finding unused cells or wires in module \clock_div..
Finding unused cells or wires in module \frequency_divider..
Finding unused cells or wires in module \keypad_encoder..
Finding unused cells or wires in module \mode_fsm..
Finding unused cells or wires in module \oscillator..
Finding unused cells or wires in module \pwm..
Finding unused cells or wires in module \sequential_div..
Finding unused cells or wires in module \sound_series_fsm..
Finding unused cells or wires in module \synth..
Finding unused cells or wires in module \waveshaper..
Removed 0 unused cells and 1 unused wires.
<suppressed ~1 debug messages>

12.8.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module clock_8Hz.
Optimizing module clock_div.
Optimizing module frequency_divider.
Optimizing module keypad_encoder.
Optimizing module mode_fsm.
Optimizing module oscillator.
Optimizing module pwm.
Optimizing module sequential_div.
Optimizing module sound_series_fsm.
Optimizing module synth.
Optimizing module waveshaper.

12.8.16. Rerunning OPT passes. (Maybe there is more to do..)

12.8.17. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \clock_8Hz..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \clock_div..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \frequency_divider..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \keypad_encoder..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \mode_fsm..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \oscillator..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \pwm..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \sequential_div..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \sound_series_fsm..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \synth..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \waveshaper..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~21 debug messages>

12.8.18. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \clock_8Hz.
  Optimizing cells in module \clock_div.
  Optimizing cells in module \frequency_divider.
  Optimizing cells in module \keypad_encoder.
  Optimizing cells in module \mode_fsm.
  Optimizing cells in module \oscillator.
  Optimizing cells in module \pwm.
  Optimizing cells in module \sequential_div.
  Optimizing cells in module \sound_series_fsm.
  Optimizing cells in module \synth.
  Optimizing cells in module \waveshaper.
Performed a total of 0 changes.

12.8.19. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\clock_8Hz'.
Finding identical cells in module `\clock_div'.
Finding identical cells in module `\frequency_divider'.
Finding identical cells in module `\keypad_encoder'.
Finding identical cells in module `\mode_fsm'.
Finding identical cells in module `\oscillator'.
Finding identical cells in module `\pwm'.
Finding identical cells in module `\sequential_div'.
Finding identical cells in module `\sound_series_fsm'.
Finding identical cells in module `\synth'.
Finding identical cells in module `\waveshaper'.
Removed a total of 0 cells.

12.8.20. Executing OPT_DFF pass (perform DFF optimizations).

12.8.21. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \clock_8Hz..
Finding unused cells or wires in module \clock_div..
Finding unused cells or wires in module \frequency_divider..
Finding unused cells or wires in module \keypad_encoder..
Finding unused cells or wires in module \mode_fsm..
Finding unused cells or wires in module \oscillator..
Finding unused cells or wires in module \pwm..
Finding unused cells or wires in module \sequential_div..
Finding unused cells or wires in module \sound_series_fsm..
Finding unused cells or wires in module \synth..
Finding unused cells or wires in module \waveshaper..

12.8.22. Executing OPT_EXPR pass (perform const folding).
Optimizing module clock_8Hz.
Optimizing module clock_div.
Optimizing module frequency_divider.
Optimizing module keypad_encoder.
Optimizing module mode_fsm.
Optimizing module oscillator.
Optimizing module pwm.
Optimizing module sequential_div.
Optimizing module sound_series_fsm.
Optimizing module synth.
Optimizing module waveshaper.

12.8.23. Finished OPT passes. (There is nothing left to do.)

12.9. Executing WREDUCE pass (reducing word size of cells).
Removed top 2 bits (of 21) from mux cell clock_8Hz.$ternary$source/clock_8Hz.sv:8$1 ($mux).
Removed top 31 bits (of 32) from port B of cell clock_8Hz.$add$source/clock_8Hz.sv:27$7 ($add).
Removed top 11 bits (of 32) from port Y of cell clock_8Hz.$add$source/clock_8Hz.sv:27$7 ($add).
Removed top 11 bits (of 32) from wire clock_8Hz.$add$source/clock_8Hz.sv:27$7_Y.
Removed top 2 bits (of 21) from wire clock_8Hz.max.
Removed top 31 bits (of 32) from port B of cell clock_div.$add$source/clock_div.sv:28$13 ($add).
Removed top 24 bits (of 32) from port Y of cell clock_div.$add$source/clock_div.sv:28$13 ($add).
Removed top 24 bits (of 32) from wire clock_div.$add$source/clock_div.sv:28$13_Y.
Removed top 28 address bits (of 32) from memory init port frequency_divider.$auto$mem.cc:319:emit$119 ($auto$proc_rom.cc:150:do_switch$117).
Removed top 28 address bits (of 32) from memory init port frequency_divider.$auto$mem.cc:319:emit$123 ($auto$proc_rom.cc:150:do_switch$121).
Removed top 1 bits (of 2) from mux cell mode_fsm.$ternary$source/mode_fsm.sv:19$46 ($mux).
Removed top 1 bits (of 2) from mux cell mode_fsm.$ternary$source/mode_fsm.sv:21$48 ($mux).
Removed top 1 bits (of 2) from port B of cell mode_fsm.$procmux$277_CMP0 ($eq).
Removed top 1 bits (of 2) from wire mode_fsm.$ternary$source/mode_fsm.sv:19$46_Y.
Removed top 1 bits (of 2) from wire mode_fsm.$ternary$source/mode_fsm.sv:21$48_Y.
Removed top 31 bits (of 32) from port B of cell oscillator.$add$source/oscillator.sv:17$55 ($add).
Removed top 16 bits (of 32) from port Y of cell oscillator.$add$source/oscillator.sv:17$55 ($add).
Removed top 16 bits (of 32) from wire oscillator.$add$source/oscillator.sv:17$55_Y.
Removed top 24 bits (of 32) from port B of cell pwm.$ge$source/pwm.sv:22$60 ($ge).
Removed top 31 bits (of 32) from port B of cell pwm.$add$source/pwm.sv:26$61 ($add).
Removed top 24 bits (of 32) from port Y of cell pwm.$add$source/pwm.sv:26$61 ($add).
Removed top 24 bits (of 32) from wire pwm.$add$source/pwm.sv:26$61_Y.
Removed top 31 bits (of 32) from port B of cell sequential_div.$add$source/sequential_div.sv:23$67 ($add).
Removed top 29 bits (of 32) from port Y of cell sequential_div.$add$source/sequential_div.sv:23$67 ($add).
Removed top 1 bits (of 2) from port B of cell sequential_div.$eq$source/sequential_div.sv:45$72 ($eq).
Removed top 1 bits (of 17) from port B of cell sequential_div.$ge$source/sequential_div.sv:101$80 ($ge).
Removed top 1 bits (of 2) from port B of cell sequential_div.$auto$opt_dff.cc:195:make_patterns_logic$400 ($ne).
Removed top 7 bits (of 8) from mux cell sequential_div.$procmux$189 ($mux).
Removed top 29 bits (of 32) from wire sequential_div.$add$source/sequential_div.sv:23$67_Y.
Removed top 1 bits (of 2) from mux cell sound_series_fsm.$ternary$source/sound_series_fsm.sv:20$87 ($mux).
Removed top 1 bits (of 2) from mux cell sound_series_fsm.$ternary$source/sound_series_fsm.sv:21$88 ($mux).
Removed top 1 bits (of 2) from mux cell sound_series_fsm.$ternary$source/sound_series_fsm.sv:22$89 ($mux).
Removed top 1 bits (of 2) from mux cell sound_series_fsm.$ternary$source/sound_series_fsm.sv:23$90 ($mux).
Removed top 1 bits (of 2) from port B of cell sound_series_fsm.$eq$source/sound_series_fsm.sv:27$91 ($eq).
Removed top 21 bits (of 32) from port A of cell sound_series_fsm.$sub$source/sound_series_fsm.sv:70$96 ($sub).
Removed top 31 bits (of 32) from port B of cell sound_series_fsm.$sub$source/sound_series_fsm.sv:70$96 ($sub).
Removed top 20 bits (of 32) from port Y of cell sound_series_fsm.$sub$source/sound_series_fsm.sv:70$96 ($sub).
Removed top 31 bits (of 32) from port B of cell sound_series_fsm.$add$source/sound_series_fsm.sv:0$97 ($add).
Removed top 29 bits (of 32) from port B of cell sound_series_fsm.$sub$source/sound_series_fsm.sv:0$98 ($sub).
Removed top 8 bits (of 9) from port B of cell sound_series_fsm.$eq$source/sound_series_fsm.sv:101$106 ($eq).
Removed top 28 bits (of 32) from port B of cell sound_series_fsm.$ge$source/sound_series_fsm.sv:101$107 ($ge).
Removed top 31 bits (of 32) from port B of cell sound_series_fsm.$sub$source/sound_series_fsm.sv:105$109 ($sub).
Removed top 23 bits (of 32) from port Y of cell sound_series_fsm.$sub$source/sound_series_fsm.sv:105$109 ($sub).
Removed top 23 bits (of 32) from wire sound_series_fsm.$sub$source/sound_series_fsm.sv:105$109_Y.
Removed top 1 bits (of 2) from wire sound_series_fsm.$ternary$source/sound_series_fsm.sv:20$87_Y.
Removed top 1 bits (of 2) from wire sound_series_fsm.$ternary$source/sound_series_fsm.sv:22$89_Y.
Removed top 1 bits (of 10) from port A of cell waveshaper.$sub$source/waveshaper.sv:12$110 ($sub).
Removed top 1 bits (of 10) from port B of cell waveshaper.$sub$source/waveshaper.sv:12$110 ($sub).
Removed top 2 bits (of 10) from port Y of cell waveshaper.$sub$source/waveshaper.sv:12$110 ($sub).
Removed top 1 bits (of 9) from port A of cell waveshaper.$sub$source/waveshaper.sv:12$110 ($sub).
Removed top 1 bits (of 9) from port B of cell waveshaper.$sub$source/waveshaper.sv:12$110 ($sub).
Removed top 24 bits (of 32) from port B of cell waveshaper.$ge$source/waveshaper.sv:17$112 ($ge).
Removed top 24 bits (of 32) from mux cell waveshaper.$ternary$source/waveshaper.sv:18$115 ($mux).
Removed top 1 bits (of 2) from port B of cell waveshaper.$procmux$127_CMP0 ($eq).
Removed top 24 bits (of 32) from wire waveshaper.$ternary$source/waveshaper.sv:18$115_Y.
Removed top 2 bits (of 10) from wire waveshaper.int_2.

12.10. Executing PEEPOPT pass (run peephole optimizers).

12.11. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \clock_8Hz..
Finding unused cells or wires in module \clock_div..
Finding unused cells or wires in module \frequency_divider..
Finding unused cells or wires in module \keypad_encoder..
Finding unused cells or wires in module \mode_fsm..
Finding unused cells or wires in module \oscillator..
Finding unused cells or wires in module \pwm..
Finding unused cells or wires in module \sequential_div..
Finding unused cells or wires in module \sound_series_fsm..
Finding unused cells or wires in module \synth..
Finding unused cells or wires in module \waveshaper..
Removed 0 unused cells and 13 unused wires.
<suppressed ~8 debug messages>

12.12. Executing ALUMACC pass (create $alu and $macc cells).
Extracting $alu and $macc cells in module clock_8Hz:
  creating $macc model for $add$source/clock_8Hz.sv:27$7 ($add).
  creating $alu model for $macc $add$source/clock_8Hz.sv:27$7.
  creating $alu cell for $add$source/clock_8Hz.sv:27$7: $auto$alumacc.cc:485:replace_alu$428
  created 1 $alu and 0 $macc cells.
Extracting $alu and $macc cells in module clock_div:
  creating $macc model for $add$source/clock_div.sv:28$13 ($add).
  creating $alu model for $macc $add$source/clock_div.sv:28$13.
  creating $alu cell for $add$source/clock_div.sv:28$13: $auto$alumacc.cc:485:replace_alu$431
  created 1 $alu and 0 $macc cells.
Extracting $alu and $macc cells in module frequency_divider:
  created 0 $alu and 0 $macc cells.
Extracting $alu and $macc cells in module keypad_encoder:
  created 0 $alu and 0 $macc cells.
Extracting $alu and $macc cells in module mode_fsm:
  created 0 $alu and 0 $macc cells.
Extracting $alu and $macc cells in module oscillator:
  creating $macc model for $add$source/oscillator.sv:17$55 ($add).
  creating $alu model for $macc $add$source/oscillator.sv:17$55.
  creating $alu model for $ge$source/oscillator.sv:14$54 ($ge): new $alu
  creating $alu cell for $ge$source/oscillator.sv:14$54: $auto$alumacc.cc:485:replace_alu$435
  creating $alu cell for $add$source/oscillator.sv:17$55: $auto$alumacc.cc:485:replace_alu$444
  created 2 $alu and 0 $macc cells.
Extracting $alu and $macc cells in module pwm:
  creating $macc model for $add$source/pwm.sv:26$61 ($add).
  creating $alu model for $macc $add$source/pwm.sv:26$61.
  creating $alu model for $ge$source/pwm.sv:22$60 ($ge): new $alu
  creating $alu model for $lt$source/pwm.sv:29$62 ($lt): new $alu
  creating $alu cell for $lt$source/pwm.sv:29$62: $auto$alumacc.cc:485:replace_alu$449
  creating $alu cell for $ge$source/pwm.sv:22$60: $auto$alumacc.cc:485:replace_alu$454
  creating $alu cell for $add$source/pwm.sv:26$61: $auto$alumacc.cc:485:replace_alu$467
  created 3 $alu and 0 $macc cells.
Extracting $alu and $macc cells in module sequential_div:
  creating $macc model for $add$source/sequential_div.sv:23$67 ($add).
  creating $macc model for $sub$source/sequential_div.sv:102$82 ($sub).
  creating $alu model for $macc $sub$source/sequential_div.sv:102$82.
  creating $alu model for $macc $add$source/sequential_div.sv:23$67.
  creating $alu model for $ge$source/sequential_div.sv:101$80 ($ge): new $alu
  creating $alu cell for $ge$source/sequential_div.sv:101$80: $auto$alumacc.cc:485:replace_alu$471
  creating $alu cell for $add$source/sequential_div.sv:23$67: $auto$alumacc.cc:485:replace_alu$480
  creating $alu cell for $sub$source/sequential_div.sv:102$82: $auto$alumacc.cc:485:replace_alu$483
  created 3 $alu and 0 $macc cells.
Extracting $alu and $macc cells in module sound_series_fsm:
  creating $macc model for $add$source/sound_series_fsm.sv:0$97 ($add).
  creating $macc model for $sub$source/sound_series_fsm.sv:0$98 ($sub).
  creating $macc model for $sub$source/sound_series_fsm.sv:105$109 ($sub).
  creating $macc model for $sub$source/sound_series_fsm.sv:70$96 ($sub).
  merging $macc model for $add$source/sound_series_fsm.sv:0$97 into $sub$source/sound_series_fsm.sv:0$98.
  creating $alu model for $macc $sub$source/sound_series_fsm.sv:105$109.
  creating $alu model for $macc $sub$source/sound_series_fsm.sv:70$96.
  creating $macc cell for $sub$source/sound_series_fsm.sv:0$98: $auto$alumacc.cc:365:replace_macc$486
  creating $alu model for $ge$source/sound_series_fsm.sv:101$107 ($ge): new $alu
  creating $alu cell for $ge$source/sound_series_fsm.sv:101$107: $auto$alumacc.cc:485:replace_alu$488
  creating $alu cell for $sub$source/sound_series_fsm.sv:70$96: $auto$alumacc.cc:485:replace_alu$497
  creating $alu cell for $sub$source/sound_series_fsm.sv:105$109: $auto$alumacc.cc:485:replace_alu$500
  created 3 $alu and 1 $macc cells.
Extracting $alu and $macc cells in module synth:
  created 0 $alu and 0 $macc cells.
Extracting $alu and $macc cells in module waveshaper:
  creating $macc model for $sub$source/waveshaper.sv:12$110 ($sub).
  creating $alu model for $macc $sub$source/waveshaper.sv:12$110.
  creating $alu model for $ge$source/waveshaper.sv:17$112 ($ge): new $alu
  creating $alu cell for $ge$source/waveshaper.sv:17$112: $auto$alumacc.cc:485:replace_alu$504
  creating $alu cell for $sub$source/waveshaper.sv:12$110: $auto$alumacc.cc:485:replace_alu$517
  created 2 $alu and 0 $macc cells.

12.13. Executing SHARE pass (SAT-based resource sharing).
Found 2 cells in module frequency_divider that may be considered for resource sharing.
  Analyzing resource sharing options for $auto$mem.cc:273:emit$122 ($memrd_v2):
    Found 1 activation_patterns using ctrl signal \is_FPGA.
    No candidates found.
  Analyzing resource sharing options for $auto$mem.cc:273:emit$118 ($memrd_v2):
    Found 1 activation_patterns using ctrl signal \is_FPGA.
    No candidates found.

12.14. Executing OPT pass (performing simple optimizations).

12.14.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module clock_8Hz.
Optimizing module clock_div.
Optimizing module frequency_divider.
Optimizing module keypad_encoder.
Optimizing module mode_fsm.
Optimizing module oscillator.
Optimizing module pwm.
<suppressed ~1 debug messages>
Optimizing module sequential_div.
Optimizing module sound_series_fsm.
Optimizing module synth.
Optimizing module waveshaper.

12.14.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\clock_8Hz'.
Finding identical cells in module `\clock_div'.
Finding identical cells in module `\frequency_divider'.
Finding identical cells in module `\keypad_encoder'.
Finding identical cells in module `\mode_fsm'.
Finding identical cells in module `\oscillator'.
Finding identical cells in module `\pwm'.
Finding identical cells in module `\sequential_div'.
Finding identical cells in module `\sound_series_fsm'.
Finding identical cells in module `\synth'.
Finding identical cells in module `\waveshaper'.
Removed a total of 0 cells.

12.14.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \clock_8Hz..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \clock_div..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \frequency_divider..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \keypad_encoder..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \mode_fsm..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \oscillator..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \pwm..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \sequential_div..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \sound_series_fsm..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \synth..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \waveshaper..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~21 debug messages>

12.14.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \clock_8Hz.
  Optimizing cells in module \clock_div.
  Optimizing cells in module \frequency_divider.
  Optimizing cells in module \keypad_encoder.
  Optimizing cells in module \mode_fsm.
  Optimizing cells in module \oscillator.
  Optimizing cells in module \pwm.
  Optimizing cells in module \sequential_div.
  Optimizing cells in module \sound_series_fsm.
  Optimizing cells in module \synth.
  Optimizing cells in module \waveshaper.
Performed a total of 0 changes.

12.14.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\clock_8Hz'.
Finding identical cells in module `\clock_div'.
Finding identical cells in module `\frequency_divider'.
Finding identical cells in module `\keypad_encoder'.
Finding identical cells in module `\mode_fsm'.
Finding identical cells in module `\oscillator'.
Finding identical cells in module `\pwm'.
Finding identical cells in module `\sequential_div'.
Finding identical cells in module `\sound_series_fsm'.
<suppressed ~6 debug messages>
Finding identical cells in module `\synth'.
Finding identical cells in module `\waveshaper'.
Removed a total of 2 cells.

12.14.6. Executing OPT_DFF pass (perform DFF optimizations).

12.14.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \clock_8Hz..
Finding unused cells or wires in module \clock_div..
Finding unused cells or wires in module \frequency_divider..
Finding unused cells or wires in module \keypad_encoder..
Finding unused cells or wires in module \mode_fsm..
Finding unused cells or wires in module \oscillator..
Finding unused cells or wires in module \pwm..
Finding unused cells or wires in module \sequential_div..
Finding unused cells or wires in module \sound_series_fsm..
Finding unused cells or wires in module \synth..
Finding unused cells or wires in module \waveshaper..
Removed 2 unused cells and 10 unused wires.
<suppressed ~7 debug messages>

12.14.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module clock_8Hz.
Optimizing module clock_div.
Optimizing module frequency_divider.
Optimizing module keypad_encoder.
Optimizing module mode_fsm.
Optimizing module oscillator.
Optimizing module pwm.
Optimizing module sequential_div.
Optimizing module sound_series_fsm.
Optimizing module synth.
Optimizing module waveshaper.

12.14.9. Rerunning OPT passes. (Maybe there is more to do..)

12.14.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \clock_8Hz..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \clock_div..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \frequency_divider..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \keypad_encoder..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \mode_fsm..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \oscillator..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \pwm..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \sequential_div..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \sound_series_fsm..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \synth..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \waveshaper..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~21 debug messages>

12.14.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \clock_8Hz.
  Optimizing cells in module \clock_div.
  Optimizing cells in module \frequency_divider.
  Optimizing cells in module \keypad_encoder.
  Optimizing cells in module \mode_fsm.
  Optimizing cells in module \oscillator.
  Optimizing cells in module \pwm.
  Optimizing cells in module \sequential_div.
  Optimizing cells in module \sound_series_fsm.
  Optimizing cells in module \synth.
  Optimizing cells in module \waveshaper.
Performed a total of 0 changes.

12.14.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\clock_8Hz'.
Finding identical cells in module `\clock_div'.
Finding identical cells in module `\frequency_divider'.
Finding identical cells in module `\keypad_encoder'.
Finding identical cells in module `\mode_fsm'.
Finding identical cells in module `\oscillator'.
Finding identical cells in module `\pwm'.
Finding identical cells in module `\sequential_div'.
Finding identical cells in module `\sound_series_fsm'.
Finding identical cells in module `\synth'.
Finding identical cells in module `\waveshaper'.
Removed a total of 0 cells.

12.14.13. Executing OPT_DFF pass (perform DFF optimizations).

12.14.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \clock_8Hz..
Finding unused cells or wires in module \clock_div..
Finding unused cells or wires in module \frequency_divider..
Finding unused cells or wires in module \keypad_encoder..
Finding unused cells or wires in module \mode_fsm..
Finding unused cells or wires in module \oscillator..
Finding unused cells or wires in module \pwm..
Finding unused cells or wires in module \sequential_div..
Finding unused cells or wires in module \sound_series_fsm..
Finding unused cells or wires in module \synth..
Finding unused cells or wires in module \waveshaper..

12.14.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module clock_8Hz.
Optimizing module clock_div.
Optimizing module frequency_divider.
Optimizing module keypad_encoder.
Optimizing module mode_fsm.
Optimizing module oscillator.
Optimizing module pwm.
Optimizing module sequential_div.
Optimizing module sound_series_fsm.
Optimizing module synth.
Optimizing module waveshaper.

12.14.16. Finished OPT passes. (There is nothing left to do.)

12.15. Executing MEMORY pass.

12.15.1. Executing OPT_MEM pass (optimize memories).
Performed a total of 0 transformations.

12.15.2. Executing OPT_MEM_PRIORITY pass (removing unnecessary memory write priority relations).
Performed a total of 0 transformations.

12.15.3. Executing OPT_MEM_FEEDBACK pass (finding memory read-to-write feedback paths).

12.15.4. Executing MEMORY_BMUX2ROM pass (converting muxes to ROMs).

12.15.5. Executing MEMORY_DFF pass (merging $dff cells to $memrd).
Checking read port `$auto$proc_rom.cc:150:do_switch$117'[0] in module `\frequency_divider': no output FF found.
Checking read port `$auto$proc_rom.cc:150:do_switch$121'[0] in module `\frequency_divider': no output FF found.
Checking read port address `$auto$proc_rom.cc:150:do_switch$117'[0] in module `\frequency_divider': no address FF found.
Checking read port address `$auto$proc_rom.cc:150:do_switch$121'[0] in module `\frequency_divider': no address FF found.

12.15.6. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \clock_8Hz..
Finding unused cells or wires in module \clock_div..
Finding unused cells or wires in module \frequency_divider..
Finding unused cells or wires in module \keypad_encoder..
Finding unused cells or wires in module \mode_fsm..
Finding unused cells or wires in module \oscillator..
Finding unused cells or wires in module \pwm..
Finding unused cells or wires in module \sequential_div..
Finding unused cells or wires in module \sound_series_fsm..
Finding unused cells or wires in module \synth..
Finding unused cells or wires in module \waveshaper..

12.15.7. Executing MEMORY_SHARE pass (consolidating $memrd/$memwr cells).

12.15.8. Executing OPT_MEM_WIDEN pass (optimize memories where all ports are wide).
Performed a total of 0 transformations.

12.15.9. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \clock_8Hz..
Finding unused cells or wires in module \clock_div..
Finding unused cells or wires in module \frequency_divider..
Finding unused cells or wires in module \keypad_encoder..
Finding unused cells or wires in module \mode_fsm..
Finding unused cells or wires in module \oscillator..
Finding unused cells or wires in module \pwm..
Finding unused cells or wires in module \sequential_div..
Finding unused cells or wires in module \sound_series_fsm..
Finding unused cells or wires in module \synth..
Finding unused cells or wires in module \waveshaper..

12.15.10. Executing MEMORY_COLLECT pass (generating $mem cells).

12.16. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \clock_8Hz..
Finding unused cells or wires in module \clock_div..
Finding unused cells or wires in module \frequency_divider..
Finding unused cells or wires in module \keypad_encoder..
Finding unused cells or wires in module \mode_fsm..
Finding unused cells or wires in module \oscillator..
Finding unused cells or wires in module \pwm..
Finding unused cells or wires in module \sequential_div..
Finding unused cells or wires in module \sound_series_fsm..
Finding unused cells or wires in module \synth..
Finding unused cells or wires in module \waveshaper..

12.17. Executing OPT pass (performing simple optimizations).

12.17.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module clock_8Hz.
<suppressed ~2 debug messages>
Optimizing module clock_div.
<suppressed ~2 debug messages>
Optimizing module frequency_divider.
Optimizing module keypad_encoder.
Optimizing module mode_fsm.
<suppressed ~3 debug messages>
Optimizing module oscillator.
Optimizing module pwm.
<suppressed ~2 debug messages>
Optimizing module sequential_div.
<suppressed ~8 debug messages>
Optimizing module sound_series_fsm.
<suppressed ~10 debug messages>
Optimizing module synth.
Optimizing module waveshaper.
<suppressed ~7 debug messages>

12.17.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\clock_8Hz'.
Finding identical cells in module `\clock_div'.
Finding identical cells in module `\frequency_divider'.
Finding identical cells in module `\keypad_encoder'.
Finding identical cells in module `\mode_fsm'.
Finding identical cells in module `\oscillator'.
Finding identical cells in module `\pwm'.
Finding identical cells in module `\sequential_div'.
Finding identical cells in module `\sound_series_fsm'.
Finding identical cells in module `\synth'.
Finding identical cells in module `\waveshaper'.
<suppressed ~21 debug messages>
Removed a total of 7 cells.

12.17.3. Executing OPT_DFF pass (perform DFF optimizations).

12.17.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \clock_8Hz..
Finding unused cells or wires in module \clock_div..
Finding unused cells or wires in module \frequency_divider..
Finding unused cells or wires in module \keypad_encoder..
Finding unused cells or wires in module \mode_fsm..
Finding unused cells or wires in module \oscillator..
Finding unused cells or wires in module \pwm..
Finding unused cells or wires in module \sequential_div..
Finding unused cells or wires in module \sound_series_fsm..
Finding unused cells or wires in module \synth..
Finding unused cells or wires in module \waveshaper..
Removed 10 unused cells and 43 unused wires.
<suppressed ~16 debug messages>

12.17.5. Finished fast OPT passes.

12.18. Executing MEMORY_MAP pass (converting memories to logic and flip-flops).
Mapping memory $auto$proc_rom.cc:150:do_switch$117 in module \frequency_divider:
  created 16 $dff cells and 0 static cells of width 16.
  read interface: 0 $dff and 15 $mux cells.
  write interface: 0 write mux blocks.
Mapping memory $auto$proc_rom.cc:150:do_switch$121 in module \frequency_divider:
  created 16 $dff cells and 0 static cells of width 16.
  read interface: 0 $dff and 15 $mux cells.
  write interface: 0 write mux blocks.

12.19. Executing OPT pass (performing simple optimizations).

12.19.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module clock_8Hz.
Optimizing module clock_div.
Optimizing module frequency_divider.
<suppressed ~2 debug messages>
Optimizing module keypad_encoder.
Optimizing module mode_fsm.
Optimizing module oscillator.
Optimizing module pwm.
Optimizing module sequential_div.
Optimizing module sound_series_fsm.
Optimizing module synth.
Optimizing module waveshaper.

12.19.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\clock_8Hz'.
Finding identical cells in module `\clock_div'.
Finding identical cells in module `\frequency_divider'.
Finding identical cells in module `\keypad_encoder'.
Finding identical cells in module `\mode_fsm'.
Finding identical cells in module `\oscillator'.
Finding identical cells in module `\pwm'.
Finding identical cells in module `\sequential_div'.
Finding identical cells in module `\sound_series_fsm'.
Finding identical cells in module `\synth'.
Finding identical cells in module `\waveshaper'.
Removed a total of 0 cells.

12.19.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \clock_8Hz..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \clock_div..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \frequency_divider..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \keypad_encoder..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \mode_fsm..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \oscillator..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \pwm..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \sequential_div..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \sound_series_fsm..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \synth..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \waveshaper..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~17 debug messages>

12.19.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \clock_8Hz.
    Consolidated identical input bits for $mux cell $ternary$source/clock_8Hz.sv:8$1:
      Old ports: A=19'0110001001011010000, B=19'1101110001101100000, Y=\max
      New ports: A=2'01, B=2'10, Y=\max [5:4]
      New connections: { \max [18:6] \max [3:0] } = { \max [5] 1'1 \max [4] \max [5] \max [5] \max [5:4] 3'001 \max [5:4] 5'10000 }
  Optimizing cells in module \clock_8Hz.
  Optimizing cells in module \clock_div.
  Optimizing cells in module \frequency_divider.
    Consolidated identical input bits for $mux cell $memory$auto$proc_rom.cc:150:do_switch$121$rdmux[0][3][4]$657:
      Old ports: A=16'0101111000001111, B=16'0101100011000111, Y=$memory$auto$proc_rom.cc:150:do_switch$121$rdmux[0][2][2]$a$640
      New ports: A=2'01, B=2'10, Y={ $memory$auto$proc_rom.cc:150:do_switch$121$rdmux[0][2][2]$a$640 [6] $memory$auto$proc_rom.cc:150:do_switch$121$rdmux[0][2][2]$a$640 [3] }
      New connections: { $memory$auto$proc_rom.cc:150:do_switch$121$rdmux[0][2][2]$a$640 [15:7] $memory$auto$proc_rom.cc:150:do_switch$121$rdmux[0][2][2]$a$640 [5:4] $memory$auto$proc_rom.cc:150:do_switch$121$rdmux[0][2][2]$a$640 [2:0] } = { 5'01011 $memory$auto$proc_rom.cc:150:do_switch$121$rdmux[0][2][2]$a$640 [3] $memory$auto$proc_rom.cc:150:do_switch$121$rdmux[0][2][2]$a$640 [3] 1'0 $memory$auto$proc_rom.cc:150:do_switch$121$rdmux[0][2][2]$a$640 [6] 5'00111 }
    Consolidated identical input bits for $mux cell $memory$auto$proc_rom.cc:150:do_switch$121$rdmux[0][3][3]$654:
      Old ports: A=16'0110100110010011, B=16'0110001110100111, Y=$memory$auto$proc_rom.cc:150:do_switch$121$rdmux[0][2][1]$b$638
      New ports: A=2'10, B=2'01, Y={ $memory$auto$proc_rom.cc:150:do_switch$121$rdmux[0][2][1]$b$638 [4] $memory$auto$proc_rom.cc:150:do_switch$121$rdmux[0][2][1]$b$638 [2] }
      New connections: { $memory$auto$proc_rom.cc:150:do_switch$121$rdmux[0][2][1]$b$638 [15:5] $memory$auto$proc_rom.cc:150:do_switch$121$rdmux[0][2][1]$b$638 [3] $memory$auto$proc_rom.cc:150:do_switch$121$rdmux[0][2][1]$b$638 [1:0] } = { 4'0110 $memory$auto$proc_rom.cc:150:do_switch$121$rdmux[0][2][1]$b$638 [4] 1'0 $memory$auto$proc_rom.cc:150:do_switch$121$rdmux[0][2][1]$b$638 [2] 3'110 $memory$auto$proc_rom.cc:150:do_switch$121$rdmux[0][2][1]$b$638 [2] 3'011 }
    Consolidated identical input bits for $mux cell $memory$auto$proc_rom.cc:150:do_switch$121$rdmux[0][3][2]$651:
      Old ports: A=16'0111011010000001, B=16'0110111111011011, Y=$memory$auto$proc_rom.cc:150:do_switch$121$rdmux[0][2][1]$a$637
      New ports: A=2'10, B=2'01, Y={ $memory$auto$proc_rom.cc:150:do_switch$121$rdmux[0][2][1]$a$637 [12] $memory$auto$proc_rom.cc:150:do_switch$121$rdmux[0][2][1]$a$637 [1] }
      New connections: { $memory$auto$proc_rom.cc:150:do_switch$121$rdmux[0][2][1]$a$637 [15:13] $memory$auto$proc_rom.cc:150:do_switch$121$rdmux[0][2][1]$a$637 [11:2] $memory$auto$proc_rom.cc:150:do_switch$121$rdmux[0][2][1]$a$637 [0] } = { 3'011 $memory$auto$proc_rom.cc:150:do_switch$121$rdmux[0][2][1]$a$637 [1] 2'11 $memory$auto$proc_rom.cc:150:do_switch$121$rdmux[0][2][1]$a$637 [1] 1'1 $memory$auto$proc_rom.cc:150:do_switch$121$rdmux[0][2][1]$a$637 [1] 1'0 $memory$auto$proc_rom.cc:150:do_switch$121$rdmux[0][2][1]$a$637 [1] $memory$auto$proc_rom.cc:150:do_switch$121$rdmux[0][2][1]$a$637 [1] 2'01 }
    Consolidated identical input bits for $mux cell $memory$auto$proc_rom.cc:150:do_switch$121$rdmux[0][3][1]$648:
      Old ports: A=16'1000010100000100, B=16'0111110110001101, Y=$memory$auto$proc_rom.cc:150:do_switch$121$rdmux[0][2][0]$b$635
      New ports: A=2'10, B=2'01, Y={ $memory$auto$proc_rom.cc:150:do_switch$121$rdmux[0][2][0]$b$635 [15] $memory$auto$proc_rom.cc:150:do_switch$121$rdmux[0][2][0]$b$635 [0] }
      New connections: $memory$auto$proc_rom.cc:150:do_switch$121$rdmux[0][2][0]$b$635 [14:1] = { $memory$auto$proc_rom.cc:150:do_switch$121$rdmux[0][2][0]$b$635 [0] $memory$auto$proc_rom.cc:150:do_switch$121$rdmux[0][2][0]$b$635 [0] $memory$auto$proc_rom.cc:150:do_switch$121$rdmux[0][2][0]$b$635 [0] $memory$auto$proc_rom.cc:150:do_switch$121$rdmux[0][2][0]$b$635 [0] 3'101 $memory$auto$proc_rom.cc:150:do_switch$121$rdmux[0][2][0]$b$635 [0] 3'000 $memory$auto$proc_rom.cc:150:do_switch$121$rdmux[0][2][0]$b$635 [0] 2'10 }
    Consolidated identical input bits for $mux cell $memory$auto$proc_rom.cc:150:do_switch$121$rdmux[0][3][0]$645:
      Old ports: A=16'1001010101001111, B=16'1000110011101101, Y=$memory$auto$proc_rom.cc:150:do_switch$121$rdmux[0][2][0]$a$634
      New ports: A=2'01, B=2'10, Y={ $memory$auto$proc_rom.cc:150:do_switch$121$rdmux[0][2][0]$a$634 [5] $memory$auto$proc_rom.cc:150:do_switch$121$rdmux[0][2][0]$a$634 [1] }
      New connections: { $memory$auto$proc_rom.cc:150:do_switch$121$rdmux[0][2][0]$a$634 [15:6] $memory$auto$proc_rom.cc:150:do_switch$121$rdmux[0][2][0]$a$634 [4:2] $memory$auto$proc_rom.cc:150:do_switch$121$rdmux[0][2][0]$a$634 [0] } = { 3'100 $memory$auto$proc_rom.cc:150:do_switch$121$rdmux[0][2][0]$a$634 [1] $memory$auto$proc_rom.cc:150:do_switch$121$rdmux[0][2][0]$a$634 [5] 2'10 $memory$auto$proc_rom.cc:150:do_switch$121$rdmux[0][2][0]$a$634 [1] $memory$auto$proc_rom.cc:150:do_switch$121$rdmux[0][2][0]$a$634 [5] 5'10111 }
    Consolidated identical input bits for $mux cell $memory$auto$proc_rom.cc:150:do_switch$117$rdmux[0][3][6]$618:
      Old ports: A=16'0101100110010101, B=16'0000000000000001, Y=$memory$auto$proc_rom.cc:150:do_switch$117$rdmux[0][2][3]$a$598
      New ports: A=1'1, B=1'0, Y=$memory$auto$proc_rom.cc:150:do_switch$117$rdmux[0][2][3]$a$598 [2]
      New connections: { $memory$auto$proc_rom.cc:150:do_switch$117$rdmux[0][2][3]$a$598 [15:3] $memory$auto$proc_rom.cc:150:do_switch$117$rdmux[0][2][3]$a$598 [1:0] } = { 1'0 $memory$auto$proc_rom.cc:150:do_switch$117$rdmux[0][2][3]$a$598 [2] 1'0 $memory$auto$proc_rom.cc:150:do_switch$117$rdmux[0][2][3]$a$598 [2] $memory$auto$proc_rom.cc:150:do_switch$117$rdmux[0][2][3]$a$598 [2] 2'00 $memory$auto$proc_rom.cc:150:do_switch$117$rdmux[0][2][3]$a$598 [2] $memory$auto$proc_rom.cc:150:do_switch$117$rdmux[0][2][3]$a$598 [2] 2'00 $memory$auto$proc_rom.cc:150:do_switch$117$rdmux[0][2][3]$a$598 [2] 3'001 }
    Consolidated identical input bits for $mux cell $memory$auto$proc_rom.cc:150:do_switch$117$rdmux[0][3][5]$615:
      Old ports: A=16'0110010010001110, B=16'0101111011101010, Y=$memory$auto$proc_rom.cc:150:do_switch$117$rdmux[0][2][2]$b$596
      New ports: A=2'01, B=2'10, Y={ $memory$auto$proc_rom.cc:150:do_switch$117$rdmux[0][2][2]$b$596 [5] $memory$auto$proc_rom.cc:150:do_switch$117$rdmux[0][2][2]$b$596 [2] }
      New connections: { $memory$auto$proc_rom.cc:150:do_switch$117$rdmux[0][2][2]$b$596 [15:6] $memory$auto$proc_rom.cc:150:do_switch$117$rdmux[0][2][2]$b$596 [4:3] $memory$auto$proc_rom.cc:150:do_switch$117$rdmux[0][2][2]$b$596 [1:0] } = { 2'01 $memory$auto$proc_rom.cc:150:do_switch$117$rdmux[0][2][2]$b$596 [2] $memory$auto$proc_rom.cc:150:do_switch$117$rdmux[0][2][2]$b$596 [5] $memory$auto$proc_rom.cc:150:do_switch$117$rdmux[0][2][2]$b$596 [5] 1'1 $memory$auto$proc_rom.cc:150:do_switch$117$rdmux[0][2][2]$b$596 [5] 2'01 $memory$auto$proc_rom.cc:150:do_switch$117$rdmux[0][2][2]$b$596 [5] 4'0110 }
    Consolidated identical input bits for $mux cell $memory$auto$proc_rom.cc:150:do_switch$117$rdmux[0][3][4]$612:
      Old ports: A=16'0111000011011111, B=16'0110101010001000, Y=$memory$auto$proc_rom.cc:150:do_switch$117$rdmux[0][2][2]$a$595
      New ports: A=2'01, B=2'10, Y={ $memory$auto$proc_rom.cc:150:do_switch$117$rdmux[0][2][2]$a$595 [9] $memory$auto$proc_rom.cc:150:do_switch$117$rdmux[0][2][2]$a$595 [0] }
      New connections: { $memory$auto$proc_rom.cc:150:do_switch$117$rdmux[0][2][2]$a$595 [15:10] $memory$auto$proc_rom.cc:150:do_switch$117$rdmux[0][2][2]$a$595 [8:1] } = { 3'011 $memory$auto$proc_rom.cc:150:do_switch$117$rdmux[0][2][2]$a$595 [0] $memory$auto$proc_rom.cc:150:do_switch$117$rdmux[0][2][2]$a$595 [9] 3'001 $memory$auto$proc_rom.cc:150:do_switch$117$rdmux[0][2][2]$a$595 [0] 1'0 $memory$auto$proc_rom.cc:150:do_switch$117$rdmux[0][2][2]$a$595 [0] 1'1 $memory$auto$proc_rom.cc:150:do_switch$117$rdmux[0][2][2]$a$595 [0] $memory$auto$proc_rom.cc:150:do_switch$117$rdmux[0][2][2]$a$595 [0] }
    Consolidated identical input bits for $mux cell $memory$auto$proc_rom.cc:150:do_switch$117$rdmux[0][3][3]$609:
      Old ports: A=16'0111111010110000, B=16'0111011110010101, Y=$memory$auto$proc_rom.cc:150:do_switch$117$rdmux[0][2][1]$b$593
      New ports: A=2'10, B=2'01, Y={ $memory$auto$proc_rom.cc:150:do_switch$117$rdmux[0][2][1]$b$593 [5] $memory$auto$proc_rom.cc:150:do_switch$117$rdmux[0][2][1]$b$593 [0] }
      New connections: { $memory$auto$proc_rom.cc:150:do_switch$117$rdmux[0][2][1]$b$593 [15:6] $memory$auto$proc_rom.cc:150:do_switch$117$rdmux[0][2][1]$b$593 [4:1] } = { 4'0111 $memory$auto$proc_rom.cc:150:do_switch$117$rdmux[0][2][1]$b$593 [5] 2'11 $memory$auto$proc_rom.cc:150:do_switch$117$rdmux[0][2][1]$b$593 [0] 4'1010 $memory$auto$proc_rom.cc:150:do_switch$117$rdmux[0][2][1]$b$593 [0] 1'0 }
    Consolidated identical input bits for $mux cell $memory$auto$proc_rom.cc:150:do_switch$117$rdmux[0][3][2]$606:
      Old ports: A=16'1000111000110100, B=16'1000011000111010, Y=$memory$auto$proc_rom.cc:150:do_switch$117$rdmux[0][2][1]$a$592
      New ports: A=2'10, B=2'01, Y=$memory$auto$proc_rom.cc:150:do_switch$117$rdmux[0][2][1]$a$592 [2:1]
      New connections: { $memory$auto$proc_rom.cc:150:do_switch$117$rdmux[0][2][1]$a$592 [15:3] $memory$auto$proc_rom.cc:150:do_switch$117$rdmux[0][2][1]$a$592 [0] } = { 4'1000 $memory$auto$proc_rom.cc:150:do_switch$117$rdmux[0][2][1]$a$592 [2] 7'1100011 $memory$auto$proc_rom.cc:150:do_switch$117$rdmux[0][2][1]$a$592 [1] 1'0 }
    Consolidated identical input bits for $mux cell $memory$auto$proc_rom.cc:150:do_switch$117$rdmux[0][3][1]$603:
      Old ports: A=16'1001111110011110, B=16'1001011010101001, Y=$memory$auto$proc_rom.cc:150:do_switch$117$rdmux[0][2][0]$b$590
      New ports: A=2'10, B=2'01, Y=$memory$auto$proc_rom.cc:150:do_switch$117$rdmux[0][2][0]$b$590 [1:0]
      New connections: $memory$auto$proc_rom.cc:150:do_switch$117$rdmux[0][2][0]$b$590 [15:2] = { 4'1001 $memory$auto$proc_rom.cc:150:do_switch$117$rdmux[0][2][0]$b$590 [1] 2'11 $memory$auto$proc_rom.cc:150:do_switch$117$rdmux[0][2][0]$b$590 [1] 2'10 $memory$auto$proc_rom.cc:150:do_switch$117$rdmux[0][2][0]$b$590 [0] $memory$auto$proc_rom.cc:150:do_switch$117$rdmux[0][2][0]$b$590 [1] 1'1 $memory$auto$proc_rom.cc:150:do_switch$117$rdmux[0][2][0]$b$590 [1] }
    Consolidated identical input bits for $mux cell $memory$auto$proc_rom.cc:150:do_switch$117$rdmux[0][3][0]$600:
      Old ports: A=16'1011001100101100, B=16'1010100100011100, Y=$memory$auto$proc_rom.cc:150:do_switch$117$rdmux[0][2][0]$a$589
      New ports: A=2'10, B=2'01, Y=$memory$auto$proc_rom.cc:150:do_switch$117$rdmux[0][2][0]$a$589 [5:4]
      New connections: { $memory$auto$proc_rom.cc:150:do_switch$117$rdmux[0][2][0]$a$589 [15:6] $memory$auto$proc_rom.cc:150:do_switch$117$rdmux[0][2][0]$a$589 [3:0] } = { 3'101 $memory$auto$proc_rom.cc:150:do_switch$117$rdmux[0][2][0]$a$589 [5:4] 1'0 $memory$auto$proc_rom.cc:150:do_switch$117$rdmux[0][2][0]$a$589 [5] 7'1001100 }
    Consolidated identical input bits for $mux cell $memory$auto$proc_rom.cc:150:do_switch$121$rdmux[0][3][6]$663:
      Old ports: A=16'0100101010100111, B=16'0000000000000001, Y=$memory$auto$proc_rom.cc:150:do_switch$121$rdmux[0][2][3]$a$643
      New ports: A=1'1, B=1'0, Y=$memory$auto$proc_rom.cc:150:do_switch$121$rdmux[0][2][3]$a$643 [1]
      New connections: { $memory$auto$proc_rom.cc:150:do_switch$121$rdmux[0][2][3]$a$643 [15:2] $memory$auto$proc_rom.cc:150:do_switch$121$rdmux[0][2][3]$a$643 [0] } = { 1'0 $memory$auto$proc_rom.cc:150:do_switch$121$rdmux[0][2][3]$a$643 [1] 2'00 $memory$auto$proc_rom.cc:150:do_switch$121$rdmux[0][2][3]$a$643 [1] 1'0 $memory$auto$proc_rom.cc:150:do_switch$121$rdmux[0][2][3]$a$643 [1] 1'0 $memory$auto$proc_rom.cc:150:do_switch$121$rdmux[0][2][3]$a$643 [1] 1'0 $memory$auto$proc_rom.cc:150:do_switch$121$rdmux[0][2][3]$a$643 [1] 2'00 $memory$auto$proc_rom.cc:150:do_switch$121$rdmux[0][2][3]$a$643 [1] 1'1 }
    Consolidated identical input bits for $mux cell $memory$auto$proc_rom.cc:150:do_switch$121$rdmux[0][3][5]$660:
      Old ports: A=16'0101001111001100, B=16'0100111100011000, Y=$memory$auto$proc_rom.cc:150:do_switch$121$rdmux[0][2][2]$b$641
      New ports: A=2'01, B=2'10, Y={ $memory$auto$proc_rom.cc:150:do_switch$121$rdmux[0][2][2]$b$641 [4] $memory$auto$proc_rom.cc:150:do_switch$121$rdmux[0][2][2]$b$641 [2] }
      New connections: { $memory$auto$proc_rom.cc:150:do_switch$121$rdmux[0][2][2]$b$641 [15:5] $memory$auto$proc_rom.cc:150:do_switch$121$rdmux[0][2][2]$b$641 [3] $memory$auto$proc_rom.cc:150:do_switch$121$rdmux[0][2][2]$b$641 [1:0] } = { 3'010 $memory$auto$proc_rom.cc:150:do_switch$121$rdmux[0][2][2]$b$641 [2] $memory$auto$proc_rom.cc:150:do_switch$121$rdmux[0][2][2]$b$641 [4] $memory$auto$proc_rom.cc:150:do_switch$121$rdmux[0][2][2]$b$641 [4] 2'11 $memory$auto$proc_rom.cc:150:do_switch$121$rdmux[0][2][2]$b$641 [2] $memory$auto$proc_rom.cc:150:do_switch$121$rdmux[0][2][2]$b$641 [2] 4'0100 }
  Optimizing cells in module \frequency_divider.
    Consolidated identical input bits for $mux cell $memory$auto$proc_rom.cc:150:do_switch$121$rdmux[0][2][3]$642:
      Old ports: A=$memory$auto$proc_rom.cc:150:do_switch$121$rdmux[0][2][3]$a$643, B=16'0000000000000001, Y=$memory$auto$proc_rom.cc:150:do_switch$121$rdmux[0][1][1]$b$632
      New ports: A=$memory$auto$proc_rom.cc:150:do_switch$121$rdmux[0][2][3]$a$643 [1], B=1'0, Y=$memory$auto$proc_rom.cc:150:do_switch$121$rdmux[0][1][1]$b$632 [1]
      New connections: { $memory$auto$proc_rom.cc:150:do_switch$121$rdmux[0][1][1]$b$632 [15:2] $memory$auto$proc_rom.cc:150:do_switch$121$rdmux[0][1][1]$b$632 [0] } = { 1'0 $memory$auto$proc_rom.cc:150:do_switch$121$rdmux[0][1][1]$b$632 [1] 2'00 $memory$auto$proc_rom.cc:150:do_switch$121$rdmux[0][1][1]$b$632 [1] 1'0 $memory$auto$proc_rom.cc:150:do_switch$121$rdmux[0][1][1]$b$632 [1] 1'0 $memory$auto$proc_rom.cc:150:do_switch$121$rdmux[0][1][1]$b$632 [1] 1'0 $memory$auto$proc_rom.cc:150:do_switch$121$rdmux[0][1][1]$b$632 [1] 2'00 $memory$auto$proc_rom.cc:150:do_switch$121$rdmux[0][1][1]$b$632 [1] 1'1 }
    Consolidated identical input bits for $mux cell $memory$auto$proc_rom.cc:150:do_switch$121$rdmux[0][2][2]$639:
      Old ports: A=$memory$auto$proc_rom.cc:150:do_switch$121$rdmux[0][2][2]$a$640, B=$memory$auto$proc_rom.cc:150:do_switch$121$rdmux[0][2][2]$b$641, Y=$memory$auto$proc_rom.cc:150:do_switch$121$rdmux[0][1][1]$a$631
      New ports: A={ 1'1 $memory$auto$proc_rom.cc:150:do_switch$121$rdmux[0][2][2]$a$640 [3] 1'0 $memory$auto$proc_rom.cc:150:do_switch$121$rdmux[0][2][2]$a$640 [6] 1'0 $memory$auto$proc_rom.cc:150:do_switch$121$rdmux[0][2][2]$a$640 [3] 2'11 }, B={ $memory$auto$proc_rom.cc:150:do_switch$121$rdmux[0][2][2]$b$641 [4] $memory$auto$proc_rom.cc:150:do_switch$121$rdmux[0][2][2]$b$641 [4] 1'1 $memory$auto$proc_rom.cc:150:do_switch$121$rdmux[0][2][2]$b$641 [2] $memory$auto$proc_rom.cc:150:do_switch$121$rdmux[0][2][2]$b$641 [4] 1'1 $memory$auto$proc_rom.cc:150:do_switch$121$rdmux[0][2][2]$b$641 [2] 1'0 }, Y={ $memory$auto$proc_rom.cc:150:do_switch$121$rdmux[0][1][1]$a$631 [11:10] $memory$auto$proc_rom.cc:150:do_switch$121$rdmux[0][1][1]$a$631 [8] $memory$auto$proc_rom.cc:150:do_switch$121$rdmux[0][1][1]$a$631 [6] $memory$auto$proc_rom.cc:150:do_switch$121$rdmux[0][1][1]$a$631 [4:2] $memory$auto$proc_rom.cc:150:do_switch$121$rdmux[0][1][1]$a$631 [0] }
      New connections: { $memory$auto$proc_rom.cc:150:do_switch$121$rdmux[0][1][1]$a$631 [15:12] $memory$auto$proc_rom.cc:150:do_switch$121$rdmux[0][1][1]$a$631 [9] $memory$auto$proc_rom.cc:150:do_switch$121$rdmux[0][1][1]$a$631 [7] $memory$auto$proc_rom.cc:150:do_switch$121$rdmux[0][1][1]$a$631 [5] $memory$auto$proc_rom.cc:150:do_switch$121$rdmux[0][1][1]$a$631 [1] } = { 3'010 $memory$auto$proc_rom.cc:150:do_switch$121$rdmux[0][1][1]$a$631 [2] $memory$auto$proc_rom.cc:150:do_switch$121$rdmux[0][1][1]$a$631 [3] $memory$auto$proc_rom.cc:150:do_switch$121$rdmux[0][1][1]$a$631 [6] 1'0 $memory$auto$proc_rom.cc:150:do_switch$121$rdmux[0][1][1]$a$631 [0] }
    Consolidated identical input bits for $mux cell $memory$auto$proc_rom.cc:150:do_switch$121$rdmux[0][2][1]$636:
      Old ports: A=$memory$auto$proc_rom.cc:150:do_switch$121$rdmux[0][2][1]$a$637, B=$memory$auto$proc_rom.cc:150:do_switch$121$rdmux[0][2][1]$b$638, Y=$memory$auto$proc_rom.cc:150:do_switch$121$rdmux[0][1][0]$b$629
      New ports: A={ $memory$auto$proc_rom.cc:150:do_switch$121$rdmux[0][2][1]$a$637 [12] 2'11 $memory$auto$proc_rom.cc:150:do_switch$121$rdmux[0][2][1]$a$637 [1] $memory$auto$proc_rom.cc:150:do_switch$121$rdmux[0][2][1]$a$637 [1] 1'0 $memory$auto$proc_rom.cc:150:do_switch$121$rdmux[0][2][1]$a$637 [1] }, B={ 2'00 $memory$auto$proc_rom.cc:150:do_switch$121$rdmux[0][2][1]$b$638 [2] $memory$auto$proc_rom.cc:150:do_switch$121$rdmux[0][2][1]$b$638 [4] 1'0 $memory$auto$proc_rom.cc:150:do_switch$121$rdmux[0][2][1]$b$638 [2] 1'1 }, Y={ $memory$auto$proc_rom.cc:150:do_switch$121$rdmux[0][1][0]$b$629 [12] $memory$auto$proc_rom.cc:150:do_switch$121$rdmux[0][1][0]$b$629 [10:9] $memory$auto$proc_rom.cc:150:do_switch$121$rdmux[0][1][0]$b$629 [4:1] }
      New connections: { $memory$auto$proc_rom.cc:150:do_switch$121$rdmux[0][1][0]$b$629 [15:13] $memory$auto$proc_rom.cc:150:do_switch$121$rdmux[0][1][0]$b$629 [11] $memory$auto$proc_rom.cc:150:do_switch$121$rdmux[0][1][0]$b$629 [8:5] $memory$auto$proc_rom.cc:150:do_switch$121$rdmux[0][1][0]$b$629 [0] } = { 3'011 $memory$auto$proc_rom.cc:150:do_switch$121$rdmux[0][1][0]$b$629 [4] $memory$auto$proc_rom.cc:150:do_switch$121$rdmux[0][1][0]$b$629 [1] 1'1 $memory$auto$proc_rom.cc:150:do_switch$121$rdmux[0][1][0]$b$629 [3:2] 1'1 }
    Consolidated identical input bits for $mux cell $memory$auto$proc_rom.cc:150:do_switch$121$rdmux[0][2][0]$633:
      Old ports: A=$memory$auto$proc_rom.cc:150:do_switch$121$rdmux[0][2][0]$a$634, B=$memory$auto$proc_rom.cc:150:do_switch$121$rdmux[0][2][0]$b$635, Y=$memory$auto$proc_rom.cc:150:do_switch$121$rdmux[0][1][0]$a$628
      New ports: A={ 2'10 $memory$auto$proc_rom.cc:150:do_switch$121$rdmux[0][2][0]$a$634 [1] $memory$auto$proc_rom.cc:150:do_switch$121$rdmux[0][2][0]$a$634 [1] $memory$auto$proc_rom.cc:150:do_switch$121$rdmux[0][2][0]$a$634 [5] 1'1 $memory$auto$proc_rom.cc:150:do_switch$121$rdmux[0][2][0]$a$634 [5] $memory$auto$proc_rom.cc:150:do_switch$121$rdmux[0][2][0]$a$634 [1] 1'1 }, B={ $memory$auto$proc_rom.cc:150:do_switch$121$rdmux[0][2][0]$b$635 [15] $memory$auto$proc_rom.cc:150:do_switch$121$rdmux[0][2][0]$b$635 [0] $memory$auto$proc_rom.cc:150:do_switch$121$rdmux[0][2][0]$b$635 [0] 1'1 $memory$auto$proc_rom.cc:150:do_switch$121$rdmux[0][2][0]$b$635 [0] 3'000 $memory$auto$proc_rom.cc:150:do_switch$121$rdmux[0][2][0]$b$635 [0] }, Y={ $memory$auto$proc_rom.cc:150:do_switch$121$rdmux[0][1][0]$a$628 [15] $memory$auto$proc_rom.cc:150:do_switch$121$rdmux[0][1][0]$a$628 [13:12] $memory$auto$proc_rom.cc:150:do_switch$121$rdmux[0][1][0]$a$628 [8:5] $memory$auto$proc_rom.cc:150:do_switch$121$rdmux[0][1][0]$a$628 [1:0] }
      New connections: { $memory$auto$proc_rom.cc:150:do_switch$121$rdmux[0][1][0]$a$628 [14] $memory$auto$proc_rom.cc:150:do_switch$121$rdmux[0][1][0]$a$628 [11:9] $memory$auto$proc_rom.cc:150:do_switch$121$rdmux[0][1][0]$a$628 [4:2] } = { $memory$auto$proc_rom.cc:150:do_switch$121$rdmux[0][1][0]$a$628 [13] $memory$auto$proc_rom.cc:150:do_switch$121$rdmux[0][1][0]$a$628 [7] 3'100 $memory$auto$proc_rom.cc:150:do_switch$121$rdmux[0][1][0]$a$628 [0] 1'1 }
    Consolidated identical input bits for $mux cell $memory$auto$proc_rom.cc:150:do_switch$117$rdmux[0][2][3]$597:
      Old ports: A=$memory$auto$proc_rom.cc:150:do_switch$117$rdmux[0][2][3]$a$598, B=16'0000000000000001, Y=$memory$auto$proc_rom.cc:150:do_switch$117$rdmux[0][1][1]$b$587
      New ports: A=$memory$auto$proc_rom.cc:150:do_switch$117$rdmux[0][2][3]$a$598 [2], B=1'0, Y=$memory$auto$proc_rom.cc:150:do_switch$117$rdmux[0][1][1]$b$587 [2]
      New connections: { $memory$auto$proc_rom.cc:150:do_switch$117$rdmux[0][1][1]$b$587 [15:3] $memory$auto$proc_rom.cc:150:do_switch$117$rdmux[0][1][1]$b$587 [1:0] } = { 1'0 $memory$auto$proc_rom.cc:150:do_switch$117$rdmux[0][1][1]$b$587 [2] 1'0 $memory$auto$proc_rom.cc:150:do_switch$117$rdmux[0][1][1]$b$587 [2] $memory$auto$proc_rom.cc:150:do_switch$117$rdmux[0][1][1]$b$587 [2] 2'00 $memory$auto$proc_rom.cc:150:do_switch$117$rdmux[0][1][1]$b$587 [2] $memory$auto$proc_rom.cc:150:do_switch$117$rdmux[0][1][1]$b$587 [2] 2'00 $memory$auto$proc_rom.cc:150:do_switch$117$rdmux[0][1][1]$b$587 [2] 3'001 }
    Consolidated identical input bits for $mux cell $memory$auto$proc_rom.cc:150:do_switch$117$rdmux[0][2][2]$594:
      Old ports: A=$memory$auto$proc_rom.cc:150:do_switch$117$rdmux[0][2][2]$a$595, B=$memory$auto$proc_rom.cc:150:do_switch$117$rdmux[0][2][2]$b$596, Y=$memory$auto$proc_rom.cc:150:do_switch$117$rdmux[0][1][1]$a$586
      New ports: A={ 2'10 $memory$auto$proc_rom.cc:150:do_switch$117$rdmux[0][2][2]$a$595 [9] $memory$auto$proc_rom.cc:150:do_switch$117$rdmux[0][2][2]$a$595 [0] 1'0 $memory$auto$proc_rom.cc:150:do_switch$117$rdmux[0][2][2]$a$595 [0] $memory$auto$proc_rom.cc:150:do_switch$117$rdmux[0][2][2]$a$595 [0] $memory$auto$proc_rom.cc:150:do_switch$117$rdmux[0][2][2]$a$595 [0] }, B={ $memory$auto$proc_rom.cc:150:do_switch$117$rdmux[0][2][2]$b$596 [2] 1'1 $memory$auto$proc_rom.cc:150:do_switch$117$rdmux[0][2][2]$b$596 [5] $memory$auto$proc_rom.cc:150:do_switch$117$rdmux[0][2][2]$b$596 [5] $memory$auto$proc_rom.cc:150:do_switch$117$rdmux[0][2][2]$b$596 [5] $memory$auto$proc_rom.cc:150:do_switch$117$rdmux[0][2][2]$b$596 [2] 2'10 }, Y={ $memory$auto$proc_rom.cc:150:do_switch$117$rdmux[0][1][1]$a$586 [13] $memory$auto$proc_rom.cc:150:do_switch$117$rdmux[0][1][1]$a$586 [10:9] $memory$auto$proc_rom.cc:150:do_switch$117$rdmux[0][1][1]$a$586 [6:5] $memory$auto$proc_rom.cc:150:do_switch$117$rdmux[0][1][1]$a$586 [2:0] }
      New connections: { $memory$auto$proc_rom.cc:150:do_switch$117$rdmux[0][1][1]$a$586 [15:14] $memory$auto$proc_rom.cc:150:do_switch$117$rdmux[0][1][1]$a$586 [12:11] $memory$auto$proc_rom.cc:150:do_switch$117$rdmux[0][1][1]$a$586 [8:7] $memory$auto$proc_rom.cc:150:do_switch$117$rdmux[0][1][1]$a$586 [4:3] } = { 2'01 $memory$auto$proc_rom.cc:150:do_switch$117$rdmux[0][1][1]$a$586 [6] $memory$auto$proc_rom.cc:150:do_switch$117$rdmux[0][1][1]$a$586 [9] 2'01 $memory$auto$proc_rom.cc:150:do_switch$117$rdmux[0][1][1]$a$586 [0] 1'1 }
    Consolidated identical input bits for $mux cell $memory$auto$proc_rom.cc:150:do_switch$117$rdmux[0][2][1]$591:
      Old ports: A=$memory$auto$proc_rom.cc:150:do_switch$117$rdmux[0][2][1]$a$592, B=$memory$auto$proc_rom.cc:150:do_switch$117$rdmux[0][2][1]$b$593, Y=$memory$auto$proc_rom.cc:150:do_switch$117$rdmux[0][1][0]$b$584
      New ports: A={ 1'1 $memory$auto$proc_rom.cc:150:do_switch$117$rdmux[0][2][1]$a$592 [2] 2'01 $memory$auto$proc_rom.cc:150:do_switch$117$rdmux[0][2][1]$a$592 [2:1] 1'0 }, B={ 1'0 $memory$auto$proc_rom.cc:150:do_switch$117$rdmux[0][2][1]$b$593 [5] 1'1 $memory$auto$proc_rom.cc:150:do_switch$117$rdmux[0][2][1]$b$593 [5] $memory$auto$proc_rom.cc:150:do_switch$117$rdmux[0][2][1]$b$593 [0] 1'0 $memory$auto$proc_rom.cc:150:do_switch$117$rdmux[0][2][1]$b$593 [0] }, Y={ $memory$auto$proc_rom.cc:150:do_switch$117$rdmux[0][1][0]$b$584 [15] $memory$auto$proc_rom.cc:150:do_switch$117$rdmux[0][1][0]$b$584 [11] $memory$auto$proc_rom.cc:150:do_switch$117$rdmux[0][1][0]$b$584 [7] $memory$auto$proc_rom.cc:150:do_switch$117$rdmux[0][1][0]$b$584 [5] $memory$auto$proc_rom.cc:150:do_switch$117$rdmux[0][1][0]$b$584 [2:0] }
      New connections: { $memory$auto$proc_rom.cc:150:do_switch$117$rdmux[0][1][0]$b$584 [14:12] $memory$auto$proc_rom.cc:150:do_switch$117$rdmux[0][1][0]$b$584 [10:8] $memory$auto$proc_rom.cc:150:do_switch$117$rdmux[0][1][0]$b$584 [6] $memory$auto$proc_rom.cc:150:do_switch$117$rdmux[0][1][0]$b$584 [4:3] } = { $memory$auto$proc_rom.cc:150:do_switch$117$rdmux[0][1][0]$b$584 [7] $memory$auto$proc_rom.cc:150:do_switch$117$rdmux[0][1][0]$b$584 [7] $memory$auto$proc_rom.cc:150:do_switch$117$rdmux[0][1][0]$b$584 [7] 2'11 $memory$auto$proc_rom.cc:150:do_switch$117$rdmux[0][1][0]$b$584 [0] 2'01 $memory$auto$proc_rom.cc:150:do_switch$117$rdmux[0][1][0]$b$584 [1] }
    Consolidated identical input bits for $mux cell $memory$auto$proc_rom.cc:150:do_switch$117$rdmux[0][2][0]$588:
      Old ports: A=$memory$auto$proc_rom.cc:150:do_switch$117$rdmux[0][2][0]$a$589, B=$memory$auto$proc_rom.cc:150:do_switch$117$rdmux[0][2][0]$b$590, Y=$memory$auto$proc_rom.cc:150:do_switch$117$rdmux[0][1][0]$a$583
      New ports: A={ 1'1 $memory$auto$proc_rom.cc:150:do_switch$117$rdmux[0][2][0]$a$589 [5] 1'0 $memory$auto$proc_rom.cc:150:do_switch$117$rdmux[0][2][0]$a$589 [5:4] 3'100 }, B={ 3'011 $memory$auto$proc_rom.cc:150:do_switch$117$rdmux[0][2][0]$b$590 [0] $memory$auto$proc_rom.cc:150:do_switch$117$rdmux[0][2][0]$b$590 [1] $memory$auto$proc_rom.cc:150:do_switch$117$rdmux[0][2][0]$b$590 [1] $memory$auto$proc_rom.cc:150:do_switch$117$rdmux[0][2][0]$b$590 [1:0] }, Y={ $memory$auto$proc_rom.cc:150:do_switch$117$rdmux[0][1][0]$a$583 [13] $memory$auto$proc_rom.cc:150:do_switch$117$rdmux[0][1][0]$a$583 [9] $memory$auto$proc_rom.cc:150:do_switch$117$rdmux[0][1][0]$a$583 [7] $memory$auto$proc_rom.cc:150:do_switch$117$rdmux[0][1][0]$a$583 [5:4] $memory$auto$proc_rom.cc:150:do_switch$117$rdmux[0][1][0]$a$583 [2:0] }
      New connections: { $memory$auto$proc_rom.cc:150:do_switch$117$rdmux[0][1][0]$a$583 [15:14] $memory$auto$proc_rom.cc:150:do_switch$117$rdmux[0][1][0]$a$583 [12:10] $memory$auto$proc_rom.cc:150:do_switch$117$rdmux[0][1][0]$a$583 [8] $memory$auto$proc_rom.cc:150:do_switch$117$rdmux[0][1][0]$a$583 [6] $memory$auto$proc_rom.cc:150:do_switch$117$rdmux[0][1][0]$a$583 [3] } = { 2'10 $memory$auto$proc_rom.cc:150:do_switch$117$rdmux[0][1][0]$a$583 [9] $memory$auto$proc_rom.cc:150:do_switch$117$rdmux[0][1][0]$a$583 [4] $memory$auto$proc_rom.cc:150:do_switch$117$rdmux[0][1][0]$a$583 [7] $memory$auto$proc_rom.cc:150:do_switch$117$rdmux[0][1][0]$a$583 [2] 2'01 }
  Optimizing cells in module \frequency_divider.
    Consolidated identical input bits for $mux cell $memory$auto$proc_rom.cc:150:do_switch$121$rdmux[0][1][1]$630:
      Old ports: A=$memory$auto$proc_rom.cc:150:do_switch$121$rdmux[0][1][1]$a$631, B=$memory$auto$proc_rom.cc:150:do_switch$121$rdmux[0][1][1]$b$632, Y=$memory$auto$proc_rom.cc:150:do_switch$121$rdmux[0][0][0]$b$626
      New ports: A={ 1'1 $memory$auto$proc_rom.cc:150:do_switch$121$rdmux[0][1][1]$a$631 [2] $memory$auto$proc_rom.cc:150:do_switch$121$rdmux[0][1][1]$a$631 [11:10] $memory$auto$proc_rom.cc:150:do_switch$121$rdmux[0][1][1]$a$631 [3] $memory$auto$proc_rom.cc:150:do_switch$121$rdmux[0][1][1]$a$631 [8] $memory$auto$proc_rom.cc:150:do_switch$121$rdmux[0][1][1]$a$631 [6] $memory$auto$proc_rom.cc:150:do_switch$121$rdmux[0][1][1]$a$631 [6] 1'0 $memory$auto$proc_rom.cc:150:do_switch$121$rdmux[0][1][1]$a$631 [4:2] $memory$auto$proc_rom.cc:150:do_switch$121$rdmux[0][1][1]$a$631 [0] $memory$auto$proc_rom.cc:150:do_switch$121$rdmux[0][1][1]$a$631 [0] }, B={ $memory$auto$proc_rom.cc:150:do_switch$121$rdmux[0][1][1]$b$632 [1] 1'0 $memory$auto$proc_rom.cc:150:do_switch$121$rdmux[0][1][1]$b$632 [1] 1'0 $memory$auto$proc_rom.cc:150:do_switch$121$rdmux[0][1][1]$b$632 [1] 1'0 $memory$auto$proc_rom.cc:150:do_switch$121$rdmux[0][1][1]$b$632 [1] 1'0 $memory$auto$proc_rom.cc:150:do_switch$121$rdmux[0][1][1]$b$632 [1] 2'00 $memory$auto$proc_rom.cc:150:do_switch$121$rdmux[0][1][1]$b$632 [1] $memory$auto$proc_rom.cc:150:do_switch$121$rdmux[0][1][1]$b$632 [1] 1'1 }, Y={ $memory$auto$proc_rom.cc:150:do_switch$121$rdmux[0][0][0]$b$626 [14] $memory$auto$proc_rom.cc:150:do_switch$121$rdmux[0][0][0]$b$626 [12:0] }
      New connections: { $memory$auto$proc_rom.cc:150:do_switch$121$rdmux[0][0][0]$b$626 [15] $memory$auto$proc_rom.cc:150:do_switch$121$rdmux[0][0][0]$b$626 [13] } = 2'00
    Consolidated identical input bits for $mux cell $memory$auto$proc_rom.cc:150:do_switch$121$rdmux[0][1][0]$627:
      Old ports: A=$memory$auto$proc_rom.cc:150:do_switch$121$rdmux[0][1][0]$a$628, B=$memory$auto$proc_rom.cc:150:do_switch$121$rdmux[0][1][0]$b$629, Y=$memory$auto$proc_rom.cc:150:do_switch$121$rdmux[0][0][0]$a$625
      New ports: A={ $memory$auto$proc_rom.cc:150:do_switch$121$rdmux[0][1][0]$a$628 [15] $memory$auto$proc_rom.cc:150:do_switch$121$rdmux[0][1][0]$a$628 [13:12] $memory$auto$proc_rom.cc:150:do_switch$121$rdmux[0][1][0]$a$628 [7] 2'10 $memory$auto$proc_rom.cc:150:do_switch$121$rdmux[0][1][0]$a$628 [8:5] 1'0 $memory$auto$proc_rom.cc:150:do_switch$121$rdmux[0][1][0]$a$628 [0] 1'1 $memory$auto$proc_rom.cc:150:do_switch$121$rdmux[0][1][0]$a$628 [1:0] }, B={ 2'01 $memory$auto$proc_rom.cc:150:do_switch$121$rdmux[0][1][0]$b$629 [12] $memory$auto$proc_rom.cc:150:do_switch$121$rdmux[0][1][0]$b$629 [4] $memory$auto$proc_rom.cc:150:do_switch$121$rdmux[0][1][0]$b$629 [10:9] $memory$auto$proc_rom.cc:150:do_switch$121$rdmux[0][1][0]$b$629 [1] 1'1 $memory$auto$proc_rom.cc:150:do_switch$121$rdmux[0][1][0]$b$629 [3:2] $memory$auto$proc_rom.cc:150:do_switch$121$rdmux[0][1][0]$b$629 [4:1] 1'1 }, Y={ $memory$auto$proc_rom.cc:150:do_switch$121$rdmux[0][0][0]$a$625 [15] $memory$auto$proc_rom.cc:150:do_switch$121$rdmux[0][0][0]$a$625 [13:0] }
      New connections: $memory$auto$proc_rom.cc:150:do_switch$121$rdmux[0][0][0]$a$625 [14] = $memory$auto$proc_rom.cc:150:do_switch$121$rdmux[0][0][0]$a$625 [13]
    Consolidated identical input bits for $mux cell $memory$auto$proc_rom.cc:150:do_switch$117$rdmux[0][1][1]$585:
      Old ports: A=$memory$auto$proc_rom.cc:150:do_switch$117$rdmux[0][1][1]$a$586, B=$memory$auto$proc_rom.cc:150:do_switch$117$rdmux[0][1][1]$b$587, Y=$memory$auto$proc_rom.cc:150:do_switch$117$rdmux[0][0][0]$b$581
      New ports: A={ $memory$auto$proc_rom.cc:150:do_switch$117$rdmux[0][1][1]$a$586 [13] $memory$auto$proc_rom.cc:150:do_switch$117$rdmux[0][1][1]$a$586 [6] $memory$auto$proc_rom.cc:150:do_switch$117$rdmux[0][1][1]$a$586 [9] $memory$auto$proc_rom.cc:150:do_switch$117$rdmux[0][1][1]$a$586 [10:9] 2'01 $memory$auto$proc_rom.cc:150:do_switch$117$rdmux[0][1][1]$a$586 [6:5] $memory$auto$proc_rom.cc:150:do_switch$117$rdmux[0][1][1]$a$586 [0] 1'1 $memory$auto$proc_rom.cc:150:do_switch$117$rdmux[0][1][1]$a$586 [2:0] }, B={ 1'0 $memory$auto$proc_rom.cc:150:do_switch$117$rdmux[0][1][1]$b$587 [2] $memory$auto$proc_rom.cc:150:do_switch$117$rdmux[0][1][1]$b$587 [2] 2'00 $memory$auto$proc_rom.cc:150:do_switch$117$rdmux[0][1][1]$b$587 [2] $memory$auto$proc_rom.cc:150:do_switch$117$rdmux[0][1][1]$b$587 [2] 2'00 $memory$auto$proc_rom.cc:150:do_switch$117$rdmux[0][1][1]$b$587 [2] 1'0 $memory$auto$proc_rom.cc:150:do_switch$117$rdmux[0][1][1]$b$587 [2] 2'01 }, Y=$memory$auto$proc_rom.cc:150:do_switch$117$rdmux[0][0][0]$b$581 [13:0]
      New connections: $memory$auto$proc_rom.cc:150:do_switch$117$rdmux[0][0][0]$b$581 [15:14] = { 1'0 $memory$auto$proc_rom.cc:150:do_switch$117$rdmux[0][0][0]$b$581 [7] }
    Consolidated identical input bits for $mux cell $memory$auto$proc_rom.cc:150:do_switch$117$rdmux[0][1][0]$582:
      Old ports: A=$memory$auto$proc_rom.cc:150:do_switch$117$rdmux[0][1][0]$a$583, B=$memory$auto$proc_rom.cc:150:do_switch$117$rdmux[0][1][0]$b$584, Y=$memory$auto$proc_rom.cc:150:do_switch$117$rdmux[0][0][0]$a$580
      New ports: A={ 2'10 $memory$auto$proc_rom.cc:150:do_switch$117$rdmux[0][1][0]$a$583 [13] $memory$auto$proc_rom.cc:150:do_switch$117$rdmux[0][1][0]$a$583 [9] $memory$auto$proc_rom.cc:150:do_switch$117$rdmux[0][1][0]$a$583 [4] $memory$auto$proc_rom.cc:150:do_switch$117$rdmux[0][1][0]$a$583 [7] $memory$auto$proc_rom.cc:150:do_switch$117$rdmux[0][1][0]$a$583 [9] $memory$auto$proc_rom.cc:150:do_switch$117$rdmux[0][1][0]$a$583 [2] $memory$auto$proc_rom.cc:150:do_switch$117$rdmux[0][1][0]$a$583 [7] $memory$auto$proc_rom.cc:150:do_switch$117$rdmux[0][1][0]$a$583 [5:4] 1'1 $memory$auto$proc_rom.cc:150:do_switch$117$rdmux[0][1][0]$a$583 [2:0] }, B={ $memory$auto$proc_rom.cc:150:do_switch$117$rdmux[0][1][0]$b$584 [15] $memory$auto$proc_rom.cc:150:do_switch$117$rdmux[0][1][0]$b$584 [7] $memory$auto$proc_rom.cc:150:do_switch$117$rdmux[0][1][0]$b$584 [7] $memory$auto$proc_rom.cc:150:do_switch$117$rdmux[0][1][0]$b$584 [7] $memory$auto$proc_rom.cc:150:do_switch$117$rdmux[0][1][0]$b$584 [11] 2'11 $memory$auto$proc_rom.cc:150:do_switch$117$rdmux[0][1][0]$b$584 [0] $memory$auto$proc_rom.cc:150:do_switch$117$rdmux[0][1][0]$b$584 [7] $memory$auto$proc_rom.cc:150:do_switch$117$rdmux[0][1][0]$b$584 [5] 1'1 $memory$auto$proc_rom.cc:150:do_switch$117$rdmux[0][1][0]$b$584 [1] $memory$auto$proc_rom.cc:150:do_switch$117$rdmux[0][1][0]$b$584 [2:0] }, Y={ $memory$auto$proc_rom.cc:150:do_switch$117$rdmux[0][0][0]$a$580 [15:7] $memory$auto$proc_rom.cc:150:do_switch$117$rdmux[0][0][0]$a$580 [5:0] }
      New connections: $memory$auto$proc_rom.cc:150:do_switch$117$rdmux[0][0][0]$a$580 [6] = 1'0
  Optimizing cells in module \frequency_divider.
  Optimizing cells in module \keypad_encoder.
  Optimizing cells in module \mode_fsm.
    Consolidated identical input bits for $mux cell $ternary$source/mode_fsm.sv:20$47:
      Old ports: A=2'01, B=2'11, Y=$ternary$source/mode_fsm.sv:20$47_Y
      New ports: A=1'0, B=1'1, Y=$ternary$source/mode_fsm.sv:20$47_Y [1]
      New connections: $ternary$source/mode_fsm.sv:20$47_Y [0] = 1'1
    Consolidated identical input bits for $mux cell $ternary$source/mode_fsm.sv:22$49:
      Old ports: A=2'10, B=2'00, Y=$ternary$source/mode_fsm.sv:22$49_Y
      New ports: A=1'1, B=1'0, Y=$ternary$source/mode_fsm.sv:22$49_Y [1]
      New connections: $ternary$source/mode_fsm.sv:22$49_Y [0] = 1'0
  Optimizing cells in module \mode_fsm.
  Optimizing cells in module \oscillator.
  Optimizing cells in module \pwm.
  Optimizing cells in module \sequential_div.
    Consolidated identical input bits for $mux cell $procmux$195:
      Old ports: A={ \R [22:0] 1'0 }, B={ $sub$source/sequential_div.sv:102$82_Y [23:8] \R [6:0] 1'0 }, Y=$3\next_r[23:0]
      New ports: A=\R [22:7], B=$sub$source/sequential_div.sv:102$82_Y [23:8], Y=$3\next_r[23:0] [23:8]
      New connections: $3\next_r[23:0] [7:0] = { \R [6:0] 1'0 }
  Optimizing cells in module \sequential_div.
    Consolidated identical input bits for $mux cell $procmux$203:
      Old ports: A={ \dividend 8'00000000 }, B=$3\next_r[23:0], Y=\next_r
      New ports: A={ \dividend 7'0000000 }, B={ $3\next_r[23:0] [23:8] \R [6:0] }, Y=\next_r [23:1]
      New connections: \next_r [0] = 1'0
  Optimizing cells in module \sequential_div.
  Optimizing cells in module \sound_series_fsm.
  Optimizing cells in module \synth.
  Optimizing cells in module \waveshaper.
    Consolidated identical input bits for $mux cell $ternary$source/waveshaper.sv:17$113:
      Old ports: A={ \quotient [6:0] 1'0 }, B={ \int_2 [7:1] 1'0 }, Y=$ternary$source/waveshaper.sv:17$113_Y
      New ports: A=\quotient [6:0], B=\int_2 [7:1], Y=$ternary$source/waveshaper.sv:17$113_Y [7:1]
      New connections: $ternary$source/waveshaper.sv:17$113_Y [0] = 1'0
    Consolidated identical input bits for $mux cell $ternary$source/waveshaper.sv:18$115:
      Old ports: A=8'00000000, B=8'11111111, Y=$auto$wreduce.cc:455:run$426 [7:0]
      New ports: A=1'0, B=1'1, Y=$auto$wreduce.cc:455:run$426 [0]
      New connections: $auto$wreduce.cc:455:run$426 [7:1] = { $auto$wreduce.cc:455:run$426 [0] $auto$wreduce.cc:455:run$426 [0] $auto$wreduce.cc:455:run$426 [0] $auto$wreduce.cc:455:run$426 [0] $auto$wreduce.cc:455:run$426 [0] $auto$wreduce.cc:455:run$426 [0] $auto$wreduce.cc:455:run$426 [0] }
  Optimizing cells in module \waveshaper.
Performed a total of 33 changes.

12.19.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\clock_8Hz'.
Finding identical cells in module `\clock_div'.
Finding identical cells in module `\frequency_divider'.
<suppressed ~36 debug messages>
Finding identical cells in module `\keypad_encoder'.
Finding identical cells in module `\mode_fsm'.
Finding identical cells in module `\oscillator'.
Finding identical cells in module `\pwm'.
Finding identical cells in module `\sequential_div'.
Finding identical cells in module `\sound_series_fsm'.
Finding identical cells in module `\synth'.
Finding identical cells in module `\waveshaper'.
Removed a total of 12 cells.

12.19.6. Executing OPT_SHARE pass.

12.19.7. Executing OPT_DFF pass (perform DFF optimizations).

12.19.8. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \clock_8Hz..
Finding unused cells or wires in module \clock_div..
Finding unused cells or wires in module \frequency_divider..
Finding unused cells or wires in module \keypad_encoder..
Finding unused cells or wires in module \mode_fsm..
Finding unused cells or wires in module \oscillator..
Finding unused cells or wires in module \pwm..
Finding unused cells or wires in module \sequential_div..
Finding unused cells or wires in module \sound_series_fsm..
Finding unused cells or wires in module \synth..
Finding unused cells or wires in module \waveshaper..
Removed 0 unused cells and 46 unused wires.
<suppressed ~1 debug messages>

12.19.9. Executing OPT_EXPR pass (perform const folding).
Optimizing module clock_8Hz.
Optimizing module clock_div.
Optimizing module frequency_divider.
<suppressed ~1 debug messages>
Optimizing module keypad_encoder.
Optimizing module mode_fsm.
<suppressed ~2 debug messages>
Optimizing module oscillator.
Optimizing module pwm.
Optimizing module sequential_div.
Optimizing module sound_series_fsm.
Optimizing module synth.
Optimizing module waveshaper.
<suppressed ~1 debug messages>

12.19.10. Rerunning OPT passes. (Maybe there is more to do..)

12.19.11. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \clock_8Hz..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \clock_div..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \frequency_divider..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \keypad_encoder..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \mode_fsm..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \oscillator..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \pwm..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \sequential_div..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \sound_series_fsm..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \synth..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \waveshaper..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~20 debug messages>

12.19.12. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \clock_8Hz.
  Optimizing cells in module \clock_div.
  Optimizing cells in module \frequency_divider.
    Consolidated identical input bits for $mux cell $memory$auto$proc_rom.cc:150:do_switch$117$rdmux[0][2][1]$591:
      Old ports: A={ 1'1 $memory$auto$proc_rom.cc:150:do_switch$117$rdmux[0][2][0]$a$589 [12] 2'01 $memory$auto$proc_rom.cc:150:do_switch$117$rdmux[0][2][0]$a$589 [12:11] 1'0 }, B={ 1'0 $memory$auto$proc_rom.cc:150:do_switch$117$rdmux[0][2][0]$a$589 [12] 1'1 $memory$auto$proc_rom.cc:150:do_switch$117$rdmux[0][2][0]$a$589 [12:11] 1'0 $memory$auto$proc_rom.cc:150:do_switch$117$rdmux[0][2][0]$a$589 [11] }, Y={ $memory$auto$proc_rom.cc:150:do_switch$117$rdmux[0][1][0]$b$584 [15] $memory$auto$proc_rom.cc:150:do_switch$117$rdmux[0][1][0]$b$584 [11] $memory$auto$proc_rom.cc:150:do_switch$117$rdmux[0][1][0]$b$584 [14] $memory$auto$proc_rom.cc:150:do_switch$117$rdmux[0][1][0]$b$584 [5] $memory$auto$proc_rom.cc:150:do_switch$117$rdmux[0][1][0]$b$584 [2] $memory$auto$proc_rom.cc:150:do_switch$117$rdmux[0][1][0]$b$584 [3] $memory$auto$proc_rom.cc:150:do_switch$117$rdmux[0][1][0]$b$584 [8] }
      New ports: A={ 3'101 $memory$auto$proc_rom.cc:150:do_switch$117$rdmux[0][2][0]$a$589 [12:11] 1'0 }, B={ 2'01 $memory$auto$proc_rom.cc:150:do_switch$117$rdmux[0][2][0]$a$589 [12:11] 1'0 $memory$auto$proc_rom.cc:150:do_switch$117$rdmux[0][2][0]$a$589 [11] }, Y={ $memory$auto$proc_rom.cc:150:do_switch$117$rdmux[0][1][0]$b$584 [15:14] $memory$auto$proc_rom.cc:150:do_switch$117$rdmux[0][1][0]$b$584 [5] $memory$auto$proc_rom.cc:150:do_switch$117$rdmux[0][1][0]$b$584 [2] $memory$auto$proc_rom.cc:150:do_switch$117$rdmux[0][1][0]$b$584 [3] $memory$auto$proc_rom.cc:150:do_switch$117$rdmux[0][1][0]$b$584 [8] }
      New connections: $memory$auto$proc_rom.cc:150:do_switch$117$rdmux[0][1][0]$b$584 [11] = $memory$auto$proc_rom.cc:150:do_switch$117$rdmux[0][2][0]$a$589 [12]
    Consolidated identical input bits for $mux cell $memory$auto$proc_rom.cc:150:do_switch$117$rdmux[0][2][2]$594:
      Old ports: A={ 2'10 $memory$auto$proc_rom.cc:150:do_switch$117$rdmux[0][2][2]$a$595 [11] $memory$auto$proc_rom.cc:150:do_switch$117$rdmux[0][2][2]$a$595 [12] 1'0 $memory$auto$proc_rom.cc:150:do_switch$117$rdmux[0][2][2]$a$595 [12] $memory$auto$proc_rom.cc:150:do_switch$117$rdmux[0][2][2]$a$595 [12] $memory$auto$proc_rom.cc:150:do_switch$117$rdmux[0][2][2]$a$595 [12] }, B={ $memory$auto$proc_rom.cc:150:do_switch$117$rdmux[0][2][2]$a$595 [12] 1'1 $memory$auto$proc_rom.cc:150:do_switch$117$rdmux[0][2][2]$a$595 [11] $memory$auto$proc_rom.cc:150:do_switch$117$rdmux[0][2][2]$a$595 [11] $memory$auto$proc_rom.cc:150:do_switch$117$rdmux[0][2][2]$a$595 [11] $memory$auto$proc_rom.cc:150:do_switch$117$rdmux[0][2][2]$a$595 [12] 2'10 }, Y={ $memory$auto$proc_rom.cc:150:do_switch$117$rdmux[0][1][1]$a$586 [13] $memory$auto$proc_rom.cc:150:do_switch$117$rdmux[0][1][1]$a$586 [10] $memory$auto$proc_rom.cc:150:do_switch$117$rdmux[0][1][1]$a$586 [11] $memory$auto$proc_rom.cc:150:do_switch$117$rdmux[0][1][1]$a$586 [12] $memory$auto$proc_rom.cc:150:do_switch$117$rdmux[0][1][1]$a$586 [5] $memory$auto$proc_rom.cc:150:do_switch$117$rdmux[0][1][1]$a$586 [2:1] $memory$auto$proc_rom.cc:150:do_switch$117$rdmux[0][1][1]$a$586 [4] }
      New ports: A={ 2'10 $memory$auto$proc_rom.cc:150:do_switch$117$rdmux[0][2][2]$a$595 [12] 1'0 $memory$auto$proc_rom.cc:150:do_switch$117$rdmux[0][2][2]$a$595 [12] $memory$auto$proc_rom.cc:150:do_switch$117$rdmux[0][2][2]$a$595 [12] }, B={ $memory$auto$proc_rom.cc:150:do_switch$117$rdmux[0][2][2]$a$595 [12] 1'1 $memory$auto$proc_rom.cc:150:do_switch$117$rdmux[0][2][2]$a$595 [11] $memory$auto$proc_rom.cc:150:do_switch$117$rdmux[0][2][2]$a$595 [11] 2'10 }, Y={ $memory$auto$proc_rom.cc:150:do_switch$117$rdmux[0][1][1]$a$586 [13] $memory$auto$proc_rom.cc:150:do_switch$117$rdmux[0][1][1]$a$586 [10] $memory$auto$proc_rom.cc:150:do_switch$117$rdmux[0][1][1]$a$586 [12] $memory$auto$proc_rom.cc:150:do_switch$117$rdmux[0][1][1]$a$586 [5] $memory$auto$proc_rom.cc:150:do_switch$117$rdmux[0][1][1]$a$586 [1] $memory$auto$proc_rom.cc:150:do_switch$117$rdmux[0][1][1]$a$586 [4] }
      New connections: { $memory$auto$proc_rom.cc:150:do_switch$117$rdmux[0][1][1]$a$586 [11] $memory$auto$proc_rom.cc:150:do_switch$117$rdmux[0][1][1]$a$586 [2] } = { $memory$auto$proc_rom.cc:150:do_switch$117$rdmux[0][2][2]$a$595 [11] $memory$auto$proc_rom.cc:150:do_switch$117$rdmux[0][2][2]$a$595 [12] }
  Optimizing cells in module \frequency_divider.
  Optimizing cells in module \keypad_encoder.
  Optimizing cells in module \mode_fsm.
  Optimizing cells in module \oscillator.
  Optimizing cells in module \pwm.
  Optimizing cells in module \sequential_div.
  Optimizing cells in module \sound_series_fsm.
  Optimizing cells in module \synth.
  Optimizing cells in module \waveshaper.
Performed a total of 2 changes.

12.19.13. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\clock_8Hz'.
Finding identical cells in module `\clock_div'.
Finding identical cells in module `\frequency_divider'.
Finding identical cells in module `\keypad_encoder'.
Finding identical cells in module `\mode_fsm'.
<suppressed ~3 debug messages>
Finding identical cells in module `\oscillator'.
Finding identical cells in module `\pwm'.
Finding identical cells in module `\sequential_div'.
Finding identical cells in module `\sound_series_fsm'.
Finding identical cells in module `\synth'.
Finding identical cells in module `\waveshaper'.
Removed a total of 1 cells.

12.19.14. Executing OPT_SHARE pass.

12.19.15. Executing OPT_DFF pass (perform DFF optimizations).
Setting constant 0-bit at position 0 on $auto$ff.cc:266:slice$405 ($adffe) from module sequential_div.

12.19.16. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \clock_8Hz..
Finding unused cells or wires in module \clock_div..
Finding unused cells or wires in module \frequency_divider..
Finding unused cells or wires in module \keypad_encoder..
Finding unused cells or wires in module \mode_fsm..
Finding unused cells or wires in module \oscillator..
Finding unused cells or wires in module \pwm..
Finding unused cells or wires in module \sequential_div..
Finding unused cells or wires in module \sound_series_fsm..
Finding unused cells or wires in module \synth..
Finding unused cells or wires in module \waveshaper..
Removed 0 unused cells and 4 unused wires.
<suppressed ~3 debug messages>

12.19.17. Executing OPT_EXPR pass (perform const folding).
Optimizing module clock_8Hz.
Optimizing module clock_div.
Optimizing module frequency_divider.
Optimizing module keypad_encoder.
Optimizing module mode_fsm.
Optimizing module oscillator.
Optimizing module pwm.
Optimizing module sequential_div.
Optimizing module sound_series_fsm.
Optimizing module synth.
Optimizing module waveshaper.

12.19.18. Rerunning OPT passes. (Maybe there is more to do..)

12.19.19. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \clock_8Hz..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \clock_div..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \frequency_divider..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \keypad_encoder..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \mode_fsm..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \oscillator..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \pwm..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \sequential_div..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \sound_series_fsm..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \synth..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \waveshaper..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~20 debug messages>

12.19.20. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \clock_8Hz.
  Optimizing cells in module \clock_div.
  Optimizing cells in module \frequency_divider.
  Optimizing cells in module \keypad_encoder.
  Optimizing cells in module \mode_fsm.
  Optimizing cells in module \oscillator.
  Optimizing cells in module \pwm.
  Optimizing cells in module \sequential_div.
    Consolidated identical input bits for $mux cell $procmux$203:
      Old ports: A={ \dividend 7'0000000 }, B={ $3\next_r[23:0] [23:8] \R [6:1] 1'0 }, Y=\next_r [23:1]
      New ports: A={ \dividend 6'000000 }, B={ $3\next_r[23:0] [23:8] \R [6:1] }, Y=\next_r [23:2]
      New connections: \next_r [1] = 1'0
  Optimizing cells in module \sequential_div.
  Optimizing cells in module \sound_series_fsm.
  Optimizing cells in module \synth.
  Optimizing cells in module \waveshaper.
Performed a total of 1 changes.

12.19.21. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\clock_8Hz'.
Finding identical cells in module `\clock_div'.
Finding identical cells in module `\frequency_divider'.
Finding identical cells in module `\keypad_encoder'.
Finding identical cells in module `\mode_fsm'.
Finding identical cells in module `\oscillator'.
Finding identical cells in module `\pwm'.
Finding identical cells in module `\sequential_div'.
Finding identical cells in module `\sound_series_fsm'.
Finding identical cells in module `\synth'.
Finding identical cells in module `\waveshaper'.
Removed a total of 0 cells.

12.19.22. Executing OPT_SHARE pass.

12.19.23. Executing OPT_DFF pass (perform DFF optimizations).

12.19.24. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \clock_8Hz..
Finding unused cells or wires in module \clock_div..
Finding unused cells or wires in module \frequency_divider..
Finding unused cells or wires in module \keypad_encoder..
Finding unused cells or wires in module \mode_fsm..
Finding unused cells or wires in module \oscillator..
Finding unused cells or wires in module \pwm..
Finding unused cells or wires in module \sequential_div..
Finding unused cells or wires in module \sound_series_fsm..
Finding unused cells or wires in module \synth..
Finding unused cells or wires in module \waveshaper..

12.19.25. Executing OPT_EXPR pass (perform const folding).
Optimizing module clock_8Hz.
Optimizing module clock_div.
Optimizing module frequency_divider.
Optimizing module keypad_encoder.
Optimizing module mode_fsm.
Optimizing module oscillator.
Optimizing module pwm.
Optimizing module sequential_div.
Optimizing module sound_series_fsm.
Optimizing module synth.
Optimizing module waveshaper.

12.19.26. Rerunning OPT passes. (Maybe there is more to do..)

12.19.27. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \clock_8Hz..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \clock_div..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \frequency_divider..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \keypad_encoder..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \mode_fsm..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \oscillator..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \pwm..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \sequential_div..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \sound_series_fsm..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \synth..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \waveshaper..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~20 debug messages>

12.19.28. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \clock_8Hz.
  Optimizing cells in module \clock_div.
  Optimizing cells in module \frequency_divider.
  Optimizing cells in module \keypad_encoder.
  Optimizing cells in module \mode_fsm.
  Optimizing cells in module \oscillator.
  Optimizing cells in module \pwm.
  Optimizing cells in module \sequential_div.
  Optimizing cells in module \sound_series_fsm.
  Optimizing cells in module \synth.
  Optimizing cells in module \waveshaper.
Performed a total of 0 changes.

12.19.29. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\clock_8Hz'.
Finding identical cells in module `\clock_div'.
Finding identical cells in module `\frequency_divider'.
Finding identical cells in module `\keypad_encoder'.
Finding identical cells in module `\mode_fsm'.
Finding identical cells in module `\oscillator'.
Finding identical cells in module `\pwm'.
Finding identical cells in module `\sequential_div'.
Finding identical cells in module `\sound_series_fsm'.
Finding identical cells in module `\synth'.
Finding identical cells in module `\waveshaper'.
Removed a total of 0 cells.

12.19.30. Executing OPT_SHARE pass.

12.19.31. Executing OPT_DFF pass (perform DFF optimizations).
Setting constant 0-bit at position 0 on $auto$ff.cc:266:slice$669 ($adffe) from module sequential_div.

12.19.32. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \clock_8Hz..
Finding unused cells or wires in module \clock_div..
Finding unused cells or wires in module \frequency_divider..
Finding unused cells or wires in module \keypad_encoder..
Finding unused cells or wires in module \mode_fsm..
Finding unused cells or wires in module \oscillator..
Finding unused cells or wires in module \pwm..
Finding unused cells or wires in module \sequential_div..
Finding unused cells or wires in module \sound_series_fsm..
Finding unused cells or wires in module \synth..
Finding unused cells or wires in module \waveshaper..

12.19.33. Executing OPT_EXPR pass (perform const folding).
Optimizing module clock_8Hz.
Optimizing module clock_div.
Optimizing module frequency_divider.
Optimizing module keypad_encoder.
Optimizing module mode_fsm.
Optimizing module oscillator.
Optimizing module pwm.
Optimizing module sequential_div.
Optimizing module sound_series_fsm.
Optimizing module synth.
Optimizing module waveshaper.

12.19.34. Rerunning OPT passes. (Maybe there is more to do..)

12.19.35. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \clock_8Hz..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \clock_div..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \frequency_divider..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \keypad_encoder..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \mode_fsm..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \oscillator..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \pwm..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \sequential_div..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \sound_series_fsm..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \synth..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \waveshaper..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~20 debug messages>

12.19.36. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \clock_8Hz.
  Optimizing cells in module \clock_div.
  Optimizing cells in module \frequency_divider.
  Optimizing cells in module \keypad_encoder.
  Optimizing cells in module \mode_fsm.
  Optimizing cells in module \oscillator.
  Optimizing cells in module \pwm.
  Optimizing cells in module \sequential_div.
    Consolidated identical input bits for $mux cell $procmux$203:
      Old ports: A={ \dividend 6'000000 }, B={ $3\next_r[23:0] [23:8] \R [6:2] 1'0 }, Y=\next_r [23:2]
      New ports: A={ \dividend 5'00000 }, B={ $3\next_r[23:0] [23:8] \R [6:2] }, Y=\next_r [23:3]
      New connections: \next_r [2] = 1'0
  Optimizing cells in module \sequential_div.
  Optimizing cells in module \sound_series_fsm.
  Optimizing cells in module \synth.
  Optimizing cells in module \waveshaper.
Performed a total of 1 changes.

12.19.37. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\clock_8Hz'.
Finding identical cells in module `\clock_div'.
Finding identical cells in module `\frequency_divider'.
Finding identical cells in module `\keypad_encoder'.
Finding identical cells in module `\mode_fsm'.
Finding identical cells in module `\oscillator'.
Finding identical cells in module `\pwm'.
Finding identical cells in module `\sequential_div'.
Finding identical cells in module `\sound_series_fsm'.
Finding identical cells in module `\synth'.
Finding identical cells in module `\waveshaper'.
Removed a total of 0 cells.

12.19.38. Executing OPT_SHARE pass.

12.19.39. Executing OPT_DFF pass (perform DFF optimizations).

12.19.40. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \clock_8Hz..
Finding unused cells or wires in module \clock_div..
Finding unused cells or wires in module \frequency_divider..
Finding unused cells or wires in module \keypad_encoder..
Finding unused cells or wires in module \mode_fsm..
Finding unused cells or wires in module \oscillator..
Finding unused cells or wires in module \pwm..
Finding unused cells or wires in module \sequential_div..
Finding unused cells or wires in module \sound_series_fsm..
Finding unused cells or wires in module \synth..
Finding unused cells or wires in module \waveshaper..

12.19.41. Executing OPT_EXPR pass (perform const folding).
Optimizing module clock_8Hz.
Optimizing module clock_div.
Optimizing module frequency_divider.
Optimizing module keypad_encoder.
Optimizing module mode_fsm.
Optimizing module oscillator.
Optimizing module pwm.
Optimizing module sequential_div.
Optimizing module sound_series_fsm.
Optimizing module synth.
Optimizing module waveshaper.

12.19.42. Rerunning OPT passes. (Maybe there is more to do..)

12.19.43. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \clock_8Hz..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \clock_div..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \frequency_divider..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \keypad_encoder..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \mode_fsm..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \oscillator..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \pwm..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \sequential_div..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \sound_series_fsm..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \synth..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \waveshaper..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~20 debug messages>

12.19.44. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \clock_8Hz.
  Optimizing cells in module \clock_div.
  Optimizing cells in module \frequency_divider.
  Optimizing cells in module \keypad_encoder.
  Optimizing cells in module \mode_fsm.
  Optimizing cells in module \oscillator.
  Optimizing cells in module \pwm.
  Optimizing cells in module \sequential_div.
  Optimizing cells in module \sound_series_fsm.
  Optimizing cells in module \synth.
  Optimizing cells in module \waveshaper.
Performed a total of 0 changes.

12.19.45. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\clock_8Hz'.
Finding identical cells in module `\clock_div'.
Finding identical cells in module `\frequency_divider'.
Finding identical cells in module `\keypad_encoder'.
Finding identical cells in module `\mode_fsm'.
Finding identical cells in module `\oscillator'.
Finding identical cells in module `\pwm'.
Finding identical cells in module `\sequential_div'.
Finding identical cells in module `\sound_series_fsm'.
Finding identical cells in module `\synth'.
Finding identical cells in module `\waveshaper'.
Removed a total of 0 cells.

12.19.46. Executing OPT_SHARE pass.

12.19.47. Executing OPT_DFF pass (perform DFF optimizations).
Setting constant 0-bit at position 0 on $auto$ff.cc:266:slice$670 ($adffe) from module sequential_div.

12.19.48. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \clock_8Hz..
Finding unused cells or wires in module \clock_div..
Finding unused cells or wires in module \frequency_divider..
Finding unused cells or wires in module \keypad_encoder..
Finding unused cells or wires in module \mode_fsm..
Finding unused cells or wires in module \oscillator..
Finding unused cells or wires in module \pwm..
Finding unused cells or wires in module \sequential_div..
Finding unused cells or wires in module \sound_series_fsm..
Finding unused cells or wires in module \synth..
Finding unused cells or wires in module \waveshaper..

12.19.49. Executing OPT_EXPR pass (perform const folding).
Optimizing module clock_8Hz.
Optimizing module clock_div.
Optimizing module frequency_divider.
Optimizing module keypad_encoder.
Optimizing module mode_fsm.
Optimizing module oscillator.
Optimizing module pwm.
Optimizing module sequential_div.
Optimizing module sound_series_fsm.
Optimizing module synth.
Optimizing module waveshaper.

12.19.50. Rerunning OPT passes. (Maybe there is more to do..)

12.19.51. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \clock_8Hz..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \clock_div..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \frequency_divider..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \keypad_encoder..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \mode_fsm..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \oscillator..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \pwm..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \sequential_div..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \sound_series_fsm..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \synth..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \waveshaper..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~20 debug messages>

12.19.52. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \clock_8Hz.
  Optimizing cells in module \clock_div.
  Optimizing cells in module \frequency_divider.
  Optimizing cells in module \keypad_encoder.
  Optimizing cells in module \mode_fsm.
  Optimizing cells in module \oscillator.
  Optimizing cells in module \pwm.
  Optimizing cells in module \sequential_div.
    Consolidated identical input bits for $mux cell $procmux$203:
      Old ports: A={ \dividend 5'00000 }, B={ $3\next_r[23:0] [23:8] \R [6:3] 1'0 }, Y=\next_r [23:3]
      New ports: A={ \dividend 4'0000 }, B={ $3\next_r[23:0] [23:8] \R [6:3] }, Y=\next_r [23:4]
      New connections: \next_r [3] = 1'0
  Optimizing cells in module \sequential_div.
  Optimizing cells in module \sound_series_fsm.
  Optimizing cells in module \synth.
  Optimizing cells in module \waveshaper.
Performed a total of 1 changes.

12.19.53. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\clock_8Hz'.
Finding identical cells in module `\clock_div'.
Finding identical cells in module `\frequency_divider'.
Finding identical cells in module `\keypad_encoder'.
Finding identical cells in module `\mode_fsm'.
Finding identical cells in module `\oscillator'.
Finding identical cells in module `\pwm'.
Finding identical cells in module `\sequential_div'.
Finding identical cells in module `\sound_series_fsm'.
Finding identical cells in module `\synth'.
Finding identical cells in module `\waveshaper'.
Removed a total of 0 cells.

12.19.54. Executing OPT_SHARE pass.

12.19.55. Executing OPT_DFF pass (perform DFF optimizations).

12.19.56. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \clock_8Hz..
Finding unused cells or wires in module \clock_div..
Finding unused cells or wires in module \frequency_divider..
Finding unused cells or wires in module \keypad_encoder..
Finding unused cells or wires in module \mode_fsm..
Finding unused cells or wires in module \oscillator..
Finding unused cells or wires in module \pwm..
Finding unused cells or wires in module \sequential_div..
Finding unused cells or wires in module \sound_series_fsm..
Finding unused cells or wires in module \synth..
Finding unused cells or wires in module \waveshaper..

12.19.57. Executing OPT_EXPR pass (perform const folding).
Optimizing module clock_8Hz.
Optimizing module clock_div.
Optimizing module frequency_divider.
Optimizing module keypad_encoder.
Optimizing module mode_fsm.
Optimizing module oscillator.
Optimizing module pwm.
Optimizing module sequential_div.
Optimizing module sound_series_fsm.
Optimizing module synth.
Optimizing module waveshaper.

12.19.58. Rerunning OPT passes. (Maybe there is more to do..)

12.19.59. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \clock_8Hz..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \clock_div..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \frequency_divider..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \keypad_encoder..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \mode_fsm..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \oscillator..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \pwm..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \sequential_div..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \sound_series_fsm..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \synth..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \waveshaper..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~20 debug messages>

12.19.60. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \clock_8Hz.
  Optimizing cells in module \clock_div.
  Optimizing cells in module \frequency_divider.
  Optimizing cells in module \keypad_encoder.
  Optimizing cells in module \mode_fsm.
  Optimizing cells in module \oscillator.
  Optimizing cells in module \pwm.
  Optimizing cells in module \sequential_div.
  Optimizing cells in module \sound_series_fsm.
  Optimizing cells in module \synth.
  Optimizing cells in module \waveshaper.
Performed a total of 0 changes.

12.19.61. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\clock_8Hz'.
Finding identical cells in module `\clock_div'.
Finding identical cells in module `\frequency_divider'.
Finding identical cells in module `\keypad_encoder'.
Finding identical cells in module `\mode_fsm'.
Finding identical cells in module `\oscillator'.
Finding identical cells in module `\pwm'.
Finding identical cells in module `\sequential_div'.
Finding identical cells in module `\sound_series_fsm'.
Finding identical cells in module `\synth'.
Finding identical cells in module `\waveshaper'.
Removed a total of 0 cells.

12.19.62. Executing OPT_SHARE pass.

12.19.63. Executing OPT_DFF pass (perform DFF optimizations).
Setting constant 0-bit at position 0 on $auto$ff.cc:266:slice$671 ($adffe) from module sequential_div.

12.19.64. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \clock_8Hz..
Finding unused cells or wires in module \clock_div..
Finding unused cells or wires in module \frequency_divider..
Finding unused cells or wires in module \keypad_encoder..
Finding unused cells or wires in module \mode_fsm..
Finding unused cells or wires in module \oscillator..
Finding unused cells or wires in module \pwm..
Finding unused cells or wires in module \sequential_div..
Finding unused cells or wires in module \sound_series_fsm..
Finding unused cells or wires in module \synth..
Finding unused cells or wires in module \waveshaper..

12.19.65. Executing OPT_EXPR pass (perform const folding).
Optimizing module clock_8Hz.
Optimizing module clock_div.
Optimizing module frequency_divider.
Optimizing module keypad_encoder.
Optimizing module mode_fsm.
Optimizing module oscillator.
Optimizing module pwm.
Optimizing module sequential_div.
Optimizing module sound_series_fsm.
Optimizing module synth.
Optimizing module waveshaper.

12.19.66. Rerunning OPT passes. (Maybe there is more to do..)

12.19.67. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \clock_8Hz..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \clock_div..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \frequency_divider..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \keypad_encoder..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \mode_fsm..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \oscillator..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \pwm..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \sequential_div..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \sound_series_fsm..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \synth..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \waveshaper..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~20 debug messages>

12.19.68. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \clock_8Hz.
  Optimizing cells in module \clock_div.
  Optimizing cells in module \frequency_divider.
  Optimizing cells in module \keypad_encoder.
  Optimizing cells in module \mode_fsm.
  Optimizing cells in module \oscillator.
  Optimizing cells in module \pwm.
  Optimizing cells in module \sequential_div.
    Consolidated identical input bits for $mux cell $procmux$203:
      Old ports: A={ \dividend 4'0000 }, B={ $3\next_r[23:0] [23:8] \R [6:4] 1'0 }, Y=\next_r [23:4]
      New ports: A={ \dividend 3'000 }, B={ $3\next_r[23:0] [23:8] \R [6:4] }, Y=\next_r [23:5]
      New connections: \next_r [4] = 1'0
  Optimizing cells in module \sequential_div.
  Optimizing cells in module \sound_series_fsm.
  Optimizing cells in module \synth.
  Optimizing cells in module \waveshaper.
Performed a total of 1 changes.

12.19.69. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\clock_8Hz'.
Finding identical cells in module `\clock_div'.
Finding identical cells in module `\frequency_divider'.
Finding identical cells in module `\keypad_encoder'.
Finding identical cells in module `\mode_fsm'.
Finding identical cells in module `\oscillator'.
Finding identical cells in module `\pwm'.
Finding identical cells in module `\sequential_div'.
Finding identical cells in module `\sound_series_fsm'.
Finding identical cells in module `\synth'.
Finding identical cells in module `\waveshaper'.
Removed a total of 0 cells.

12.19.70. Executing OPT_SHARE pass.

12.19.71. Executing OPT_DFF pass (perform DFF optimizations).

12.19.72. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \clock_8Hz..
Finding unused cells or wires in module \clock_div..
Finding unused cells or wires in module \frequency_divider..
Finding unused cells or wires in module \keypad_encoder..
Finding unused cells or wires in module \mode_fsm..
Finding unused cells or wires in module \oscillator..
Finding unused cells or wires in module \pwm..
Finding unused cells or wires in module \sequential_div..
Finding unused cells or wires in module \sound_series_fsm..
Finding unused cells or wires in module \synth..
Finding unused cells or wires in module \waveshaper..

12.19.73. Executing OPT_EXPR pass (perform const folding).
Optimizing module clock_8Hz.
Optimizing module clock_div.
Optimizing module frequency_divider.
Optimizing module keypad_encoder.
Optimizing module mode_fsm.
Optimizing module oscillator.
Optimizing module pwm.
Optimizing module sequential_div.
Optimizing module sound_series_fsm.
Optimizing module synth.
Optimizing module waveshaper.

12.19.74. Rerunning OPT passes. (Maybe there is more to do..)

12.19.75. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \clock_8Hz..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \clock_div..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \frequency_divider..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \keypad_encoder..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \mode_fsm..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \oscillator..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \pwm..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \sequential_div..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \sound_series_fsm..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \synth..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \waveshaper..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~20 debug messages>

12.19.76. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \clock_8Hz.
  Optimizing cells in module \clock_div.
  Optimizing cells in module \frequency_divider.
  Optimizing cells in module \keypad_encoder.
  Optimizing cells in module \mode_fsm.
  Optimizing cells in module \oscillator.
  Optimizing cells in module \pwm.
  Optimizing cells in module \sequential_div.
  Optimizing cells in module \sound_series_fsm.
  Optimizing cells in module \synth.
  Optimizing cells in module \waveshaper.
Performed a total of 0 changes.

12.19.77. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\clock_8Hz'.
Finding identical cells in module `\clock_div'.
Finding identical cells in module `\frequency_divider'.
Finding identical cells in module `\keypad_encoder'.
Finding identical cells in module `\mode_fsm'.
Finding identical cells in module `\oscillator'.
Finding identical cells in module `\pwm'.
Finding identical cells in module `\sequential_div'.
Finding identical cells in module `\sound_series_fsm'.
Finding identical cells in module `\synth'.
Finding identical cells in module `\waveshaper'.
Removed a total of 0 cells.

12.19.78. Executing OPT_SHARE pass.

12.19.79. Executing OPT_DFF pass (perform DFF optimizations).
Setting constant 0-bit at position 0 on $auto$ff.cc:266:slice$672 ($adffe) from module sequential_div.

12.19.80. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \clock_8Hz..
Finding unused cells or wires in module \clock_div..
Finding unused cells or wires in module \frequency_divider..
Finding unused cells or wires in module \keypad_encoder..
Finding unused cells or wires in module \mode_fsm..
Finding unused cells or wires in module \oscillator..
Finding unused cells or wires in module \pwm..
Finding unused cells or wires in module \sequential_div..
Finding unused cells or wires in module \sound_series_fsm..
Finding unused cells or wires in module \synth..
Finding unused cells or wires in module \waveshaper..

12.19.81. Executing OPT_EXPR pass (perform const folding).
Optimizing module clock_8Hz.
Optimizing module clock_div.
Optimizing module frequency_divider.
Optimizing module keypad_encoder.
Optimizing module mode_fsm.
Optimizing module oscillator.
Optimizing module pwm.
Optimizing module sequential_div.
Optimizing module sound_series_fsm.
Optimizing module synth.
Optimizing module waveshaper.

12.19.82. Rerunning OPT passes. (Maybe there is more to do..)

12.19.83. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \clock_8Hz..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \clock_div..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \frequency_divider..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \keypad_encoder..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \mode_fsm..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \oscillator..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \pwm..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \sequential_div..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \sound_series_fsm..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \synth..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \waveshaper..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~20 debug messages>

12.19.84. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \clock_8Hz.
  Optimizing cells in module \clock_div.
  Optimizing cells in module \frequency_divider.
  Optimizing cells in module \keypad_encoder.
  Optimizing cells in module \mode_fsm.
  Optimizing cells in module \oscillator.
  Optimizing cells in module \pwm.
  Optimizing cells in module \sequential_div.
    Consolidated identical input bits for $mux cell $procmux$203:
      Old ports: A={ \dividend 3'000 }, B={ $3\next_r[23:0] [23:8] \R [6:5] 1'0 }, Y=\next_r [23:5]
      New ports: A={ \dividend 2'00 }, B={ $3\next_r[23:0] [23:8] \R [6:5] }, Y=\next_r [23:6]
      New connections: \next_r [5] = 1'0
  Optimizing cells in module \sequential_div.
  Optimizing cells in module \sound_series_fsm.
  Optimizing cells in module \synth.
  Optimizing cells in module \waveshaper.
Performed a total of 1 changes.

12.19.85. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\clock_8Hz'.
Finding identical cells in module `\clock_div'.
Finding identical cells in module `\frequency_divider'.
Finding identical cells in module `\keypad_encoder'.
Finding identical cells in module `\mode_fsm'.
Finding identical cells in module `\oscillator'.
Finding identical cells in module `\pwm'.
Finding identical cells in module `\sequential_div'.
Finding identical cells in module `\sound_series_fsm'.
Finding identical cells in module `\synth'.
Finding identical cells in module `\waveshaper'.
Removed a total of 0 cells.

12.19.86. Executing OPT_SHARE pass.

12.19.87. Executing OPT_DFF pass (perform DFF optimizations).

12.19.88. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \clock_8Hz..
Finding unused cells or wires in module \clock_div..
Finding unused cells or wires in module \frequency_divider..
Finding unused cells or wires in module \keypad_encoder..
Finding unused cells or wires in module \mode_fsm..
Finding unused cells or wires in module \oscillator..
Finding unused cells or wires in module \pwm..
Finding unused cells or wires in module \sequential_div..
Finding unused cells or wires in module \sound_series_fsm..
Finding unused cells or wires in module \synth..
Finding unused cells or wires in module \waveshaper..

12.19.89. Executing OPT_EXPR pass (perform const folding).
Optimizing module clock_8Hz.
Optimizing module clock_div.
Optimizing module frequency_divider.
Optimizing module keypad_encoder.
Optimizing module mode_fsm.
Optimizing module oscillator.
Optimizing module pwm.
Optimizing module sequential_div.
Optimizing module sound_series_fsm.
Optimizing module synth.
Optimizing module waveshaper.

12.19.90. Rerunning OPT passes. (Maybe there is more to do..)

12.19.91. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \clock_8Hz..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \clock_div..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \frequency_divider..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \keypad_encoder..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \mode_fsm..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \oscillator..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \pwm..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \sequential_div..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \sound_series_fsm..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \synth..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \waveshaper..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~20 debug messages>

12.19.92. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \clock_8Hz.
  Optimizing cells in module \clock_div.
  Optimizing cells in module \frequency_divider.
  Optimizing cells in module \keypad_encoder.
  Optimizing cells in module \mode_fsm.
  Optimizing cells in module \oscillator.
  Optimizing cells in module \pwm.
  Optimizing cells in module \sequential_div.
  Optimizing cells in module \sound_series_fsm.
  Optimizing cells in module \synth.
  Optimizing cells in module \waveshaper.
Performed a total of 0 changes.

12.19.93. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\clock_8Hz'.
Finding identical cells in module `\clock_div'.
Finding identical cells in module `\frequency_divider'.
Finding identical cells in module `\keypad_encoder'.
Finding identical cells in module `\mode_fsm'.
Finding identical cells in module `\oscillator'.
Finding identical cells in module `\pwm'.
Finding identical cells in module `\sequential_div'.
Finding identical cells in module `\sound_series_fsm'.
Finding identical cells in module `\synth'.
Finding identical cells in module `\waveshaper'.
Removed a total of 0 cells.

12.19.94. Executing OPT_SHARE pass.

12.19.95. Executing OPT_DFF pass (perform DFF optimizations).
Setting constant 0-bit at position 0 on $auto$ff.cc:266:slice$673 ($adffe) from module sequential_div.

12.19.96. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \clock_8Hz..
Finding unused cells or wires in module \clock_div..
Finding unused cells or wires in module \frequency_divider..
Finding unused cells or wires in module \keypad_encoder..
Finding unused cells or wires in module \mode_fsm..
Finding unused cells or wires in module \oscillator..
Finding unused cells or wires in module \pwm..
Finding unused cells or wires in module \sequential_div..
Finding unused cells or wires in module \sound_series_fsm..
Finding unused cells or wires in module \synth..
Finding unused cells or wires in module \waveshaper..

12.19.97. Executing OPT_EXPR pass (perform const folding).
Optimizing module clock_8Hz.
Optimizing module clock_div.
Optimizing module frequency_divider.
Optimizing module keypad_encoder.
Optimizing module mode_fsm.
Optimizing module oscillator.
Optimizing module pwm.
Optimizing module sequential_div.
Optimizing module sound_series_fsm.
Optimizing module synth.
Optimizing module waveshaper.

12.19.98. Rerunning OPT passes. (Maybe there is more to do..)

12.19.99. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \clock_8Hz..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \clock_div..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \frequency_divider..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \keypad_encoder..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \mode_fsm..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \oscillator..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \pwm..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \sequential_div..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \sound_series_fsm..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \synth..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \waveshaper..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~20 debug messages>

12.19.100. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \clock_8Hz.
  Optimizing cells in module \clock_div.
  Optimizing cells in module \frequency_divider.
  Optimizing cells in module \keypad_encoder.
  Optimizing cells in module \mode_fsm.
  Optimizing cells in module \oscillator.
  Optimizing cells in module \pwm.
  Optimizing cells in module \sequential_div.
    Consolidated identical input bits for $mux cell $procmux$203:
      Old ports: A={ \dividend 2'00 }, B={ $3\next_r[23:0] [23:8] \R [6] 1'0 }, Y=\next_r [23:6]
      New ports: A={ \dividend 1'0 }, B={ $3\next_r[23:0] [23:8] \R [6] }, Y=\next_r [23:7]
      New connections: \next_r [6] = 1'0
  Optimizing cells in module \sequential_div.
  Optimizing cells in module \sound_series_fsm.
  Optimizing cells in module \synth.
  Optimizing cells in module \waveshaper.
Performed a total of 1 changes.

12.19.101. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\clock_8Hz'.
Finding identical cells in module `\clock_div'.
Finding identical cells in module `\frequency_divider'.
Finding identical cells in module `\keypad_encoder'.
Finding identical cells in module `\mode_fsm'.
Finding identical cells in module `\oscillator'.
Finding identical cells in module `\pwm'.
Finding identical cells in module `\sequential_div'.
Finding identical cells in module `\sound_series_fsm'.
Finding identical cells in module `\synth'.
Finding identical cells in module `\waveshaper'.
Removed a total of 0 cells.

12.19.102. Executing OPT_SHARE pass.

12.19.103. Executing OPT_DFF pass (perform DFF optimizations).

12.19.104. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \clock_8Hz..
Finding unused cells or wires in module \clock_div..
Finding unused cells or wires in module \frequency_divider..
Finding unused cells or wires in module \keypad_encoder..
Finding unused cells or wires in module \mode_fsm..
Finding unused cells or wires in module \oscillator..
Finding unused cells or wires in module \pwm..
Finding unused cells or wires in module \sequential_div..
Finding unused cells or wires in module \sound_series_fsm..
Finding unused cells or wires in module \synth..
Finding unused cells or wires in module \waveshaper..

12.19.105. Executing OPT_EXPR pass (perform const folding).
Optimizing module clock_8Hz.
Optimizing module clock_div.
Optimizing module frequency_divider.
Optimizing module keypad_encoder.
Optimizing module mode_fsm.
Optimizing module oscillator.
Optimizing module pwm.
Optimizing module sequential_div.
Optimizing module sound_series_fsm.
Optimizing module synth.
Optimizing module waveshaper.

12.19.106. Rerunning OPT passes. (Maybe there is more to do..)

12.19.107. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \clock_8Hz..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \clock_div..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \frequency_divider..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \keypad_encoder..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \mode_fsm..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \oscillator..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \pwm..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \sequential_div..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \sound_series_fsm..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \synth..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \waveshaper..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~20 debug messages>

12.19.108. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \clock_8Hz.
  Optimizing cells in module \clock_div.
  Optimizing cells in module \frequency_divider.
  Optimizing cells in module \keypad_encoder.
  Optimizing cells in module \mode_fsm.
  Optimizing cells in module \oscillator.
  Optimizing cells in module \pwm.
  Optimizing cells in module \sequential_div.
  Optimizing cells in module \sound_series_fsm.
  Optimizing cells in module \synth.
  Optimizing cells in module \waveshaper.
Performed a total of 0 changes.

12.19.109. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\clock_8Hz'.
Finding identical cells in module `\clock_div'.
Finding identical cells in module `\frequency_divider'.
Finding identical cells in module `\keypad_encoder'.
Finding identical cells in module `\mode_fsm'.
Finding identical cells in module `\oscillator'.
Finding identical cells in module `\pwm'.
Finding identical cells in module `\sequential_div'.
Finding identical cells in module `\sound_series_fsm'.
Finding identical cells in module `\synth'.
Finding identical cells in module `\waveshaper'.
Removed a total of 0 cells.

12.19.110. Executing OPT_SHARE pass.

12.19.111. Executing OPT_DFF pass (perform DFF optimizations).
Setting constant 0-bit at position 0 on $auto$ff.cc:266:slice$674 ($adffe) from module sequential_div.

12.19.112. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \clock_8Hz..
Finding unused cells or wires in module \clock_div..
Finding unused cells or wires in module \frequency_divider..
Finding unused cells or wires in module \keypad_encoder..
Finding unused cells or wires in module \mode_fsm..
Finding unused cells or wires in module \oscillator..
Finding unused cells or wires in module \pwm..
Finding unused cells or wires in module \sequential_div..
Finding unused cells or wires in module \sound_series_fsm..
Finding unused cells or wires in module \synth..
Finding unused cells or wires in module \waveshaper..

12.19.113. Executing OPT_EXPR pass (perform const folding).
Optimizing module clock_8Hz.
Optimizing module clock_div.
Optimizing module frequency_divider.
Optimizing module keypad_encoder.
Optimizing module mode_fsm.
Optimizing module oscillator.
Optimizing module pwm.
Optimizing module sequential_div.
Optimizing module sound_series_fsm.
Optimizing module synth.
Optimizing module waveshaper.

12.19.114. Rerunning OPT passes. (Maybe there is more to do..)

12.19.115. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \clock_8Hz..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \clock_div..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \frequency_divider..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \keypad_encoder..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \mode_fsm..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \oscillator..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \pwm..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \sequential_div..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \sound_series_fsm..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \synth..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \waveshaper..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~20 debug messages>

12.19.116. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \clock_8Hz.
  Optimizing cells in module \clock_div.
  Optimizing cells in module \frequency_divider.
  Optimizing cells in module \keypad_encoder.
  Optimizing cells in module \mode_fsm.
  Optimizing cells in module \oscillator.
  Optimizing cells in module \pwm.
  Optimizing cells in module \sequential_div.
    Consolidated identical input bits for $mux cell $procmux$203:
      Old ports: A={ \dividend 1'0 }, B={ $3\next_r[23:0] [23:8] 1'0 }, Y=\next_r [23:7]
      New ports: A=\dividend, B=$3\next_r[23:0] [23:8], Y=\next_r [23:8]
      New connections: \next_r [7] = 1'0
  Optimizing cells in module \sequential_div.
  Optimizing cells in module \sound_series_fsm.
  Optimizing cells in module \synth.
  Optimizing cells in module \waveshaper.
Performed a total of 1 changes.

12.19.117. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\clock_8Hz'.
Finding identical cells in module `\clock_div'.
Finding identical cells in module `\frequency_divider'.
Finding identical cells in module `\keypad_encoder'.
Finding identical cells in module `\mode_fsm'.
Finding identical cells in module `\oscillator'.
Finding identical cells in module `\pwm'.
Finding identical cells in module `\sequential_div'.
Finding identical cells in module `\sound_series_fsm'.
Finding identical cells in module `\synth'.
Finding identical cells in module `\waveshaper'.
Removed a total of 0 cells.

12.19.118. Executing OPT_SHARE pass.

12.19.119. Executing OPT_DFF pass (perform DFF optimizations).

12.19.120. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \clock_8Hz..
Finding unused cells or wires in module \clock_div..
Finding unused cells or wires in module \frequency_divider..
Finding unused cells or wires in module \keypad_encoder..
Finding unused cells or wires in module \mode_fsm..
Finding unused cells or wires in module \oscillator..
Finding unused cells or wires in module \pwm..
Finding unused cells or wires in module \sequential_div..
Finding unused cells or wires in module \sound_series_fsm..
Finding unused cells or wires in module \synth..
Finding unused cells or wires in module \waveshaper..

12.19.121. Executing OPT_EXPR pass (perform const folding).
Optimizing module clock_8Hz.
Optimizing module clock_div.
Optimizing module frequency_divider.
Optimizing module keypad_encoder.
Optimizing module mode_fsm.
Optimizing module oscillator.
Optimizing module pwm.
Optimizing module sequential_div.
Optimizing module sound_series_fsm.
Optimizing module synth.
Optimizing module waveshaper.

12.19.122. Rerunning OPT passes. (Maybe there is more to do..)

12.19.123. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \clock_8Hz..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \clock_div..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \frequency_divider..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \keypad_encoder..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \mode_fsm..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \oscillator..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \pwm..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \sequential_div..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \sound_series_fsm..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \synth..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \waveshaper..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~20 debug messages>

12.19.124. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \clock_8Hz.
  Optimizing cells in module \clock_div.
  Optimizing cells in module \frequency_divider.
  Optimizing cells in module \keypad_encoder.
  Optimizing cells in module \mode_fsm.
  Optimizing cells in module \oscillator.
  Optimizing cells in module \pwm.
  Optimizing cells in module \sequential_div.
  Optimizing cells in module \sound_series_fsm.
  Optimizing cells in module \synth.
  Optimizing cells in module \waveshaper.
Performed a total of 0 changes.

12.19.125. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\clock_8Hz'.
Finding identical cells in module `\clock_div'.
Finding identical cells in module `\frequency_divider'.
Finding identical cells in module `\keypad_encoder'.
Finding identical cells in module `\mode_fsm'.
Finding identical cells in module `\oscillator'.
Finding identical cells in module `\pwm'.
Finding identical cells in module `\sequential_div'.
Finding identical cells in module `\sound_series_fsm'.
Finding identical cells in module `\synth'.
Finding identical cells in module `\waveshaper'.
Removed a total of 0 cells.

12.19.126. Executing OPT_SHARE pass.

12.19.127. Executing OPT_DFF pass (perform DFF optimizations).
Setting constant 0-bit at position 0 on $auto$ff.cc:266:slice$675 ($adffe) from module sequential_div.

12.19.128. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \clock_8Hz..
Finding unused cells or wires in module \clock_div..
Finding unused cells or wires in module \frequency_divider..
Finding unused cells or wires in module \keypad_encoder..
Finding unused cells or wires in module \mode_fsm..
Finding unused cells or wires in module \oscillator..
Finding unused cells or wires in module \pwm..
Finding unused cells or wires in module \sequential_div..
Finding unused cells or wires in module \sound_series_fsm..
Finding unused cells or wires in module \synth..
Finding unused cells or wires in module \waveshaper..

12.19.129. Executing OPT_EXPR pass (perform const folding).
Optimizing module clock_8Hz.
Optimizing module clock_div.
Optimizing module frequency_divider.
Optimizing module keypad_encoder.
Optimizing module mode_fsm.
Optimizing module oscillator.
Optimizing module pwm.
Optimizing module sequential_div.
<suppressed ~1 debug messages>
Optimizing module sound_series_fsm.
Optimizing module synth.
Optimizing module waveshaper.

12.19.130. Rerunning OPT passes. (Maybe there is more to do..)

12.19.131. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \clock_8Hz..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \clock_div..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \frequency_divider..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \keypad_encoder..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \mode_fsm..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \oscillator..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \pwm..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \sequential_div..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \sound_series_fsm..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \synth..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \waveshaper..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~20 debug messages>

12.19.132. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \clock_8Hz.
  Optimizing cells in module \clock_div.
  Optimizing cells in module \frequency_divider.
  Optimizing cells in module \keypad_encoder.
  Optimizing cells in module \mode_fsm.
  Optimizing cells in module \oscillator.
  Optimizing cells in module \pwm.
  Optimizing cells in module \sequential_div.
  Optimizing cells in module \sound_series_fsm.
  Optimizing cells in module \synth.
  Optimizing cells in module \waveshaper.
Performed a total of 0 changes.

12.19.133. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\clock_8Hz'.
Finding identical cells in module `\clock_div'.
Finding identical cells in module `\frequency_divider'.
Finding identical cells in module `\keypad_encoder'.
Finding identical cells in module `\mode_fsm'.
Finding identical cells in module `\oscillator'.
Finding identical cells in module `\pwm'.
Finding identical cells in module `\sequential_div'.
Finding identical cells in module `\sound_series_fsm'.
Finding identical cells in module `\synth'.
Finding identical cells in module `\waveshaper'.
Removed a total of 0 cells.

12.19.134. Executing OPT_SHARE pass.

12.19.135. Executing OPT_DFF pass (perform DFF optimizations).

12.19.136. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \clock_8Hz..
Finding unused cells or wires in module \clock_div..
Finding unused cells or wires in module \frequency_divider..
Finding unused cells or wires in module \keypad_encoder..
Finding unused cells or wires in module \mode_fsm..
Finding unused cells or wires in module \oscillator..
Finding unused cells or wires in module \pwm..
Finding unused cells or wires in module \sequential_div..
Finding unused cells or wires in module \sound_series_fsm..
Finding unused cells or wires in module \synth..
Finding unused cells or wires in module \waveshaper..
Removed 0 unused cells and 1 unused wires.
<suppressed ~1 debug messages>

12.19.137. Executing OPT_EXPR pass (perform const folding).
Optimizing module clock_8Hz.
Optimizing module clock_div.
Optimizing module frequency_divider.
Optimizing module keypad_encoder.
Optimizing module mode_fsm.
Optimizing module oscillator.
Optimizing module pwm.
Optimizing module sequential_div.
Optimizing module sound_series_fsm.
Optimizing module synth.
Optimizing module waveshaper.

12.19.138. Rerunning OPT passes. (Maybe there is more to do..)

12.19.139. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \clock_8Hz..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \clock_div..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \frequency_divider..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \keypad_encoder..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \mode_fsm..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \oscillator..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \pwm..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \sequential_div..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \sound_series_fsm..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \synth..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \waveshaper..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~20 debug messages>

12.19.140. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \clock_8Hz.
  Optimizing cells in module \clock_div.
  Optimizing cells in module \frequency_divider.
  Optimizing cells in module \keypad_encoder.
  Optimizing cells in module \mode_fsm.
  Optimizing cells in module \oscillator.
  Optimizing cells in module \pwm.
  Optimizing cells in module \sequential_div.
  Optimizing cells in module \sound_series_fsm.
  Optimizing cells in module \synth.
  Optimizing cells in module \waveshaper.
Performed a total of 0 changes.

12.19.141. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\clock_8Hz'.
Finding identical cells in module `\clock_div'.
Finding identical cells in module `\frequency_divider'.
Finding identical cells in module `\keypad_encoder'.
Finding identical cells in module `\mode_fsm'.
Finding identical cells in module `\oscillator'.
Finding identical cells in module `\pwm'.
Finding identical cells in module `\sequential_div'.
Finding identical cells in module `\sound_series_fsm'.
Finding identical cells in module `\synth'.
Finding identical cells in module `\waveshaper'.
Removed a total of 0 cells.

12.19.142. Executing OPT_SHARE pass.

12.19.143. Executing OPT_DFF pass (perform DFF optimizations).

12.19.144. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \clock_8Hz..
Finding unused cells or wires in module \clock_div..
Finding unused cells or wires in module \frequency_divider..
Finding unused cells or wires in module \keypad_encoder..
Finding unused cells or wires in module \mode_fsm..
Finding unused cells or wires in module \oscillator..
Finding unused cells or wires in module \pwm..
Finding unused cells or wires in module \sequential_div..
Finding unused cells or wires in module \sound_series_fsm..
Finding unused cells or wires in module \synth..
Finding unused cells or wires in module \waveshaper..

12.19.145. Executing OPT_EXPR pass (perform const folding).
Optimizing module clock_8Hz.
Optimizing module clock_div.
Optimizing module frequency_divider.
Optimizing module keypad_encoder.
Optimizing module mode_fsm.
Optimizing module oscillator.
Optimizing module pwm.
Optimizing module sequential_div.
Optimizing module sound_series_fsm.
Optimizing module synth.
Optimizing module waveshaper.

12.19.146. Finished OPT passes. (There is nothing left to do.)

12.20. Executing TECHMAP pass (map to technology primitives).

12.20.1. Executing Verilog-2005 frontend: /home/shay/a/ece270/bin/../share/yosys/techmap.v
Parsing Verilog input from `/home/shay/a/ece270/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

12.20.2. Continuing TECHMAP pass.
Using extmapper simplemap for cells of type $not.
Using extmapper simplemap for cells of type $mux.
Using extmapper simplemap for cells of type $eq.
Using template $paramod$645fe0cc96ae5edb83bff90cc2c78f4a20ca3e3c\_90_pmux for cells of type $pmux.
Using template $paramod$fc972a7a46956c1788f3cb5257b53c8f1df2d0cc\_90_alu for cells of type $alu.
Using extmapper simplemap for cells of type $reduce_or.
Using extmapper simplemap for cells of type $or.
Using extmapper simplemap for cells of type $reduce_and.
Using extmapper simplemap for cells of type $and.
Using extmapper simplemap for cells of type $xor.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000000001 for cells of type $lcu.
Using extmapper simplemap for cells of type $pos.
Using extmapper maccmap for cells of type $macc.
  add { $sub$source/sound_series_fsm.sv:70$96_Y [31] $sub$source/sound_series_fsm.sv:70$96_Y [31] $sub$source/sound_series_fsm.sv:70$96_Y [31] $sub$source/sound_series_fsm.sv:70$96_Y [31] $sub$source/sound_series_fsm.sv:70$96_Y [31] $sub$source/sound_series_fsm.sv:70$96_Y [31] $sub$source/sound_series_fsm.sv:70$96_Y [31] $sub$source/sound_series_fsm.sv:70$96_Y [31] $sub$source/sound_series_fsm.sv:70$96_Y [31] $sub$source/sound_series_fsm.sv:70$96_Y [31] $sub$source/sound_series_fsm.sv:70$96_Y [31] $sub$source/sound_series_fsm.sv:70$96_Y [31] $sub$source/sound_series_fsm.sv:70$96_Y [31] $sub$source/sound_series_fsm.sv:70$96_Y [31] $sub$source/sound_series_fsm.sv:70$96_Y [31] $sub$source/sound_series_fsm.sv:70$96_Y [31] $sub$source/sound_series_fsm.sv:70$96_Y [31] $sub$source/sound_series_fsm.sv:70$96_Y [31] $sub$source/sound_series_fsm.sv:70$96_Y [31] $sub$source/sound_series_fsm.sv:70$96_Y [31] $sub$source/sound_series_fsm.sv:70$96_Y [31] $sub$source/sound_series_fsm.sv:70$96_Y [10:2] 1'1 $sub$source/sound_series_fsm.sv:70$96_Y [0] } (32 bits, unsigned)
  add 32'11111111111111111111111111111101 (32 bits, unsigned)
Using template $paramod$6f67705c43e5e94c02b6ebb52209ce5aa5ade4c1\_90_alu for cells of type $alu.
Using template $paramod$constmap:d2b52b2873b8ac6fdf4d482b2b1857d688ffcd1d$paramod$69e287a62a5c7f41fd2c9969ff3a44b6a0ad0d2a\_90_shift_shiftx for cells of type $shiftx.
Using extmapper simplemap for cells of type $logic_or.
Using template $paramod$97565c3687be688407d1272a293bd9d0ae6852dc\_90_pmux for cells of type $pmux.
Using template $paramod$484d51534650924b7ed4c69e46eed3a56904771f\_90_alu for cells of type $alu.
Using extmapper simplemap for cells of type $ne.
Using template $paramod$4e7ab332c4f4e7e4c8a648a6a417480f7ed6e86d\_90_alu for cells of type $alu.
Using extmapper simplemap for cells of type $adff.
Using extmapper simplemap for cells of type $adffe.
Using template $paramod$fbc7873bff55778c0b3173955b7e4bce1d9d6834\_90_alu for cells of type $alu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000001001 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000001010 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000100000 for cells of type $lcu.
Using template $paramod$6df0329addda9228fcc2546de2aaf14ad26c98e1\_90_alu for cells of type $alu.
Using template $paramod$3ef7d3dd227da7627a99c5e5a6a4deb817573e39\_90_alu for cells of type $alu.
Using template $paramod$c8f9642fe0e0f4527ea400b1bd678c474f53d556\_90_alu for cells of type $alu.
Using extmapper simplemap for cells of type $reduce_bool.
Using extmapper simplemap for cells of type $logic_not.
Using template $paramod$521ce43182eecb9f60c72393a788160d2c356bf5\_90_pmux for cells of type $pmux.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000010000 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000000011 for cells of type $lcu.
Using template $paramod$c3cd1564c35d873179656addd6052d7ea8b6d991\_90_alu for cells of type $alu.
Using template $paramod$a1bc51c02ce12ac21eb18988e83292af48ed7d72\_90_alu for cells of type $alu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000001000 for cells of type $lcu.
Using template $paramod$2af30114e9bd4ccb04dad757b3f0a8f6bf0615b0\_90_alu for cells of type $alu.
Using template $paramod$9398518f3a66906c93ac7eaad9a961f31111e0c1\_90_pmux for cells of type $pmux.
Using extmapper simplemap for cells of type $logic_and.
Using template $paramod$93b49458bab1c00eb32aff458c583f46ff61e60f\_90_alu for cells of type $alu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000010101 for cells of type $lcu.
No more expansions possible.
<suppressed ~3639 debug messages>

12.21. Executing OPT pass (performing simple optimizations).

12.21.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module clock_8Hz.
<suppressed ~148 debug messages>
Optimizing module clock_div.
<suppressed ~59 debug messages>
Optimizing module frequency_divider.
<suppressed ~40 debug messages>
Optimizing module keypad_encoder.
<suppressed ~172 debug messages>
Optimizing module mode_fsm.
<suppressed ~10 debug messages>
Optimizing module oscillator.
<suppressed ~108 debug messages>
Optimizing module pwm.
<suppressed ~105 debug messages>
Optimizing module sequential_div.
<suppressed ~130 debug messages>
Optimizing module sound_series_fsm.
<suppressed ~39243 debug messages>
Optimizing module synth.
Optimizing module waveshaper.
<suppressed ~32 debug messages>

12.21.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\clock_8Hz'.
<suppressed ~15 debug messages>
Finding identical cells in module `\clock_div'.
<suppressed ~27 debug messages>
Finding identical cells in module `\frequency_divider'.
<suppressed ~213 debug messages>
Finding identical cells in module `\keypad_encoder'.
<suppressed ~150 debug messages>
Finding identical cells in module `\mode_fsm'.
<suppressed ~6 debug messages>
Finding identical cells in module `\oscillator'.
<suppressed ~84 debug messages>
Finding identical cells in module `\pwm'.
<suppressed ~81 debug messages>
Finding identical cells in module `\sequential_div'.
<suppressed ~24 debug messages>
Finding identical cells in module `\sound_series_fsm'.
<suppressed ~30189 debug messages>
Finding identical cells in module `\synth'.
Finding identical cells in module `\waveshaper'.
<suppressed ~30 debug messages>
Removed a total of 10273 cells.

12.21.3. Executing OPT_DFF pass (perform DFF optimizations).

12.21.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \clock_8Hz..
Finding unused cells or wires in module \clock_div..
Finding unused cells or wires in module \frequency_divider..
Finding unused cells or wires in module \keypad_encoder..
Finding unused cells or wires in module \mode_fsm..
Finding unused cells or wires in module \oscillator..
Finding unused cells or wires in module \pwm..
Finding unused cells or wires in module \sequential_div..
Finding unused cells or wires in module \sound_series_fsm..
Finding unused cells or wires in module \synth..
Finding unused cells or wires in module \waveshaper..
Removed 20057 unused cells and 1104 unused wires.
<suppressed ~20067 debug messages>

12.21.5. Finished fast OPT passes.

12.22. Executing ABC pass (technology mapping using ABC).

12.22.1. Extracting gate netlist of module `\clock_8Hz' to `<abc-temp-dir>/input.blif'..
Extracted 133 gates and 157 wires to a netlist network with 23 inputs and 22 outputs.

12.22.1.1. Executing ABC.
Running ABC command: "<yosys-exe-dir>/yosys-abc" -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + dretime 
ABC: + map 
ABC: + write_blif <abc-temp-dir>/output.blif 

12.22.1.2. Re-integrating ABC results.
ABC RESULTS:              XNOR cells:        5
ABC RESULTS:               NOT cells:        5
ABC RESULTS:               NOR cells:        2
ABC RESULTS:             ORNOT cells:        5
ABC RESULTS:              NAND cells:       12
ABC RESULTS:               XOR cells:       25
ABC RESULTS:                OR cells:       47
ABC RESULTS:            ANDNOT cells:       30
ABC RESULTS:               AND cells:        2
ABC RESULTS:        internal signals:      112
ABC RESULTS:           input signals:       23
ABC RESULTS:          output signals:       22
Removing temp directory.

12.22.2. Extracting gate netlist of module `\clock_div' to `<abc-temp-dir>/input.blif'..
Extracted 48 gates and 58 wires to a netlist network with 9 inputs and 9 outputs.

12.22.2.1. Executing ABC.
Running ABC command: "<yosys-exe-dir>/yosys-abc" -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + dretime 
ABC: + map 
ABC: + write_blif <abc-temp-dir>/output.blif 

12.22.2.2. Re-integrating ABC results.
ABC RESULTS:               NOR cells:        1
ABC RESULTS:              XNOR cells:        1
ABC RESULTS:              NAND cells:        5
ABC RESULTS:             ORNOT cells:        2
ABC RESULTS:               XOR cells:        6
ABC RESULTS:                OR cells:        8
ABC RESULTS:            ANDNOT cells:        9
ABC RESULTS:               AND cells:        2
ABC RESULTS:        internal signals:       40
ABC RESULTS:           input signals:        9
ABC RESULTS:          output signals:        9
Removing temp directory.

12.22.3. Extracting gate netlist of module `\frequency_divider' to `<abc-temp-dir>/input.blif'..
Extracted 159 gates and 171 wires to a netlist network with 10 inputs and 16 outputs.

12.22.3.1. Executing ABC.
Running ABC command: "<yosys-exe-dir>/yosys-abc" -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + dretime 
ABC: + map 
ABC: + write_blif <abc-temp-dir>/output.blif 

12.22.3.2. Re-integrating ABC results.
ABC RESULTS:              NAND cells:        3
ABC RESULTS:               NOT cells:        3
ABC RESULTS:               NOR cells:        3
ABC RESULTS:             ORNOT cells:        7
ABC RESULTS:                OR cells:       34
ABC RESULTS:               XOR cells:        1
ABC RESULTS:            ANDNOT cells:       18
ABC RESULTS:               AND cells:       11
ABC RESULTS:               MUX cells:       68
ABC RESULTS:        internal signals:      145
ABC RESULTS:           input signals:       10
ABC RESULTS:          output signals:       16
Removing temp directory.

12.22.4. Extracting gate netlist of module `\keypad_encoder' to `<abc-temp-dir>/input.blif'..
Extracted 90 gates and 108 wires to a netlist network with 17 inputs and 6 outputs.

12.22.4.1. Executing ABC.
Running ABC command: "<yosys-exe-dir>/yosys-abc" -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + dretime 
ABC: + map 
ABC: + write_blif <abc-temp-dir>/output.blif 

12.22.4.2. Re-integrating ABC results.
ABC RESULTS:              NAND cells:        1
ABC RESULTS:               NOR cells:        4
ABC RESULTS:             ORNOT cells:        8
ABC RESULTS:               AND cells:        3
ABC RESULTS:                OR cells:       33
ABC RESULTS:            ANDNOT cells:       15
ABC RESULTS:        internal signals:       85
ABC RESULTS:           input signals:       17
ABC RESULTS:          output signals:        6
Removing temp directory.

12.22.5. Extracting gate netlist of module `\mode_fsm' to `<abc-temp-dir>/input.blif'..
Extracted 19 gates and 23 wires to a netlist network with 3 inputs and 2 outputs.

12.22.5.1. Executing ABC.
Running ABC command: "<yosys-exe-dir>/yosys-abc" -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + dretime 
ABC: + map 
ABC: + write_blif <abc-temp-dir>/output.blif 

12.22.5.2. Re-integrating ABC results.
ABC RESULTS:               NOT cells:        1
ABC RESULTS:               MUX cells:        2
ABC RESULTS:        internal signals:       18
ABC RESULTS:           input signals:        3
ABC RESULTS:          output signals:        2
Removing temp directory.

12.22.6. Extracting gate netlist of module `\oscillator' to `<abc-temp-dir>/input.blif'..
Extracted 165 gates and 200 wires to a netlist network with 33 inputs and 16 outputs.

12.22.6.1. Executing ABC.
Running ABC command: "<yosys-exe-dir>/yosys-abc" -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + dretime 
ABC: + map 
ABC: + write_blif <abc-temp-dir>/output.blif 

12.22.6.2. Re-integrating ABC results.
ABC RESULTS:              XNOR cells:       10
ABC RESULTS:               AND cells:        2
ABC RESULTS:              NAND cells:       12
ABC RESULTS:             ORNOT cells:       22
ABC RESULTS:               XOR cells:       21
ABC RESULTS:                OR cells:       25
ABC RESULTS:            ANDNOT cells:       55
ABC RESULTS:        internal signals:      151
ABC RESULTS:           input signals:       33
ABC RESULTS:          output signals:       16
Removing temp directory.

12.22.7. Extracting gate netlist of module `\pwm' to `<abc-temp-dir>/input.blif'..
Extracted 84 gates and 102 wires to a netlist network with 17 inputs and 9 outputs.

12.22.7.1. Executing ABC.
Running ABC command: "<yosys-exe-dir>/yosys-abc" -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + dretime 
ABC: + map 
ABC: + write_blif <abc-temp-dir>/output.blif 

12.22.7.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:        2
ABC RESULTS:              NAND cells:        2
ABC RESULTS:               XOR cells:       10
ABC RESULTS:             ORNOT cells:        9
ABC RESULTS:              XNOR cells:        4
ABC RESULTS:                OR cells:       11
ABC RESULTS:            ANDNOT cells:       28
ABC RESULTS:        internal signals:       76
ABC RESULTS:           input signals:       17
ABC RESULTS:          output signals:        9
Removing temp directory.

12.22.8. Extracting gate netlist of module `\sequential_div' to `<abc-temp-dir>/input.blif'..
Extracted 285 gates and 348 wires to a netlist network with 61 inputs and 34 outputs.

12.22.8.1. Executing ABC.
Running ABC command: "<yosys-exe-dir>/yosys-abc" -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + dretime 
ABC: + map 
ABC: + write_blif <abc-temp-dir>/output.blif 

12.22.8.2. Re-integrating ABC results.
ABC RESULTS:               NOT cells:        3
ABC RESULTS:              XNOR cells:        5
ABC RESULTS:              NAND cells:        4
ABC RESULTS:                OR cells:        7
ABC RESULTS:               AND cells:       12
ABC RESULTS:               NOR cells:       10
ABC RESULTS:            ANDNOT cells:       84
ABC RESULTS:               MUX cells:       31
ABC RESULTS:             ORNOT cells:       32
ABC RESULTS:               XOR cells:       28
ABC RESULTS:        internal signals:      253
ABC RESULTS:           input signals:       61
ABC RESULTS:          output signals:       34
Removing temp directory.

12.22.9. Extracting gate netlist of module `\sound_series_fsm' to `<abc-temp-dir>/input.blif'..
Extracted 324 gates and 340 wires to a netlist network with 13 inputs and 16 outputs.

12.22.9.1. Executing ABC.
Running ABC command: "<yosys-exe-dir>/yosys-abc" -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + dretime 
ABC: + map 
ABC: + write_blif <abc-temp-dir>/output.blif 

12.22.9.2. Re-integrating ABC results.
ABC RESULTS:               XOR cells:       11
ABC RESULTS:              XNOR cells:        6
ABC RESULTS:              NAND cells:        4
ABC RESULTS:             ORNOT cells:       18
ABC RESULTS:               NOR cells:       20
ABC RESULTS:               NOT cells:        7
ABC RESULTS:               AND cells:        8
ABC RESULTS:               MUX cells:      131
ABC RESULTS:                OR cells:       40
ABC RESULTS:            ANDNOT cells:       59
ABC RESULTS:        internal signals:      311
ABC RESULTS:           input signals:       13
ABC RESULTS:          output signals:       16
Removing temp directory.

12.22.10. Extracting gate netlist of module `\synth' to `<abc-temp-dir>/input.blif'..
Extracted 0 gates and 0 wires to a netlist network with 0 inputs and 0 outputs.
Don't call ABC as there is nothing to map.
Removing temp directory.

12.22.11. Extracting gate netlist of module `\waveshaper' to `<abc-temp-dir>/input.blif'..
Extracted 58 gates and 68 wires to a netlist network with 10 inputs and 8 outputs.

12.22.11.1. Executing ABC.
Running ABC command: "<yosys-exe-dir>/yosys-abc" -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + dretime 
ABC: + map 
ABC: + write_blif <abc-temp-dir>/output.blif 

12.22.11.2. Re-integrating ABC results.
ABC RESULTS:               NOR cells:        3
ABC RESULTS:             ORNOT cells:        3
ABC RESULTS:              XNOR cells:        7
ABC RESULTS:            ANDNOT cells:       12
ABC RESULTS:                OR cells:        8
ABC RESULTS:               MUX cells:        8
ABC RESULTS:        internal signals:       50
ABC RESULTS:           input signals:       10
ABC RESULTS:          output signals:        8
Removing temp directory.

12.23. Executing OPT pass (performing simple optimizations).

12.23.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module clock_8Hz.
Optimizing module clock_div.
Optimizing module frequency_divider.
<suppressed ~18 debug messages>
Optimizing module keypad_encoder.
Optimizing module mode_fsm.
Optimizing module oscillator.
Optimizing module pwm.
Optimizing module sequential_div.
<suppressed ~19 debug messages>
Optimizing module sound_series_fsm.
<suppressed ~26 debug messages>
Optimizing module synth.
Optimizing module waveshaper.

12.23.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\clock_8Hz'.
Finding identical cells in module `\clock_div'.
Finding identical cells in module `\frequency_divider'.
Finding identical cells in module `\keypad_encoder'.
Finding identical cells in module `\mode_fsm'.
Finding identical cells in module `\oscillator'.
Finding identical cells in module `\pwm'.
Finding identical cells in module `\sequential_div'.
<suppressed ~6 debug messages>
Finding identical cells in module `\sound_series_fsm'.
<suppressed ~39 debug messages>
Finding identical cells in module `\synth'.
Finding identical cells in module `\waveshaper'.
Removed a total of 15 cells.

12.23.3. Executing OPT_DFF pass (perform DFF optimizations).

12.23.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \clock_8Hz..
Finding unused cells or wires in module \clock_div..
Finding unused cells or wires in module \frequency_divider..
Finding unused cells or wires in module \keypad_encoder..
Finding unused cells or wires in module \mode_fsm..
Finding unused cells or wires in module \oscillator..
Finding unused cells or wires in module \pwm..
Finding unused cells or wires in module \sequential_div..
Finding unused cells or wires in module \sound_series_fsm..
Finding unused cells or wires in module \synth..
Finding unused cells or wires in module \waveshaper..
Removed 3 unused cells and 805 unused wires.
<suppressed ~21 debug messages>

12.23.5. Finished fast OPT passes.

12.24. Executing HIERARCHY pass (managing design hierarchy).

12.24.1. Analyzing design hierarchy..
Top module:  \synth
Used module:     \sound_series_fsm
Used module:     \clock_8Hz
Used module:     \clock_div
Used module:     \frequency_divider
Used module:     \keypad_encoder
Used module:     \mode_fsm
Used module:     \oscillator
Used module:     \pwm
Used module:     \sequential_div
Used module:     \waveshaper

12.24.2. Analyzing design hierarchy..
Top module:  \synth
Used module:     \sound_series_fsm
Used module:     \clock_8Hz
Used module:     \clock_div
Used module:     \frequency_divider
Used module:     \keypad_encoder
Used module:     \mode_fsm
Used module:     \oscillator
Used module:     \pwm
Used module:     \sequential_div
Used module:     \waveshaper
Removed 0 unused modules.

12.25. Printing statistics.

=== clock_8Hz ===

   Number of wires:                119
   Number of wire bits:            177
   Number of public wires:           8
   Number of public wire bits:      66
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                154
     $_ANDNOT_                      30
     $_AND_                          2
     $_DFF_PN0_                     21
     $_NAND_                        12
     $_NOR_                          2
     $_NOT_                          5
     $_ORNOT_                        5
     $_OR_                          47
     $_XNOR_                         5
     $_XOR_                         25

=== clock_div ===

   Number of wires:                 32
   Number of wire bits:             53
   Number of public wires:           7
   Number of public wire bits:      28
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                 42
     $_ANDNOT_                       9
     $_AND_                          2
     $_DFF_PN0_                      8
     $_NAND_                         5
     $_NOR_                          1
     $_ORNOT_                        2
     $_OR_                           8
     $_XNOR_                         1
     $_XOR_                          6

=== frequency_divider ===

   Number of wires:                136
   Number of wire bits:            157
   Number of public wires:           5
   Number of public wire bits:      26
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                147
     $_ANDNOT_                      18
     $_AND_                         11
     $_MUX_                         68
     $_NAND_                         3
     $_NOR_                          3
     $_NOT_                          2
     $_ORNOT_                        7
     $_OR_                          34
     $_XOR_                          1

=== keypad_encoder ===

   Number of wires:                 68
   Number of wire bits:            113
   Number of public wires:          10
   Number of public wire bits:      55
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                 96
     $_ANDNOT_                      15
     $_AND_                          3
     $_DFF_PN0_                     32
     $_NAND_                         1
     $_NOR_                          4
     $_ORNOT_                        8
     $_OR_                          33

=== mode_fsm ===

   Number of wires:                  6
   Number of wire bits:              8
   Number of public wires:           5
   Number of public wire bits:       7
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                  5
     $_DFF_PN0_                      2
     $_MUX_                          2
     $_NOT_                          1

=== oscillator ===

   Number of wires:                137
   Number of wire bits:            182
   Number of public wires:           6
   Number of public wire bits:      51
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                163
     $_ANDNOT_                      55
     $_AND_                          2
     $_DFF_PN0_                     15
     $_DFF_PN1_                      1
     $_NAND_                        12
     $_ORNOT_                       22
     $_OR_                          25
     $_XNOR_                        10
     $_XOR_                         21

=== pwm ===

   Number of wires:                 65
   Number of wire bits:             86
   Number of public wires:           8
   Number of public wire bits:      29
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                 75
     $_ANDNOT_                      28
     $_AND_                          2
     $_DFF_PN0_                      9
     $_NAND_                         2
     $_ORNOT_                        9
     $_OR_                          11
     $_XNOR_                         4
     $_XOR_                         10

=== sequential_div ===

   Number of wires:                202
   Number of wire bits:            343
   Number of public wires:          16
   Number of public wire bits:     153
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                282
     $_ANDNOT_                      84
     $_AND_                         12
     $_DFFE_PN0N_                   24
     $_DFFE_PN0P_                   45
     $_MUX_                         31
     $_NAND_                         4
     $_NOR_                         10
     $_NOT_                          2
     $_ORNOT_                       30
     $_OR_                           7
     $_XNOR_                         5
     $_XOR_                         28

=== sound_series_fsm ===

   Number of wires:                286
   Number of wire bits:           1397
   Number of public wires:          11
   Number of public wire bits:    1122
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                301
     $_ANDNOT_                      55
     $_AND_                          6
     $_DFFE_PN0P_                    7
     $_DFFE_PN1P_                    2
     $_DFF_PN0_                      2
     $_MUX_                        128
     $_NAND_                         4
     $_NOR_                         18
     $_NOT_                          6
     $_ORNOT_                       18
     $_OR_                          38
     $_XNOR_                         6
     $_XOR_                         11

=== synth ===

   Number of wires:                 16
   Number of wire bits:             81
   Number of public wires:          16
   Number of public wire bits:      81
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                 10
     clock_8Hz                       1
     clock_div                       1
     frequency_divider               1
     keypad_encoder                  1
     mode_fsm                        1
     oscillator                      1
     pwm                             1
     sequential_div                  1
     sound_series_fsm                1
     waveshaper                      1

=== waveshaper ===

   Number of wires:                 38
   Number of wire bits:             68
   Number of public wires:           5
   Number of public wire bits:      35
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                 41
     $_ANDNOT_                      12
     $_MUX_                          8
     $_NOR_                          3
     $_ORNOT_                        3
     $_OR_                           8
     $_XNOR_                         7

=== design hierarchy ===

   synth                             1
     clock_8Hz                       1
     clock_div                       1
     frequency_divider               1
     keypad_encoder                  1
     mode_fsm                        1
     oscillator                      1
     pwm                             1
     sequential_div                  1
     sound_series_fsm                1
     waveshaper                      1

   Number of wires:               1105
   Number of wire bits:           2665
   Number of public wires:          97
   Number of public wire bits:    1653
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:               1306
     $_ANDNOT_                     306
     $_AND_                         40
     $_DFFE_PN0N_                   24
     $_DFFE_PN0P_                   52
     $_DFFE_PN1P_                    2
     $_DFF_PN0_                     89
     $_DFF_PN1_                      1
     $_MUX_                        237
     $_NAND_                        43
     $_NOR_                         41
     $_NOT_                         16
     $_ORNOT_                      104
     $_OR_                         211
     $_XNOR_                        38
     $_XOR_                        102

12.26. Executing CHECK pass (checking for obvious problems).
Checking module clock_8Hz...
Checking module clock_div...
Checking module frequency_divider...
Checking module keypad_encoder...
Checking module mode_fsm...
Checking module oscillator...
Checking module pwm...
Checking module sequential_div...
Checking module sound_series_fsm...
Checking module synth...
Checking module waveshaper...
Found and reported 0 problems.

13. Executing DFFLIBMAP pass (mapping DFF cells to sequential cells from liberty file).
Warning: Found unsupported expression 'D&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sdfbbn_1' - skipping.
Warning: Found unsupported expression 'D&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sdfbbn_2' - skipping.
Warning: Found unsupported expression 'D&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sdfrtn_1' - skipping.
Warning: Found unsupported expression 'D&DE|IQ&!DE' in pin attribute of cell 'sky130_fd_sc_hd__edfxbp_1' - skipping.
Warning: Found unsupported expression 'D&DE|IQ&!DE' in pin attribute of cell 'sky130_fd_sc_hd__edfxtp_1' - skipping.
Warning: Found unsupported expression 'D&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sdfbbp_1' - skipping.
Warning: Found unsupported expression 'D&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sdfrbp_1' - skipping.
Warning: Found unsupported expression 'D&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sdfrbp_2' - skipping.
Warning: Found unsupported expression 'D&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sdfrtp_1' - skipping.
Warning: Found unsupported expression 'D&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sdfrtp_2' - skipping.
Warning: Found unsupported expression 'D&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sdfrtp_4' - skipping.
Warning: Found unsupported expression 'D&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sdfsbp_1' - skipping.
Warning: Found unsupported expression 'D&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sdfsbp_2' - skipping.
Warning: Found unsupported expression 'D&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sdfstp_1' - skipping.
Warning: Found unsupported expression 'D&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sdfstp_2' - skipping.
Warning: Found unsupported expression 'D&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sdfstp_4' - skipping.
Warning: Found unsupported expression 'D&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sdfxbp_1' - skipping.
Warning: Found unsupported expression 'D&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sdfxbp_2' - skipping.
Warning: Found unsupported expression 'D&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sdfxtp_1' - skipping.
Warning: Found unsupported expression 'D&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sdfxtp_2' - skipping.
Warning: Found unsupported expression 'D&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sdfxtp_4' - skipping.
Warning: Found unsupported expression 'D&DE&!SCE|IQ&!DE&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sedfxbp_1' - skipping.
Warning: Found unsupported expression 'D&DE&!SCE|IQ&!DE&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sedfxbp_2' - skipping.
Warning: Found unsupported expression 'D&DE&!SCE|IQ&!DE&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sedfxtp_1' - skipping.
Warning: Found unsupported expression 'D&DE&!SCE|IQ&!DE&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sedfxtp_2' - skipping.
Warning: Found unsupported expression 'D&DE&!SCE|IQ&!DE&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sedfxtp_4' - skipping.
  cell sky130_fd_sc_hd__dfxtp_1 (noninv, pins=3, area=20.02) is a direct match for cell type $_DFF_P_.
Warning: Found unsupported expression 'D&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sdfbbn_1' - skipping.
Warning: Found unsupported expression 'D&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sdfbbn_2' - skipping.
Warning: Found unsupported expression 'D&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sdfrtn_1' - skipping.
  cell sky130_fd_sc_hd__dfrtn_1 (noninv, pins=4, area=25.02) is a direct match for cell type $_DFF_NN0_.
Warning: Found unsupported expression 'D&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sdfbbn_1' - skipping.
Warning: Found unsupported expression 'D&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sdfbbn_2' - skipping.
Warning: Found unsupported expression 'D&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sdfrtn_1' - skipping.
Warning: Found unsupported expression 'D&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sdfbbn_1' - skipping.
Warning: Found unsupported expression 'D&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sdfbbn_2' - skipping.
Warning: Found unsupported expression 'D&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sdfrtn_1' - skipping.
Warning: Found unsupported expression 'D&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sdfbbn_1' - skipping.
Warning: Found unsupported expression 'D&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sdfbbn_2' - skipping.
Warning: Found unsupported expression 'D&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sdfrtn_1' - skipping.
Warning: Found unsupported expression 'D&DE|IQ&!DE' in pin attribute of cell 'sky130_fd_sc_hd__edfxbp_1' - skipping.
Warning: Found unsupported expression 'D&DE|IQ&!DE' in pin attribute of cell 'sky130_fd_sc_hd__edfxtp_1' - skipping.
Warning: Found unsupported expression 'D&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sdfbbp_1' - skipping.
Warning: Found unsupported expression 'D&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sdfrbp_1' - skipping.
Warning: Found unsupported expression 'D&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sdfrbp_2' - skipping.
Warning: Found unsupported expression 'D&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sdfrtp_1' - skipping.
Warning: Found unsupported expression 'D&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sdfrtp_2' - skipping.
Warning: Found unsupported expression 'D&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sdfrtp_4' - skipping.
Warning: Found unsupported expression 'D&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sdfsbp_1' - skipping.
Warning: Found unsupported expression 'D&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sdfsbp_2' - skipping.
Warning: Found unsupported expression 'D&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sdfstp_1' - skipping.
Warning: Found unsupported expression 'D&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sdfstp_2' - skipping.
Warning: Found unsupported expression 'D&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sdfstp_4' - skipping.
Warning: Found unsupported expression 'D&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sdfxbp_1' - skipping.
Warning: Found unsupported expression 'D&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sdfxbp_2' - skipping.
Warning: Found unsupported expression 'D&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sdfxtp_1' - skipping.
Warning: Found unsupported expression 'D&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sdfxtp_2' - skipping.
Warning: Found unsupported expression 'D&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sdfxtp_4' - skipping.
Warning: Found unsupported expression 'D&DE&!SCE|IQ&!DE&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sedfxbp_1' - skipping.
Warning: Found unsupported expression 'D&DE&!SCE|IQ&!DE&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sedfxbp_2' - skipping.
Warning: Found unsupported expression 'D&DE&!SCE|IQ&!DE&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sedfxtp_1' - skipping.
Warning: Found unsupported expression 'D&DE&!SCE|IQ&!DE&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sedfxtp_2' - skipping.
Warning: Found unsupported expression 'D&DE&!SCE|IQ&!DE&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sedfxtp_4' - skipping.
  cell sky130_fd_sc_hd__dfrtp_1 (noninv, pins=4, area=25.02) is a direct match for cell type $_DFF_PN0_.
Warning: Found unsupported expression 'D&DE|IQ&!DE' in pin attribute of cell 'sky130_fd_sc_hd__edfxbp_1' - skipping.
Warning: Found unsupported expression 'D&DE|IQ&!DE' in pin attribute of cell 'sky130_fd_sc_hd__edfxtp_1' - skipping.
Warning: Found unsupported expression 'D&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sdfbbp_1' - skipping.
Warning: Found unsupported expression 'D&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sdfrbp_1' - skipping.
Warning: Found unsupported expression 'D&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sdfrbp_2' - skipping.
Warning: Found unsupported expression 'D&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sdfrtp_1' - skipping.
Warning: Found unsupported expression 'D&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sdfrtp_2' - skipping.
Warning: Found unsupported expression 'D&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sdfrtp_4' - skipping.
Warning: Found unsupported expression 'D&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sdfsbp_1' - skipping.
Warning: Found unsupported expression 'D&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sdfsbp_2' - skipping.
Warning: Found unsupported expression 'D&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sdfstp_1' - skipping.
Warning: Found unsupported expression 'D&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sdfstp_2' - skipping.
Warning: Found unsupported expression 'D&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sdfstp_4' - skipping.
Warning: Found unsupported expression 'D&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sdfxbp_1' - skipping.
Warning: Found unsupported expression 'D&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sdfxbp_2' - skipping.
Warning: Found unsupported expression 'D&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sdfxtp_1' - skipping.
Warning: Found unsupported expression 'D&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sdfxtp_2' - skipping.
Warning: Found unsupported expression 'D&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sdfxtp_4' - skipping.
Warning: Found unsupported expression 'D&DE&!SCE|IQ&!DE&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sedfxbp_1' - skipping.
Warning: Found unsupported expression 'D&DE&!SCE|IQ&!DE&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sedfxbp_2' - skipping.
Warning: Found unsupported expression 'D&DE&!SCE|IQ&!DE&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sedfxtp_1' - skipping.
Warning: Found unsupported expression 'D&DE&!SCE|IQ&!DE&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sedfxtp_2' - skipping.
Warning: Found unsupported expression 'D&DE&!SCE|IQ&!DE&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sedfxtp_4' - skipping.
  cell sky130_fd_sc_hd__dfstp_2 (noninv, pins=4, area=26.28) is a direct match for cell type $_DFF_PN1_.
Warning: Found unsupported expression 'D&DE|IQ&!DE' in pin attribute of cell 'sky130_fd_sc_hd__edfxbp_1' - skipping.
Warning: Found unsupported expression 'D&DE|IQ&!DE' in pin attribute of cell 'sky130_fd_sc_hd__edfxtp_1' - skipping.
Warning: Found unsupported expression 'D&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sdfbbp_1' - skipping.
Warning: Found unsupported expression 'D&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sdfrbp_1' - skipping.
Warning: Found unsupported expression 'D&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sdfrbp_2' - skipping.
Warning: Found unsupported expression 'D&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sdfrtp_1' - skipping.
Warning: Found unsupported expression 'D&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sdfrtp_2' - skipping.
Warning: Found unsupported expression 'D&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sdfrtp_4' - skipping.
Warning: Found unsupported expression 'D&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sdfsbp_1' - skipping.
Warning: Found unsupported expression 'D&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sdfsbp_2' - skipping.
Warning: Found unsupported expression 'D&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sdfstp_1' - skipping.
Warning: Found unsupported expression 'D&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sdfstp_2' - skipping.
Warning: Found unsupported expression 'D&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sdfstp_4' - skipping.
Warning: Found unsupported expression 'D&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sdfxbp_1' - skipping.
Warning: Found unsupported expression 'D&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sdfxbp_2' - skipping.
Warning: Found unsupported expression 'D&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sdfxtp_1' - skipping.
Warning: Found unsupported expression 'D&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sdfxtp_2' - skipping.
Warning: Found unsupported expression 'D&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sdfxtp_4' - skipping.
Warning: Found unsupported expression 'D&DE&!SCE|IQ&!DE&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sedfxbp_1' - skipping.
Warning: Found unsupported expression 'D&DE&!SCE|IQ&!DE&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sedfxbp_2' - skipping.
Warning: Found unsupported expression 'D&DE&!SCE|IQ&!DE&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sedfxtp_1' - skipping.
Warning: Found unsupported expression 'D&DE&!SCE|IQ&!DE&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sedfxtp_2' - skipping.
Warning: Found unsupported expression 'D&DE&!SCE|IQ&!DE&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sedfxtp_4' - skipping.
Warning: Found unsupported expression 'D&DE|IQ&!DE' in pin attribute of cell 'sky130_fd_sc_hd__edfxbp_1' - skipping.
Warning: Found unsupported expression 'D&DE|IQ&!DE' in pin attribute of cell 'sky130_fd_sc_hd__edfxtp_1' - skipping.
Warning: Found unsupported expression 'D&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sdfbbp_1' - skipping.
Warning: Found unsupported expression 'D&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sdfrbp_1' - skipping.
Warning: Found unsupported expression 'D&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sdfrbp_2' - skipping.
Warning: Found unsupported expression 'D&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sdfrtp_1' - skipping.
Warning: Found unsupported expression 'D&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sdfrtp_2' - skipping.
Warning: Found unsupported expression 'D&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sdfrtp_4' - skipping.
Warning: Found unsupported expression 'D&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sdfsbp_1' - skipping.
Warning: Found unsupported expression 'D&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sdfsbp_2' - skipping.
Warning: Found unsupported expression 'D&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sdfstp_1' - skipping.
Warning: Found unsupported expression 'D&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sdfstp_2' - skipping.
Warning: Found unsupported expression 'D&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sdfstp_4' - skipping.
Warning: Found unsupported expression 'D&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sdfxbp_1' - skipping.
Warning: Found unsupported expression 'D&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sdfxbp_2' - skipping.
Warning: Found unsupported expression 'D&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sdfxtp_1' - skipping.
Warning: Found unsupported expression 'D&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sdfxtp_2' - skipping.
Warning: Found unsupported expression 'D&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sdfxtp_4' - skipping.
Warning: Found unsupported expression 'D&DE&!SCE|IQ&!DE&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sedfxbp_1' - skipping.
Warning: Found unsupported expression 'D&DE&!SCE|IQ&!DE&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sedfxbp_2' - skipping.
Warning: Found unsupported expression 'D&DE&!SCE|IQ&!DE&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sedfxtp_1' - skipping.
Warning: Found unsupported expression 'D&DE&!SCE|IQ&!DE&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sedfxtp_2' - skipping.
Warning: Found unsupported expression 'D&DE&!SCE|IQ&!DE&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sedfxtp_4' - skipping.
Warning: Found unsupported expression 'D&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sdfbbn_1' - skipping.
Warning: Found unsupported expression 'D&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sdfbbn_2' - skipping.
Warning: Found unsupported expression 'D&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sdfrtn_1' - skipping.
  cell sky130_fd_sc_hd__dfbbn_1 (noninv, pins=6, area=32.53) is a direct match for cell type $_DFFSR_NNN_.
Warning: Found unsupported expression 'D&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sdfbbn_1' - skipping.
Warning: Found unsupported expression 'D&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sdfbbn_2' - skipping.
Warning: Found unsupported expression 'D&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sdfrtn_1' - skipping.
Warning: Found unsupported expression 'D&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sdfbbn_1' - skipping.
Warning: Found unsupported expression 'D&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sdfbbn_2' - skipping.
Warning: Found unsupported expression 'D&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sdfrtn_1' - skipping.
Warning: Found unsupported expression 'D&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sdfbbn_1' - skipping.
Warning: Found unsupported expression 'D&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sdfbbn_2' - skipping.
Warning: Found unsupported expression 'D&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sdfrtn_1' - skipping.
Warning: Found unsupported expression 'D&DE|IQ&!DE' in pin attribute of cell 'sky130_fd_sc_hd__edfxbp_1' - skipping.
Warning: Found unsupported expression 'D&DE|IQ&!DE' in pin attribute of cell 'sky130_fd_sc_hd__edfxtp_1' - skipping.
Warning: Found unsupported expression 'D&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sdfbbp_1' - skipping.
Warning: Found unsupported expression 'D&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sdfrbp_1' - skipping.
Warning: Found unsupported expression 'D&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sdfrbp_2' - skipping.
Warning: Found unsupported expression 'D&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sdfrtp_1' - skipping.
Warning: Found unsupported expression 'D&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sdfrtp_2' - skipping.
Warning: Found unsupported expression 'D&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sdfrtp_4' - skipping.
Warning: Found unsupported expression 'D&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sdfsbp_1' - skipping.
Warning: Found unsupported expression 'D&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sdfsbp_2' - skipping.
Warning: Found unsupported expression 'D&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sdfstp_1' - skipping.
Warning: Found unsupported expression 'D&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sdfstp_2' - skipping.
Warning: Found unsupported expression 'D&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sdfstp_4' - skipping.
Warning: Found unsupported expression 'D&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sdfxbp_1' - skipping.
Warning: Found unsupported expression 'D&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sdfxbp_2' - skipping.
Warning: Found unsupported expression 'D&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sdfxtp_1' - skipping.
Warning: Found unsupported expression 'D&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sdfxtp_2' - skipping.
Warning: Found unsupported expression 'D&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sdfxtp_4' - skipping.
Warning: Found unsupported expression 'D&DE&!SCE|IQ&!DE&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sedfxbp_1' - skipping.
Warning: Found unsupported expression 'D&DE&!SCE|IQ&!DE&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sedfxbp_2' - skipping.
Warning: Found unsupported expression 'D&DE&!SCE|IQ&!DE&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sedfxtp_1' - skipping.
Warning: Found unsupported expression 'D&DE&!SCE|IQ&!DE&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sedfxtp_2' - skipping.
Warning: Found unsupported expression 'D&DE&!SCE|IQ&!DE&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sedfxtp_4' - skipping.
  cell sky130_fd_sc_hd__dfbbp_1 (noninv, pins=6, area=32.53) is a direct match for cell type $_DFFSR_PNN_.
Warning: Found unsupported expression 'D&DE|IQ&!DE' in pin attribute of cell 'sky130_fd_sc_hd__edfxbp_1' - skipping.
Warning: Found unsupported expression 'D&DE|IQ&!DE' in pin attribute of cell 'sky130_fd_sc_hd__edfxtp_1' - skipping.
Warning: Found unsupported expression 'D&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sdfbbp_1' - skipping.
Warning: Found unsupported expression 'D&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sdfrbp_1' - skipping.
Warning: Found unsupported expression 'D&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sdfrbp_2' - skipping.
Warning: Found unsupported expression 'D&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sdfrtp_1' - skipping.
Warning: Found unsupported expression 'D&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sdfrtp_2' - skipping.
Warning: Found unsupported expression 'D&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sdfrtp_4' - skipping.
Warning: Found unsupported expression 'D&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sdfsbp_1' - skipping.
Warning: Found unsupported expression 'D&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sdfsbp_2' - skipping.
Warning: Found unsupported expression 'D&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sdfstp_1' - skipping.
Warning: Found unsupported expression 'D&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sdfstp_2' - skipping.
Warning: Found unsupported expression 'D&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sdfstp_4' - skipping.
Warning: Found unsupported expression 'D&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sdfxbp_1' - skipping.
Warning: Found unsupported expression 'D&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sdfxbp_2' - skipping.
Warning: Found unsupported expression 'D&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sdfxtp_1' - skipping.
Warning: Found unsupported expression 'D&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sdfxtp_2' - skipping.
Warning: Found unsupported expression 'D&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sdfxtp_4' - skipping.
Warning: Found unsupported expression 'D&DE&!SCE|IQ&!DE&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sedfxbp_1' - skipping.
Warning: Found unsupported expression 'D&DE&!SCE|IQ&!DE&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sedfxbp_2' - skipping.
Warning: Found unsupported expression 'D&DE&!SCE|IQ&!DE&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sedfxtp_1' - skipping.
Warning: Found unsupported expression 'D&DE&!SCE|IQ&!DE&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sedfxtp_2' - skipping.
Warning: Found unsupported expression 'D&DE&!SCE|IQ&!DE&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sedfxtp_4' - skipping.
Warning: Found unsupported expression 'D&DE|IQ&!DE' in pin attribute of cell 'sky130_fd_sc_hd__edfxbp_1' - skipping.
Warning: Found unsupported expression 'D&DE|IQ&!DE' in pin attribute of cell 'sky130_fd_sc_hd__edfxtp_1' - skipping.
Warning: Found unsupported expression 'D&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sdfbbp_1' - skipping.
Warning: Found unsupported expression 'D&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sdfrbp_1' - skipping.
Warning: Found unsupported expression 'D&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sdfrbp_2' - skipping.
Warning: Found unsupported expression 'D&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sdfrtp_1' - skipping.
Warning: Found unsupported expression 'D&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sdfrtp_2' - skipping.
Warning: Found unsupported expression 'D&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sdfrtp_4' - skipping.
Warning: Found unsupported expression 'D&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sdfsbp_1' - skipping.
Warning: Found unsupported expression 'D&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sdfsbp_2' - skipping.
Warning: Found unsupported expression 'D&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sdfstp_1' - skipping.
Warning: Found unsupported expression 'D&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sdfstp_2' - skipping.
Warning: Found unsupported expression 'D&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sdfstp_4' - skipping.
Warning: Found unsupported expression 'D&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sdfxbp_1' - skipping.
Warning: Found unsupported expression 'D&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sdfxbp_2' - skipping.
Warning: Found unsupported expression 'D&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sdfxtp_1' - skipping.
Warning: Found unsupported expression 'D&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sdfxtp_2' - skipping.
Warning: Found unsupported expression 'D&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sdfxtp_4' - skipping.
Warning: Found unsupported expression 'D&DE&!SCE|IQ&!DE&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sedfxbp_1' - skipping.
Warning: Found unsupported expression 'D&DE&!SCE|IQ&!DE&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sedfxbp_2' - skipping.
Warning: Found unsupported expression 'D&DE&!SCE|IQ&!DE&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sedfxtp_1' - skipping.
Warning: Found unsupported expression 'D&DE&!SCE|IQ&!DE&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sedfxtp_2' - skipping.
Warning: Found unsupported expression 'D&DE&!SCE|IQ&!DE&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sedfxtp_4' - skipping.
Warning: Found unsupported expression 'D&DE|IQ&!DE' in pin attribute of cell 'sky130_fd_sc_hd__edfxbp_1' - skipping.
Warning: Found unsupported expression 'D&DE|IQ&!DE' in pin attribute of cell 'sky130_fd_sc_hd__edfxtp_1' - skipping.
Warning: Found unsupported expression 'D&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sdfbbp_1' - skipping.
Warning: Found unsupported expression 'D&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sdfrbp_1' - skipping.
Warning: Found unsupported expression 'D&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sdfrbp_2' - skipping.
Warning: Found unsupported expression 'D&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sdfrtp_1' - skipping.
Warning: Found unsupported expression 'D&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sdfrtp_2' - skipping.
Warning: Found unsupported expression 'D&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sdfrtp_4' - skipping.
Warning: Found unsupported expression 'D&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sdfsbp_1' - skipping.
Warning: Found unsupported expression 'D&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sdfsbp_2' - skipping.
Warning: Found unsupported expression 'D&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sdfstp_1' - skipping.
Warning: Found unsupported expression 'D&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sdfstp_2' - skipping.
Warning: Found unsupported expression 'D&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sdfstp_4' - skipping.
Warning: Found unsupported expression 'D&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sdfxbp_1' - skipping.
Warning: Found unsupported expression 'D&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sdfxbp_2' - skipping.
Warning: Found unsupported expression 'D&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sdfxtp_1' - skipping.
Warning: Found unsupported expression 'D&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sdfxtp_2' - skipping.
Warning: Found unsupported expression 'D&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sdfxtp_4' - skipping.
Warning: Found unsupported expression 'D&DE&!SCE|IQ&!DE&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sedfxbp_1' - skipping.
Warning: Found unsupported expression 'D&DE&!SCE|IQ&!DE&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sedfxbp_2' - skipping.
Warning: Found unsupported expression 'D&DE&!SCE|IQ&!DE&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sedfxtp_1' - skipping.
Warning: Found unsupported expression 'D&DE&!SCE|IQ&!DE&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sedfxtp_2' - skipping.
Warning: Found unsupported expression 'D&DE&!SCE|IQ&!DE&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sedfxtp_4' - skipping.
  final dff cell mappings:
    unmapped dff cell: $_DFF_N_
    \sky130_fd_sc_hd__dfxtp_1 _DFF_P_ (.CLK( C), .D( D), .Q( Q));
    \sky130_fd_sc_hd__dfrtn_1 _DFF_NN0_ (.CLK_N( C), .D( D), .Q( Q), .RESET_B( R));
    unmapped dff cell: $_DFF_NN1_
    unmapped dff cell: $_DFF_NP0_
    unmapped dff cell: $_DFF_NP1_
    \sky130_fd_sc_hd__dfrtp_1 _DFF_PN0_ (.CLK( C), .D( D), .Q( Q), .RESET_B( R));
    \sky130_fd_sc_hd__dfstp_2 _DFF_PN1_ (.CLK( C), .D( D), .Q( Q), .SET_B( R));
    unmapped dff cell: $_DFF_PP0_
    unmapped dff cell: $_DFF_PP1_
    \sky130_fd_sc_hd__dfbbn_1 _DFFSR_NNN_ (.CLK_N( C), .D( D), .Q( Q), .Q_N(~Q), .RESET_B( R), .SET_B( S));
    unmapped dff cell: $_DFFSR_NNP_
    unmapped dff cell: $_DFFSR_NPN_
    unmapped dff cell: $_DFFSR_NPP_
    \sky130_fd_sc_hd__dfbbp_1 _DFFSR_PNN_ (.CLK( C), .D( D), .Q( Q), .Q_N(~Q), .RESET_B( R), .SET_B( S));
    unmapped dff cell: $_DFFSR_PNP_
    unmapped dff cell: $_DFFSR_PPN_
    unmapped dff cell: $_DFFSR_PPP_

13.1. Executing DFFLEGALIZE pass (convert FFs to types supported by the target).
Mapping DFF cells in module `\clock_8Hz':
  mapped 21 $_DFF_PN0_ cells to \sky130_fd_sc_hd__dfrtp_1 cells.
Mapping DFF cells in module `\clock_div':
  mapped 8 $_DFF_PN0_ cells to \sky130_fd_sc_hd__dfrtp_1 cells.
Mapping DFF cells in module `\frequency_divider':
Mapping DFF cells in module `\keypad_encoder':
  mapped 32 $_DFF_PN0_ cells to \sky130_fd_sc_hd__dfrtp_1 cells.
Mapping DFF cells in module `\mode_fsm':
  mapped 2 $_DFF_PN0_ cells to \sky130_fd_sc_hd__dfrtp_1 cells.
Mapping DFF cells in module `\oscillator':
  mapped 15 $_DFF_PN0_ cells to \sky130_fd_sc_hd__dfrtp_1 cells.
  mapped 1 $_DFF_PN1_ cells to \sky130_fd_sc_hd__dfstp_2 cells.
Mapping DFF cells in module `\pwm':
  mapped 9 $_DFF_PN0_ cells to \sky130_fd_sc_hd__dfrtp_1 cells.
Mapping DFF cells in module `\sequential_div':
  mapped 69 $_DFF_PN0_ cells to \sky130_fd_sc_hd__dfrtp_1 cells.
Mapping DFF cells in module `\sound_series_fsm':
  mapped 9 $_DFF_PN0_ cells to \sky130_fd_sc_hd__dfrtp_1 cells.
  mapped 2 $_DFF_PN1_ cells to \sky130_fd_sc_hd__dfstp_2 cells.
Mapping DFF cells in module `\synth':
Mapping DFF cells in module `\waveshaper':

14. Executing ABC pass (technology mapping using ABC).

14.1. Extracting gate netlist of module `\clock_8Hz' to `<abc-temp-dir>/input.blif'..
Extracted 133 gates and 156 wires to a netlist network with 23 inputs and 22 outputs.

14.1.1. Executing ABC.
Running ABC command: "<yosys-exe-dir>/yosys-abc" -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_lib -w /home/shay/c/ecng007/sky130A/lib/sky130_fd_sc_hd__tt_100C_1v80.lib 
ABC: Parsing finished successfully.  Parsing time =     0.10 sec
ABC: Scl_LibertyReadGenlib() skipped cell "sky130_fd_sc_hd__decap_12" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "sky130_fd_sc_hd__decap_3" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "sky130_fd_sc_hd__decap_4" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "sky130_fd_sc_hd__decap_6" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "sky130_fd_sc_hd__decap_8" without logic function.
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfbbn_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfbbn_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfbbp_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfrbp_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfrbp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfrtn_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfrtp_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfrtp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfrtp_4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfsbp_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfsbp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfstp_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfstp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfstp_4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfxbp_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfxbp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfxtp_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfxtp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfxtp_4".
ABC: Scl_LibertyReadGenlib() skipped cell "sky130_fd_sc_hd__diode_2" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "sky130_fd_sc_hd__dlclkp_1" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "sky130_fd_sc_hd__dlclkp_2" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "sky130_fd_sc_hd__dlclkp_4" without logic function.
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlrbn_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlrbn_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlrbp_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlrbp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlrtn_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlrtn_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlrtn_4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlrtp_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlrtp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlrtp_4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlxbn_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlxbn_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlxbp_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlxtn_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlxtn_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlxtn_4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlxtp_1".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "sky130_fd_sc_hd__ebufn_1".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "sky130_fd_sc_hd__ebufn_2".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "sky130_fd_sc_hd__ebufn_4".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "sky130_fd_sc_hd__ebufn_8".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__edfxbp_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__edfxtp_1".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "sky130_fd_sc_hd__einvn_0".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "sky130_fd_sc_hd__einvn_1".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "sky130_fd_sc_hd__einvn_2".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "sky130_fd_sc_hd__einvn_4".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "sky130_fd_sc_hd__einvn_8".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "sky130_fd_sc_hd__einvp_1".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "sky130_fd_sc_hd__einvp_2".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "sky130_fd_sc_hd__einvp_4".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "sky130_fd_sc_hd__einvp_8".
ABC: Scl_LibertyReadGenlib() skipped cell "sky130_fd_sc_hd__lpflow_bleeder_1" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "sky130_fd_sc_hd__lpflow_decapkapwr_12" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "sky130_fd_sc_hd__lpflow_decapkapwr_3" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "sky130_fd_sc_hd__lpflow_decapkapwr_4" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "sky130_fd_sc_hd__lpflow_decapkapwr_6" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "sky130_fd_sc_hd__lpflow_decapkapwr_8" without logic function.
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__lpflow_inputisolatch_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sdfbbn_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sdfbbn_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sdfbbp_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sdfrbp_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sdfrbp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sdfrtn_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sdfrtp_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sdfrtp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sdfrtp_4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sdfsbp_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sdfsbp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sdfstp_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sdfstp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sdfstp_4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sdfxbp_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sdfxbp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sdfxtp_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sdfxtp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sdfxtp_4".
ABC: Scl_LibertyReadGenlib() skipped cell "sky130_fd_sc_hd__sdlclkp_1" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "sky130_fd_sc_hd__sdlclkp_2" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "sky130_fd_sc_hd__sdlclkp_4" without logic function.
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sedfxbp_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sedfxbp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sedfxtp_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sedfxtp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sedfxtp_4".
ABC: Library "sky130_fd_sc_hd__tt_100C_1v80" from "/home/shay/c/ecng007/sky130A/lib/sky130_fd_sc_hd__tt_100C_1v80.lib" has 334 cells (94 skipped: 63 seq; 13 tri-state; 18 no func; 0 dont_use).  Time =     0.14 sec
ABC: Memory =   19.85 MB. Time =     0.14 sec
ABC: Warning: Detected 9 multi-output gates (for example, "sky130_fd_sc_hd__fa_1").
ABC: + strash 
ABC: + &get -n 
ABC: + &fraig -x 
ABC: + &put 
ABC: + scorr 
ABC: Warning: The network is combinational (run "fraig" or "fraig_sweep").
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

14.1.2. Re-integrating ABC results.
ABC RESULTS:   sky130_fd_sc_hd__clkinv_1 cells:        3
ABC RESULTS:   sky130_fd_sc_hd__nor4b_1 cells:        2
ABC RESULTS:   sky130_fd_sc_hd__nand4b_1 cells:        2
ABC RESULTS:   sky130_fd_sc_hd__o22ai_1 cells:        1
ABC RESULTS:   sky130_fd_sc_hd__a22o_1 cells:        1
ABC RESULTS:   sky130_fd_sc_hd__nand2_1 cells:        1
ABC RESULTS:   sky130_fd_sc_hd__nand3_1 cells:        1
ABC RESULTS:   sky130_fd_sc_hd__nand2b_1 cells:        1
ABC RESULTS:   sky130_fd_sc_hd__xnor2_1 cells:        1
ABC RESULTS:   sky130_fd_sc_hd__nand4_1 cells:        2
ABC RESULTS:   sky130_fd_sc_hd__nor4_1 cells:        2
ABC RESULTS:   sky130_fd_sc_hd__a21boi_0 cells:        1
ABC RESULTS:   sky130_fd_sc_hd__o21a_1 cells:        1
ABC RESULTS:   sky130_fd_sc_hd__nor3b_1 cells:        3
ABC RESULTS:   sky130_fd_sc_hd__nor2_1 cells:       15
ABC RESULTS:   sky130_fd_sc_hd__o21bai_1 cells:        1
ABC RESULTS:   sky130_fd_sc_hd__and4_1 cells:        4
ABC RESULTS:   sky130_fd_sc_hd__o21ai_0 cells:        3
ABC RESULTS:   sky130_fd_sc_hd__a21oi_1 cells:        9
ABC RESULTS:   sky130_fd_sc_hd__and3_1 cells:        4
ABC RESULTS:   sky130_fd_sc_hd__nor3_1 cells:       13
ABC RESULTS:   sky130_fd_sc_hd__and2_0 cells:        5
ABC RESULTS:        internal signals:      111
ABC RESULTS:           input signals:       23
ABC RESULTS:          output signals:       22
Removing temp directory.

14.2. Extracting gate netlist of module `\clock_div' to `<abc-temp-dir>/input.blif'..
Extracted 34 gates and 43 wires to a netlist network with 9 inputs and 9 outputs.

14.2.1. Executing ABC.
Running ABC command: "<yosys-exe-dir>/yosys-abc" -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_lib -w /home/shay/c/ecng007/sky130A/lib/sky130_fd_sc_hd__tt_100C_1v80.lib 
ABC: Parsing finished successfully.  Parsing time =     0.10 sec
ABC: Scl_LibertyReadGenlib() skipped cell "sky130_fd_sc_hd__decap_12" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "sky130_fd_sc_hd__decap_3" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "sky130_fd_sc_hd__decap_4" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "sky130_fd_sc_hd__decap_6" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "sky130_fd_sc_hd__decap_8" without logic function.
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfbbn_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfbbn_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfbbp_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfrbp_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfrbp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfrtn_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfrtp_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfrtp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfrtp_4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfsbp_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfsbp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfstp_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfstp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfstp_4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfxbp_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfxbp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfxtp_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfxtp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfxtp_4".
ABC: Scl_LibertyReadGenlib() skipped cell "sky130_fd_sc_hd__diode_2" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "sky130_fd_sc_hd__dlclkp_1" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "sky130_fd_sc_hd__dlclkp_2" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "sky130_fd_sc_hd__dlclkp_4" without logic function.
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlrbn_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlrbn_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlrbp_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlrbp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlrtn_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlrtn_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlrtn_4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlrtp_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlrtp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlrtp_4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlxbn_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlxbn_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlxbp_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlxtn_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlxtn_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlxtn_4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlxtp_1".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "sky130_fd_sc_hd__ebufn_1".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "sky130_fd_sc_hd__ebufn_2".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "sky130_fd_sc_hd__ebufn_4".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "sky130_fd_sc_hd__ebufn_8".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__edfxbp_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__edfxtp_1".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "sky130_fd_sc_hd__einvn_0".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "sky130_fd_sc_hd__einvn_1".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "sky130_fd_sc_hd__einvn_2".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "sky130_fd_sc_hd__einvn_4".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "sky130_fd_sc_hd__einvn_8".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "sky130_fd_sc_hd__einvp_1".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "sky130_fd_sc_hd__einvp_2".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "sky130_fd_sc_hd__einvp_4".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "sky130_fd_sc_hd__einvp_8".
ABC: Scl_LibertyReadGenlib() skipped cell "sky130_fd_sc_hd__lpflow_bleeder_1" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "sky130_fd_sc_hd__lpflow_decapkapwr_12" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "sky130_fd_sc_hd__lpflow_decapkapwr_3" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "sky130_fd_sc_hd__lpflow_decapkapwr_4" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "sky130_fd_sc_hd__lpflow_decapkapwr_6" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "sky130_fd_sc_hd__lpflow_decapkapwr_8" without logic function.
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__lpflow_inputisolatch_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sdfbbn_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sdfbbn_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sdfbbp_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sdfrbp_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sdfrbp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sdfrtn_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sdfrtp_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sdfrtp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sdfrtp_4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sdfsbp_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sdfsbp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sdfstp_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sdfstp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sdfstp_4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sdfxbp_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sdfxbp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sdfxtp_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sdfxtp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sdfxtp_4".
ABC: Scl_LibertyReadGenlib() skipped cell "sky130_fd_sc_hd__sdlclkp_1" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "sky130_fd_sc_hd__sdlclkp_2" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "sky130_fd_sc_hd__sdlclkp_4" without logic function.
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sedfxbp_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sedfxbp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sedfxtp_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sedfxtp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sedfxtp_4".
ABC: Library "sky130_fd_sc_hd__tt_100C_1v80" from "/home/shay/c/ecng007/sky130A/lib/sky130_fd_sc_hd__tt_100C_1v80.lib" has 334 cells (94 skipped: 63 seq; 13 tri-state; 18 no func; 0 dont_use).  Time =     0.14 sec
ABC: Memory =   19.85 MB. Time =     0.14 sec
ABC: Warning: Detected 9 multi-output gates (for example, "sky130_fd_sc_hd__fa_1").
ABC: + strash 
ABC: + &get -n 
ABC: + &fraig -x 
ABC: + &put 
ABC: + scorr 
ABC: Warning: The network is combinational (run "fraig" or "fraig_sweep").
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

14.2.2. Re-integrating ABC results.
ABC RESULTS:   sky130_fd_sc_hd__lpflow_isobufsrc_1 cells:        1
ABC RESULTS:   sky130_fd_sc_hd__and4_1 cells:        1
ABC RESULTS:   sky130_fd_sc_hd__nor2_1 cells:        1
ABC RESULTS:   sky130_fd_sc_hd__o21ai_0 cells:        4
ABC RESULTS:   sky130_fd_sc_hd__and3_1 cells:        3
ABC RESULTS:   sky130_fd_sc_hd__a21oi_1 cells:        6
ABC RESULTS:   sky130_fd_sc_hd__nor3b_1 cells:        3
ABC RESULTS:   sky130_fd_sc_hd__and2_0 cells:        1
ABC RESULTS:        internal signals:       25
ABC RESULTS:           input signals:        9
ABC RESULTS:          output signals:        9
Removing temp directory.

14.3. Extracting gate netlist of module `\frequency_divider' to `<abc-temp-dir>/input.blif'..
Extracted 147 gates and 157 wires to a netlist network with 10 inputs and 16 outputs.

14.3.1. Executing ABC.
Running ABC command: "<yosys-exe-dir>/yosys-abc" -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_lib -w /home/shay/c/ecng007/sky130A/lib/sky130_fd_sc_hd__tt_100C_1v80.lib 
ABC: Parsing finished successfully.  Parsing time =     0.11 sec
ABC: Scl_LibertyReadGenlib() skipped cell "sky130_fd_sc_hd__decap_12" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "sky130_fd_sc_hd__decap_3" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "sky130_fd_sc_hd__decap_4" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "sky130_fd_sc_hd__decap_6" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "sky130_fd_sc_hd__decap_8" without logic function.
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfbbn_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfbbn_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfbbp_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfrbp_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfrbp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfrtn_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfrtp_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfrtp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfrtp_4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfsbp_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfsbp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfstp_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfstp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfstp_4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfxbp_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfxbp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfxtp_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfxtp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfxtp_4".
ABC: Scl_LibertyReadGenlib() skipped cell "sky130_fd_sc_hd__diode_2" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "sky130_fd_sc_hd__dlclkp_1" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "sky130_fd_sc_hd__dlclkp_2" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "sky130_fd_sc_hd__dlclkp_4" without logic function.
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlrbn_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlrbn_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlrbp_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlrbp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlrtn_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlrtn_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlrtn_4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlrtp_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlrtp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlrtp_4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlxbn_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlxbn_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlxbp_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlxtn_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlxtn_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlxtn_4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlxtp_1".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "sky130_fd_sc_hd__ebufn_1".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "sky130_fd_sc_hd__ebufn_2".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "sky130_fd_sc_hd__ebufn_4".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "sky130_fd_sc_hd__ebufn_8".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__edfxbp_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__edfxtp_1".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "sky130_fd_sc_hd__einvn_0".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "sky130_fd_sc_hd__einvn_1".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "sky130_fd_sc_hd__einvn_2".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "sky130_fd_sc_hd__einvn_4".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "sky130_fd_sc_hd__einvn_8".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "sky130_fd_sc_hd__einvp_1".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "sky130_fd_sc_hd__einvp_2".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "sky130_fd_sc_hd__einvp_4".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "sky130_fd_sc_hd__einvp_8".
ABC: Scl_LibertyReadGenlib() skipped cell "sky130_fd_sc_hd__lpflow_bleeder_1" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "sky130_fd_sc_hd__lpflow_decapkapwr_12" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "sky130_fd_sc_hd__lpflow_decapkapwr_3" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "sky130_fd_sc_hd__lpflow_decapkapwr_4" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "sky130_fd_sc_hd__lpflow_decapkapwr_6" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "sky130_fd_sc_hd__lpflow_decapkapwr_8" without logic function.
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__lpflow_inputisolatch_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sdfbbn_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sdfbbn_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sdfbbp_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sdfrbp_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sdfrbp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sdfrtn_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sdfrtp_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sdfrtp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sdfrtp_4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sdfsbp_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sdfsbp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sdfstp_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sdfstp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sdfstp_4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sdfxbp_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sdfxbp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sdfxtp_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sdfxtp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sdfxtp_4".
ABC: Scl_LibertyReadGenlib() skipped cell "sky130_fd_sc_hd__sdlclkp_1" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "sky130_fd_sc_hd__sdlclkp_2" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "sky130_fd_sc_hd__sdlclkp_4" without logic function.
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sedfxbp_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sedfxbp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sedfxtp_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sedfxtp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sedfxtp_4".
ABC: Library "sky130_fd_sc_hd__tt_100C_1v80" from "/home/shay/c/ecng007/sky130A/lib/sky130_fd_sc_hd__tt_100C_1v80.lib" has 334 cells (94 skipped: 63 seq; 13 tri-state; 18 no func; 0 dont_use).  Time =     0.15 sec
ABC: Memory =   19.85 MB. Time =     0.15 sec
ABC: Warning: Detected 9 multi-output gates (for example, "sky130_fd_sc_hd__fa_1").
ABC: + strash 
ABC: + &get -n 
ABC: + &fraig -x 
ABC: + &put 
ABC: + scorr 
ABC: Warning: The network is combinational (run "fraig" or "fraig_sweep").
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

14.3.2. Re-integrating ABC results.
ABC RESULTS:   sky130_fd_sc_hd__clkinv_1 cells:        1
ABC RESULTS:   sky130_fd_sc_hd__and4_1 cells:        2
ABC RESULTS:   sky130_fd_sc_hd__o22a_1 cells:        2
ABC RESULTS:   sky130_fd_sc_hd__and2_0 cells:        1
ABC RESULTS:   sky130_fd_sc_hd__nand4_1 cells:        3
ABC RESULTS:   sky130_fd_sc_hd__and3_1 cells:        2
ABC RESULTS:   sky130_fd_sc_hd__o32ai_1 cells:        1
ABC RESULTS:   sky130_fd_sc_hd__lpflow_inputiso1p_1 cells:        1
ABC RESULTS:   sky130_fd_sc_hd__a2bb2oi_1 cells:        1
ABC RESULTS:   sky130_fd_sc_hd__o31ai_1 cells:        2
ABC RESULTS:   sky130_fd_sc_hd__a22oi_1 cells:        3
ABC RESULTS:   sky130_fd_sc_hd__nor3_1 cells:        3
ABC RESULTS:   sky130_fd_sc_hd__a221oi_1 cells:        1
ABC RESULTS:   sky130_fd_sc_hd__nor4b_1 cells:        1
ABC RESULTS:   sky130_fd_sc_hd__o21a_1 cells:        1
ABC RESULTS:   sky130_fd_sc_hd__a2111oi_0 cells:        1
ABC RESULTS:   sky130_fd_sc_hd__nor2_1 cells:       14
ABC RESULTS:   sky130_fd_sc_hd__a32oi_1 cells:        1
ABC RESULTS:   sky130_fd_sc_hd__a31oi_1 cells:        7
ABC RESULTS:   sky130_fd_sc_hd__o211ai_1 cells:        2
ABC RESULTS:   sky130_fd_sc_hd__a21oi_1 cells:       14
ABC RESULTS:   sky130_fd_sc_hd__nand3_1 cells:        7
ABC RESULTS:   sky130_fd_sc_hd__nand2_1 cells:       13
ABC RESULTS:   sky130_fd_sc_hd__o22ai_1 cells:        5
ABC RESULTS:   sky130_fd_sc_hd__a31o_1 cells:        3
ABC RESULTS:   sky130_fd_sc_hd__a22o_1 cells:        2
ABC RESULTS:   sky130_fd_sc_hd__o21ai_0 cells:        5
ABC RESULTS:   sky130_fd_sc_hd__a211oi_1 cells:        5
ABC RESULTS:        internal signals:      131
ABC RESULTS:           input signals:       10
ABC RESULTS:          output signals:       16
Removing temp directory.

14.4. Extracting gate netlist of module `\keypad_encoder' to `<abc-temp-dir>/input.blif'..
Extracted 64 gates and 81 wires to a netlist network with 17 inputs and 6 outputs.

14.4.1. Executing ABC.
Running ABC command: "<yosys-exe-dir>/yosys-abc" -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_lib -w /home/shay/c/ecng007/sky130A/lib/sky130_fd_sc_hd__tt_100C_1v80.lib 
ABC: Parsing finished successfully.  Parsing time =     0.10 sec
ABC: Scl_LibertyReadGenlib() skipped cell "sky130_fd_sc_hd__decap_12" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "sky130_fd_sc_hd__decap_3" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "sky130_fd_sc_hd__decap_4" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "sky130_fd_sc_hd__decap_6" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "sky130_fd_sc_hd__decap_8" without logic function.
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfbbn_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfbbn_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfbbp_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfrbp_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfrbp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfrtn_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfrtp_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfrtp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfrtp_4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfsbp_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfsbp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfstp_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfstp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfstp_4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfxbp_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfxbp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfxtp_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfxtp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfxtp_4".
ABC: Scl_LibertyReadGenlib() skipped cell "sky130_fd_sc_hd__diode_2" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "sky130_fd_sc_hd__dlclkp_1" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "sky130_fd_sc_hd__dlclkp_2" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "sky130_fd_sc_hd__dlclkp_4" without logic function.
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlrbn_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlrbn_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlrbp_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlrbp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlrtn_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlrtn_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlrtn_4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlrtp_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlrtp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlrtp_4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlxbn_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlxbn_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlxbp_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlxtn_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlxtn_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlxtn_4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlxtp_1".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "sky130_fd_sc_hd__ebufn_1".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "sky130_fd_sc_hd__ebufn_2".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "sky130_fd_sc_hd__ebufn_4".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "sky130_fd_sc_hd__ebufn_8".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__edfxbp_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__edfxtp_1".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "sky130_fd_sc_hd__einvn_0".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "sky130_fd_sc_hd__einvn_1".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "sky130_fd_sc_hd__einvn_2".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "sky130_fd_sc_hd__einvn_4".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "sky130_fd_sc_hd__einvn_8".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "sky130_fd_sc_hd__einvp_1".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "sky130_fd_sc_hd__einvp_2".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "sky130_fd_sc_hd__einvp_4".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "sky130_fd_sc_hd__einvp_8".
ABC: Scl_LibertyReadGenlib() skipped cell "sky130_fd_sc_hd__lpflow_bleeder_1" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "sky130_fd_sc_hd__lpflow_decapkapwr_12" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "sky130_fd_sc_hd__lpflow_decapkapwr_3" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "sky130_fd_sc_hd__lpflow_decapkapwr_4" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "sky130_fd_sc_hd__lpflow_decapkapwr_6" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "sky130_fd_sc_hd__lpflow_decapkapwr_8" without logic function.
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__lpflow_inputisolatch_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sdfbbn_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sdfbbn_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sdfbbp_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sdfrbp_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sdfrbp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sdfrtn_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sdfrtp_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sdfrtp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sdfrtp_4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sdfsbp_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sdfsbp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sdfstp_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sdfstp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sdfstp_4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sdfxbp_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sdfxbp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sdfxtp_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sdfxtp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sdfxtp_4".
ABC: Scl_LibertyReadGenlib() skipped cell "sky130_fd_sc_hd__sdlclkp_1" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "sky130_fd_sc_hd__sdlclkp_2" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "sky130_fd_sc_hd__sdlclkp_4" without logic function.
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sedfxbp_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sedfxbp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sedfxtp_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sedfxtp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sedfxtp_4".
ABC: Library "sky130_fd_sc_hd__tt_100C_1v80" from "/home/shay/c/ecng007/sky130A/lib/sky130_fd_sc_hd__tt_100C_1v80.lib" has 334 cells (94 skipped: 63 seq; 13 tri-state; 18 no func; 0 dont_use).  Time =     0.15 sec
ABC: Memory =   19.85 MB. Time =     0.15 sec
ABC: Warning: Detected 9 multi-output gates (for example, "sky130_fd_sc_hd__fa_1").
ABC: + strash 
ABC: + &get -n 
ABC: + &fraig -x 
ABC: + &put 
ABC: + scorr 
ABC: Warning: The network is combinational (run "fraig" or "fraig_sweep").
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

14.4.2. Re-integrating ABC results.
ABC RESULTS:   sky130_fd_sc_hd__nor4_1 cells:        2
ABC RESULTS:   sky130_fd_sc_hd__clkinv_1 cells:        3
ABC RESULTS:   sky130_fd_sc_hd__nor2_1 cells:        3
ABC RESULTS:   sky130_fd_sc_hd__nor3_1 cells:        1
ABC RESULTS:   sky130_fd_sc_hd__nand3_1 cells:        2
ABC RESULTS:   sky130_fd_sc_hd__o211ai_1 cells:        2
ABC RESULTS:   sky130_fd_sc_hd__nand4_1 cells:        3
ABC RESULTS:   sky130_fd_sc_hd__a21oi_1 cells:        1
ABC RESULTS:   sky130_fd_sc_hd__o211a_1 cells:        1
ABC RESULTS:   sky130_fd_sc_hd__nor4b_1 cells:        2
ABC RESULTS:   sky130_fd_sc_hd__o31ai_1 cells:        1
ABC RESULTS:   sky130_fd_sc_hd__nand2_1 cells:        3
ABC RESULTS:   sky130_fd_sc_hd__and4_1 cells:        2
ABC RESULTS:   sky130_fd_sc_hd__o21ai_0 cells:        3
ABC RESULTS:   sky130_fd_sc_hd__lpflow_isobufsrc_1 cells:        5
ABC RESULTS:        internal signals:       58
ABC RESULTS:           input signals:       17
ABC RESULTS:          output signals:        6
Removing temp directory.

14.5. Extracting gate netlist of module `\mode_fsm' to `<abc-temp-dir>/input.blif'..
Extracted 3 gates and 6 wires to a netlist network with 3 inputs and 2 outputs.

14.5.1. Executing ABC.
Running ABC command: "<yosys-exe-dir>/yosys-abc" -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_lib -w /home/shay/c/ecng007/sky130A/lib/sky130_fd_sc_hd__tt_100C_1v80.lib 
ABC: Parsing finished successfully.  Parsing time =     0.10 sec
ABC: Scl_LibertyReadGenlib() skipped cell "sky130_fd_sc_hd__decap_12" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "sky130_fd_sc_hd__decap_3" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "sky130_fd_sc_hd__decap_4" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "sky130_fd_sc_hd__decap_6" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "sky130_fd_sc_hd__decap_8" without logic function.
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfbbn_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfbbn_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfbbp_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfrbp_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfrbp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfrtn_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfrtp_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfrtp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfrtp_4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfsbp_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfsbp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfstp_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfstp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfstp_4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfxbp_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfxbp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfxtp_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfxtp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfxtp_4".
ABC: Scl_LibertyReadGenlib() skipped cell "sky130_fd_sc_hd__diode_2" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "sky130_fd_sc_hd__dlclkp_1" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "sky130_fd_sc_hd__dlclkp_2" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "sky130_fd_sc_hd__dlclkp_4" without logic function.
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlrbn_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlrbn_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlrbp_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlrbp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlrtn_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlrtn_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlrtn_4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlrtp_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlrtp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlrtp_4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlxbn_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlxbn_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlxbp_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlxtn_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlxtn_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlxtn_4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlxtp_1".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "sky130_fd_sc_hd__ebufn_1".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "sky130_fd_sc_hd__ebufn_2".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "sky130_fd_sc_hd__ebufn_4".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "sky130_fd_sc_hd__ebufn_8".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__edfxbp_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__edfxtp_1".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "sky130_fd_sc_hd__einvn_0".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "sky130_fd_sc_hd__einvn_1".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "sky130_fd_sc_hd__einvn_2".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "sky130_fd_sc_hd__einvn_4".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "sky130_fd_sc_hd__einvn_8".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "sky130_fd_sc_hd__einvp_1".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "sky130_fd_sc_hd__einvp_2".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "sky130_fd_sc_hd__einvp_4".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "sky130_fd_sc_hd__einvp_8".
ABC: Scl_LibertyReadGenlib() skipped cell "sky130_fd_sc_hd__lpflow_bleeder_1" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "sky130_fd_sc_hd__lpflow_decapkapwr_12" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "sky130_fd_sc_hd__lpflow_decapkapwr_3" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "sky130_fd_sc_hd__lpflow_decapkapwr_4" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "sky130_fd_sc_hd__lpflow_decapkapwr_6" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "sky130_fd_sc_hd__lpflow_decapkapwr_8" without logic function.
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__lpflow_inputisolatch_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sdfbbn_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sdfbbn_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sdfbbp_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sdfrbp_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sdfrbp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sdfrtn_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sdfrtp_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sdfrtp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sdfrtp_4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sdfsbp_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sdfsbp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sdfstp_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sdfstp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sdfstp_4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sdfxbp_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sdfxbp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sdfxtp_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sdfxtp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sdfxtp_4".
ABC: Scl_LibertyReadGenlib() skipped cell "sky130_fd_sc_hd__sdlclkp_1" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "sky130_fd_sc_hd__sdlclkp_2" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "sky130_fd_sc_hd__sdlclkp_4" without logic function.
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sedfxbp_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sedfxbp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sedfxtp_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sedfxtp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sedfxtp_4".
ABC: Library "sky130_fd_sc_hd__tt_100C_1v80" from "/home/shay/c/ecng007/sky130A/lib/sky130_fd_sc_hd__tt_100C_1v80.lib" has 334 cells (94 skipped: 63 seq; 13 tri-state; 18 no func; 0 dont_use).  Time =     0.15 sec
ABC: Memory =   19.85 MB. Time =     0.15 sec
ABC: Warning: Detected 9 multi-output gates (for example, "sky130_fd_sc_hd__fa_1").
ABC: + strash 
ABC: + &get -n 
ABC: + &fraig -x 
ABC: + &put 
ABC: + scorr 
ABC: Warning: The network is combinational (run "fraig" or "fraig_sweep").
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

14.5.2. Re-integrating ABC results.
ABC RESULTS:   sky130_fd_sc_hd__nor2_1 cells:        1
ABC RESULTS:   sky130_fd_sc_hd__a21oi_1 cells:        1
ABC RESULTS:   sky130_fd_sc_hd__mux2_1 cells:        1
ABC RESULTS:        internal signals:        1
ABC RESULTS:           input signals:        3
ABC RESULTS:          output signals:        2
Removing temp directory.

14.6. Extracting gate netlist of module `\oscillator' to `<abc-temp-dir>/input.blif'..
Extracted 147 gates and 180 wires to a netlist network with 33 inputs and 16 outputs.

14.6.1. Executing ABC.
Running ABC command: "<yosys-exe-dir>/yosys-abc" -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_lib -w /home/shay/c/ecng007/sky130A/lib/sky130_fd_sc_hd__tt_100C_1v80.lib 
ABC: Parsing finished successfully.  Parsing time =     0.10 sec
ABC: Scl_LibertyReadGenlib() skipped cell "sky130_fd_sc_hd__decap_12" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "sky130_fd_sc_hd__decap_3" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "sky130_fd_sc_hd__decap_4" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "sky130_fd_sc_hd__decap_6" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "sky130_fd_sc_hd__decap_8" without logic function.
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfbbn_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfbbn_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfbbp_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfrbp_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfrbp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfrtn_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfrtp_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfrtp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfrtp_4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfsbp_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfsbp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfstp_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfstp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfstp_4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfxbp_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfxbp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfxtp_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfxtp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfxtp_4".
ABC: Scl_LibertyReadGenlib() skipped cell "sky130_fd_sc_hd__diode_2" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "sky130_fd_sc_hd__dlclkp_1" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "sky130_fd_sc_hd__dlclkp_2" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "sky130_fd_sc_hd__dlclkp_4" without logic function.
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlrbn_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlrbn_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlrbp_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlrbp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlrtn_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlrtn_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlrtn_4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlrtp_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlrtp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlrtp_4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlxbn_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlxbn_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlxbp_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlxtn_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlxtn_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlxtn_4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlxtp_1".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "sky130_fd_sc_hd__ebufn_1".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "sky130_fd_sc_hd__ebufn_2".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "sky130_fd_sc_hd__ebufn_4".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "sky130_fd_sc_hd__ebufn_8".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__edfxbp_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__edfxtp_1".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "sky130_fd_sc_hd__einvn_0".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "sky130_fd_sc_hd__einvn_1".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "sky130_fd_sc_hd__einvn_2".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "sky130_fd_sc_hd__einvn_4".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "sky130_fd_sc_hd__einvn_8".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "sky130_fd_sc_hd__einvp_1".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "sky130_fd_sc_hd__einvp_2".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "sky130_fd_sc_hd__einvp_4".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "sky130_fd_sc_hd__einvp_8".
ABC: Scl_LibertyReadGenlib() skipped cell "sky130_fd_sc_hd__lpflow_bleeder_1" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "sky130_fd_sc_hd__lpflow_decapkapwr_12" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "sky130_fd_sc_hd__lpflow_decapkapwr_3" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "sky130_fd_sc_hd__lpflow_decapkapwr_4" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "sky130_fd_sc_hd__lpflow_decapkapwr_6" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "sky130_fd_sc_hd__lpflow_decapkapwr_8" without logic function.
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__lpflow_inputisolatch_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sdfbbn_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sdfbbn_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sdfbbp_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sdfrbp_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sdfrbp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sdfrtn_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sdfrtp_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sdfrtp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sdfrtp_4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sdfsbp_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sdfsbp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sdfstp_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sdfstp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sdfstp_4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sdfxbp_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sdfxbp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sdfxtp_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sdfxtp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sdfxtp_4".
ABC: Scl_LibertyReadGenlib() skipped cell "sky130_fd_sc_hd__sdlclkp_1" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "sky130_fd_sc_hd__sdlclkp_2" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "sky130_fd_sc_hd__sdlclkp_4" without logic function.
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sedfxbp_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sedfxbp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sedfxtp_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sedfxtp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sedfxtp_4".
ABC: Library "sky130_fd_sc_hd__tt_100C_1v80" from "/home/shay/c/ecng007/sky130A/lib/sky130_fd_sc_hd__tt_100C_1v80.lib" has 334 cells (94 skipped: 63 seq; 13 tri-state; 18 no func; 0 dont_use).  Time =     0.14 sec
ABC: Memory =   19.85 MB. Time =     0.14 sec
ABC: Warning: Detected 9 multi-output gates (for example, "sky130_fd_sc_hd__fa_1").
ABC: + strash 
ABC: + &get -n 
ABC: + &fraig -x 
ABC: + &put 
ABC: + scorr 
ABC: Warning: The network is combinational (run "fraig" or "fraig_sweep").
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

14.6.2. Re-integrating ABC results.
ABC RESULTS:   sky130_fd_sc_hd__clkinv_1 cells:       11
ABC RESULTS:   sky130_fd_sc_hd__xor2_1 cells:        1
ABC RESULTS:   sky130_fd_sc_hd__or4_1 cells:        1
ABC RESULTS:   sky130_fd_sc_hd__o21bai_1 cells:        1
ABC RESULTS:   sky130_fd_sc_hd__a222oi_1 cells:        1
ABC RESULTS:   sky130_fd_sc_hd__nor3b_1 cells:        1
ABC RESULTS:   sky130_fd_sc_hd__lpflow_isobufsrc_1 cells:        6
ABC RESULTS:   sky130_fd_sc_hd__nand2b_1 cells:        8
ABC RESULTS:   sky130_fd_sc_hd__nand3b_1 cells:        1
ABC RESULTS:   sky130_fd_sc_hd__o22ai_1 cells:        1
ABC RESULTS:   sky130_fd_sc_hd__maj3_1 cells:        5
ABC RESULTS:   sky130_fd_sc_hd__a211oi_1 cells:        1
ABC RESULTS:   sky130_fd_sc_hd__o21a_1 cells:        1
ABC RESULTS:   sky130_fd_sc_hd__o211ai_1 cells:        1
ABC RESULTS:   sky130_fd_sc_hd__o31a_1 cells:        1
ABC RESULTS:   sky130_fd_sc_hd__o31ai_1 cells:        1
ABC RESULTS:   sky130_fd_sc_hd__nand3_1 cells:        3
ABC RESULTS:   sky130_fd_sc_hd__and2_0 cells:        1
ABC RESULTS:   sky130_fd_sc_hd__nand4_1 cells:        1
ABC RESULTS:   sky130_fd_sc_hd__o21ai_0 cells:        6
ABC RESULTS:   sky130_fd_sc_hd__or3_1 cells:        1
ABC RESULTS:   sky130_fd_sc_hd__xnor2_1 cells:        8
ABC RESULTS:   sky130_fd_sc_hd__nor3_1 cells:        6
ABC RESULTS:   sky130_fd_sc_hd__and4_1 cells:        2
ABC RESULTS:   sky130_fd_sc_hd__nor2_1 cells:        6
ABC RESULTS:   sky130_fd_sc_hd__nand2_1 cells:        6
ABC RESULTS:   sky130_fd_sc_hd__nor4b_1 cells:        3
ABC RESULTS:   sky130_fd_sc_hd__and3_1 cells:        3
ABC RESULTS:   sky130_fd_sc_hd__a21oi_1 cells:        8
ABC RESULTS:   sky130_fd_sc_hd__nor4_1 cells:        7
ABC RESULTS:   sky130_fd_sc_hd__o211a_1 cells:        1
ABC RESULTS:        internal signals:      131
ABC RESULTS:           input signals:       33
ABC RESULTS:          output signals:       16
Removing temp directory.

14.7. Extracting gate netlist of module `\pwm' to `<abc-temp-dir>/input.blif'..
Extracted 66 gates and 83 wires to a netlist network with 17 inputs and 9 outputs.

14.7.1. Executing ABC.
Running ABC command: "<yosys-exe-dir>/yosys-abc" -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_lib -w /home/shay/c/ecng007/sky130A/lib/sky130_fd_sc_hd__tt_100C_1v80.lib 
ABC: Parsing finished successfully.  Parsing time =     0.10 sec
ABC: Scl_LibertyReadGenlib() skipped cell "sky130_fd_sc_hd__decap_12" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "sky130_fd_sc_hd__decap_3" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "sky130_fd_sc_hd__decap_4" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "sky130_fd_sc_hd__decap_6" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "sky130_fd_sc_hd__decap_8" without logic function.
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfbbn_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfbbn_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfbbp_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfrbp_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfrbp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfrtn_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfrtp_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfrtp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfrtp_4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfsbp_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfsbp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfstp_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfstp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfstp_4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfxbp_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfxbp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfxtp_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfxtp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfxtp_4".
ABC: Scl_LibertyReadGenlib() skipped cell "sky130_fd_sc_hd__diode_2" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "sky130_fd_sc_hd__dlclkp_1" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "sky130_fd_sc_hd__dlclkp_2" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "sky130_fd_sc_hd__dlclkp_4" without logic function.
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlrbn_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlrbn_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlrbp_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlrbp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlrtn_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlrtn_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlrtn_4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlrtp_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlrtp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlrtp_4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlxbn_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlxbn_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlxbp_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlxtn_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlxtn_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlxtn_4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlxtp_1".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "sky130_fd_sc_hd__ebufn_1".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "sky130_fd_sc_hd__ebufn_2".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "sky130_fd_sc_hd__ebufn_4".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "sky130_fd_sc_hd__ebufn_8".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__edfxbp_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__edfxtp_1".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "sky130_fd_sc_hd__einvn_0".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "sky130_fd_sc_hd__einvn_1".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "sky130_fd_sc_hd__einvn_2".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "sky130_fd_sc_hd__einvn_4".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "sky130_fd_sc_hd__einvn_8".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "sky130_fd_sc_hd__einvp_1".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "sky130_fd_sc_hd__einvp_2".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "sky130_fd_sc_hd__einvp_4".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "sky130_fd_sc_hd__einvp_8".
ABC: Scl_LibertyReadGenlib() skipped cell "sky130_fd_sc_hd__lpflow_bleeder_1" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "sky130_fd_sc_hd__lpflow_decapkapwr_12" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "sky130_fd_sc_hd__lpflow_decapkapwr_3" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "sky130_fd_sc_hd__lpflow_decapkapwr_4" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "sky130_fd_sc_hd__lpflow_decapkapwr_6" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "sky130_fd_sc_hd__lpflow_decapkapwr_8" without logic function.
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__lpflow_inputisolatch_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sdfbbn_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sdfbbn_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sdfbbp_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sdfrbp_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sdfrbp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sdfrtn_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sdfrtp_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sdfrtp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sdfrtp_4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sdfsbp_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sdfsbp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sdfstp_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sdfstp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sdfstp_4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sdfxbp_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sdfxbp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sdfxtp_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sdfxtp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sdfxtp_4".
ABC: Scl_LibertyReadGenlib() skipped cell "sky130_fd_sc_hd__sdlclkp_1" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "sky130_fd_sc_hd__sdlclkp_2" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "sky130_fd_sc_hd__sdlclkp_4" without logic function.
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sedfxbp_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sedfxbp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sedfxtp_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sedfxtp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sedfxtp_4".
ABC: Library "sky130_fd_sc_hd__tt_100C_1v80" from "/home/shay/c/ecng007/sky130A/lib/sky130_fd_sc_hd__tt_100C_1v80.lib" has 334 cells (94 skipped: 63 seq; 13 tri-state; 18 no func; 0 dont_use).  Time =     0.14 sec
ABC: Memory =   19.85 MB. Time =     0.14 sec
ABC: Warning: Detected 9 multi-output gates (for example, "sky130_fd_sc_hd__fa_1").
ABC: + strash 
ABC: + &get -n 
ABC: + &fraig -x 
ABC: + &put 
ABC: + scorr 
ABC: Warning: The network is combinational (run "fraig" or "fraig_sweep").
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

14.7.2. Re-integrating ABC results.
ABC RESULTS:   sky130_fd_sc_hd__clkinv_1 cells:        5
ABC RESULTS:   sky130_fd_sc_hd__and3_1 cells:        2
ABC RESULTS:   sky130_fd_sc_hd__nor3b_1 cells:        2
ABC RESULTS:   sky130_fd_sc_hd__nand3_1 cells:        1
ABC RESULTS:   sky130_fd_sc_hd__nor2_1 cells:        1
ABC RESULTS:   sky130_fd_sc_hd__maj3_1 cells:        1
ABC RESULTS:   sky130_fd_sc_hd__lpflow_isobufsrc_1 cells:        4
ABC RESULTS:   sky130_fd_sc_hd__nor3_1 cells:        1
ABC RESULTS:   sky130_fd_sc_hd__nand2b_1 cells:        3
ABC RESULTS:   sky130_fd_sc_hd__o2bb2ai_1 cells:        1
ABC RESULTS:   sky130_fd_sc_hd__nand2_1 cells:        2
ABC RESULTS:   sky130_fd_sc_hd__o221ai_1 cells:        2
ABC RESULTS:   sky130_fd_sc_hd__a22oi_1 cells:        1
ABC RESULTS:   sky130_fd_sc_hd__o21ai_0 cells:        5
ABC RESULTS:   sky130_fd_sc_hd__a21oi_1 cells:        9
ABC RESULTS:        internal signals:       57
ABC RESULTS:           input signals:       17
ABC RESULTS:          output signals:        9
Removing temp directory.

14.8. Extracting gate netlist of module `\sequential_div' to `<abc-temp-dir>/input.blif'..
Extracted 282 gates and 384 wires to a netlist network with 102 inputs and 69 outputs.

14.8.1. Executing ABC.
Running ABC command: "<yosys-exe-dir>/yosys-abc" -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_lib -w /home/shay/c/ecng007/sky130A/lib/sky130_fd_sc_hd__tt_100C_1v80.lib 
ABC: Parsing finished successfully.  Parsing time =     0.10 sec
ABC: Scl_LibertyReadGenlib() skipped cell "sky130_fd_sc_hd__decap_12" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "sky130_fd_sc_hd__decap_3" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "sky130_fd_sc_hd__decap_4" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "sky130_fd_sc_hd__decap_6" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "sky130_fd_sc_hd__decap_8" without logic function.
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfbbn_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfbbn_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfbbp_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfrbp_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfrbp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfrtn_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfrtp_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfrtp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfrtp_4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfsbp_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfsbp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfstp_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfstp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfstp_4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfxbp_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfxbp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfxtp_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfxtp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfxtp_4".
ABC: Scl_LibertyReadGenlib() skipped cell "sky130_fd_sc_hd__diode_2" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "sky130_fd_sc_hd__dlclkp_1" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "sky130_fd_sc_hd__dlclkp_2" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "sky130_fd_sc_hd__dlclkp_4" without logic function.
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlrbn_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlrbn_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlrbp_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlrbp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlrtn_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlrtn_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlrtn_4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlrtp_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlrtp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlrtp_4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlxbn_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlxbn_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlxbp_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlxtn_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlxtn_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlxtn_4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlxtp_1".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "sky130_fd_sc_hd__ebufn_1".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "sky130_fd_sc_hd__ebufn_2".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "sky130_fd_sc_hd__ebufn_4".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "sky130_fd_sc_hd__ebufn_8".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__edfxbp_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__edfxtp_1".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "sky130_fd_sc_hd__einvn_0".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "sky130_fd_sc_hd__einvn_1".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "sky130_fd_sc_hd__einvn_2".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "sky130_fd_sc_hd__einvn_4".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "sky130_fd_sc_hd__einvn_8".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "sky130_fd_sc_hd__einvp_1".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "sky130_fd_sc_hd__einvp_2".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "sky130_fd_sc_hd__einvp_4".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "sky130_fd_sc_hd__einvp_8".
ABC: Scl_LibertyReadGenlib() skipped cell "sky130_fd_sc_hd__lpflow_bleeder_1" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "sky130_fd_sc_hd__lpflow_decapkapwr_12" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "sky130_fd_sc_hd__lpflow_decapkapwr_3" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "sky130_fd_sc_hd__lpflow_decapkapwr_4" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "sky130_fd_sc_hd__lpflow_decapkapwr_6" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "sky130_fd_sc_hd__lpflow_decapkapwr_8" without logic function.
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__lpflow_inputisolatch_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sdfbbn_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sdfbbn_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sdfbbp_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sdfrbp_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sdfrbp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sdfrtn_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sdfrtp_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sdfrtp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sdfrtp_4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sdfsbp_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sdfsbp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sdfstp_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sdfstp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sdfstp_4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sdfxbp_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sdfxbp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sdfxtp_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sdfxtp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sdfxtp_4".
ABC: Scl_LibertyReadGenlib() skipped cell "sky130_fd_sc_hd__sdlclkp_1" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "sky130_fd_sc_hd__sdlclkp_2" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "sky130_fd_sc_hd__sdlclkp_4" without logic function.
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sedfxbp_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sedfxbp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sedfxtp_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sedfxtp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sedfxtp_4".
ABC: Library "sky130_fd_sc_hd__tt_100C_1v80" from "/home/shay/c/ecng007/sky130A/lib/sky130_fd_sc_hd__tt_100C_1v80.lib" has 334 cells (94 skipped: 63 seq; 13 tri-state; 18 no func; 0 dont_use).  Time =     0.14 sec
ABC: Memory =   19.85 MB. Time =     0.14 sec
ABC: Warning: Detected 9 multi-output gates (for example, "sky130_fd_sc_hd__fa_1").
ABC: + strash 
ABC: + &get -n 
ABC: + &fraig -x 
ABC: + &put 
ABC: + scorr 
ABC: Warning: The network is combinational (run "fraig" or "fraig_sweep").
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

14.8.2. Re-integrating ABC results.
ABC RESULTS:   sky130_fd_sc_hd__o2111ai_1 cells:        1
ABC RESULTS:   sky130_fd_sc_hd__clkinv_1 cells:        8
ABC RESULTS:   sky130_fd_sc_hd__lpflow_inputiso1p_1 cells:        3
ABC RESULTS:   sky130_fd_sc_hd__nand4_1 cells:        1
ABC RESULTS:   sky130_fd_sc_hd__lpflow_isobufsrc_1 cells:       18
ABC RESULTS:   sky130_fd_sc_hd__nor4_1 cells:        2
ABC RESULTS:   sky130_fd_sc_hd__nand2b_1 cells:       14
ABC RESULTS:   sky130_fd_sc_hd__a41o_1 cells:        1
ABC RESULTS:   sky130_fd_sc_hd__a21boi_0 cells:        1
ABC RESULTS:   sky130_fd_sc_hd__maj3_1 cells:        1
ABC RESULTS:   sky130_fd_sc_hd__o21bai_1 cells:        1
ABC RESULTS:   sky130_fd_sc_hd__o22ai_1 cells:        2
ABC RESULTS:   sky130_fd_sc_hd__a41oi_1 cells:        1
ABC RESULTS:   sky130_fd_sc_hd__o21a_1 cells:        3
ABC RESULTS:   sky130_fd_sc_hd__mux2i_1 cells:        4
ABC RESULTS:   sky130_fd_sc_hd__a31oi_1 cells:        3
ABC RESULTS:   sky130_fd_sc_hd__o211ai_1 cells:        3
ABC RESULTS:   sky130_fd_sc_hd__a211oi_1 cells:        3
ABC RESULTS:   sky130_fd_sc_hd__nor3_1 cells:        4
ABC RESULTS:   sky130_fd_sc_hd__o311a_1 cells:        1
ABC RESULTS:   sky130_fd_sc_hd__xnor2_1 cells:       13
ABC RESULTS:   sky130_fd_sc_hd__a22oi_1 cells:        3
ABC RESULTS:   sky130_fd_sc_hd__o31ai_1 cells:        1
ABC RESULTS:   sky130_fd_sc_hd__o311ai_0 cells:        1
ABC RESULTS:   sky130_fd_sc_hd__xor2_1 cells:        8
ABC RESULTS:   sky130_fd_sc_hd__a221o_1 cells:        8
ABC RESULTS:   sky130_fd_sc_hd__a21o_1 cells:        1
ABC RESULTS:   sky130_fd_sc_hd__a32o_1 cells:        1
ABC RESULTS:   sky130_fd_sc_hd__nor2_1 cells:       17
ABC RESULTS:   sky130_fd_sc_hd__a22o_1 cells:        7
ABC RESULTS:   sky130_fd_sc_hd__nand2_1 cells:       58
ABC RESULTS:   sky130_fd_sc_hd__mux2_1 cells:       24
ABC RESULTS:   sky130_fd_sc_hd__nand3_1 cells:        5
ABC RESULTS:   sky130_fd_sc_hd__a21oi_1 cells:       19
ABC RESULTS:   sky130_fd_sc_hd__o21ai_0 cells:       22
ABC RESULTS:        internal signals:      213
ABC RESULTS:           input signals:      102
ABC RESULTS:          output signals:       69
Removing temp directory.

14.9. Extracting gate netlist of module `\sound_series_fsm' to `<abc-temp-dir>/input.blif'..
Extracted 299 gates and 312 wires to a netlist network with 13 inputs and 15 outputs.

14.9.1. Executing ABC.
Running ABC command: "<yosys-exe-dir>/yosys-abc" -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_lib -w /home/shay/c/ecng007/sky130A/lib/sky130_fd_sc_hd__tt_100C_1v80.lib 
ABC: Parsing finished successfully.  Parsing time =     0.10 sec
ABC: Scl_LibertyReadGenlib() skipped cell "sky130_fd_sc_hd__decap_12" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "sky130_fd_sc_hd__decap_3" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "sky130_fd_sc_hd__decap_4" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "sky130_fd_sc_hd__decap_6" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "sky130_fd_sc_hd__decap_8" without logic function.
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfbbn_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfbbn_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfbbp_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfrbp_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfrbp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfrtn_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfrtp_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfrtp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfrtp_4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfsbp_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfsbp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfstp_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfstp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfstp_4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfxbp_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfxbp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfxtp_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfxtp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfxtp_4".
ABC: Scl_LibertyReadGenlib() skipped cell "sky130_fd_sc_hd__diode_2" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "sky130_fd_sc_hd__dlclkp_1" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "sky130_fd_sc_hd__dlclkp_2" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "sky130_fd_sc_hd__dlclkp_4" without logic function.
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlrbn_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlrbn_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlrbp_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlrbp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlrtn_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlrtn_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlrtn_4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlrtp_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlrtp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlrtp_4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlxbn_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlxbn_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlxbp_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlxtn_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlxtn_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlxtn_4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlxtp_1".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "sky130_fd_sc_hd__ebufn_1".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "sky130_fd_sc_hd__ebufn_2".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "sky130_fd_sc_hd__ebufn_4".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "sky130_fd_sc_hd__ebufn_8".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__edfxbp_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__edfxtp_1".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "sky130_fd_sc_hd__einvn_0".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "sky130_fd_sc_hd__einvn_1".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "sky130_fd_sc_hd__einvn_2".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "sky130_fd_sc_hd__einvn_4".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "sky130_fd_sc_hd__einvn_8".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "sky130_fd_sc_hd__einvp_1".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "sky130_fd_sc_hd__einvp_2".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "sky130_fd_sc_hd__einvp_4".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "sky130_fd_sc_hd__einvp_8".
ABC: Scl_LibertyReadGenlib() skipped cell "sky130_fd_sc_hd__lpflow_bleeder_1" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "sky130_fd_sc_hd__lpflow_decapkapwr_12" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "sky130_fd_sc_hd__lpflow_decapkapwr_3" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "sky130_fd_sc_hd__lpflow_decapkapwr_4" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "sky130_fd_sc_hd__lpflow_decapkapwr_6" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "sky130_fd_sc_hd__lpflow_decapkapwr_8" without logic function.
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__lpflow_inputisolatch_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sdfbbn_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sdfbbn_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sdfbbp_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sdfrbp_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sdfrbp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sdfrtn_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sdfrtp_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sdfrtp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sdfrtp_4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sdfsbp_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sdfsbp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sdfstp_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sdfstp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sdfstp_4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sdfxbp_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sdfxbp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sdfxtp_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sdfxtp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sdfxtp_4".
ABC: Scl_LibertyReadGenlib() skipped cell "sky130_fd_sc_hd__sdlclkp_1" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "sky130_fd_sc_hd__sdlclkp_2" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "sky130_fd_sc_hd__sdlclkp_4" without logic function.
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sedfxbp_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sedfxbp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sedfxtp_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sedfxtp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sedfxtp_4".
ABC: Library "sky130_fd_sc_hd__tt_100C_1v80" from "/home/shay/c/ecng007/sky130A/lib/sky130_fd_sc_hd__tt_100C_1v80.lib" has 334 cells (94 skipped: 63 seq; 13 tri-state; 18 no func; 0 dont_use).  Time =     0.15 sec
ABC: Memory =   19.85 MB. Time =     0.15 sec
ABC: Warning: Detected 9 multi-output gates (for example, "sky130_fd_sc_hd__fa_1").
ABC: + strash 
ABC: + &get -n 
ABC: + &fraig -x 
ABC: + &put 
ABC: + scorr 
ABC: Warning: The network is combinational (run "fraig" or "fraig_sweep").
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

14.9.2. Re-integrating ABC results.
ABC RESULTS:   sky130_fd_sc_hd__clkinv_1 cells:        1
ABC RESULTS:   sky130_fd_sc_hd__lpflow_isobufsrc_1 cells:        1
ABC RESULTS:   sky130_fd_sc_hd__or4_1 cells:        2
ABC RESULTS:   sky130_fd_sc_hd__nand2b_1 cells:        2
ABC RESULTS:   sky130_fd_sc_hd__xnor2_1 cells:        8
ABC RESULTS:   sky130_fd_sc_hd__nand4b_1 cells:        1
ABC RESULTS:   sky130_fd_sc_hd__o31ai_1 cells:        3
ABC RESULTS:   sky130_fd_sc_hd__and4_1 cells:        1
ABC RESULTS:   sky130_fd_sc_hd__o311ai_0 cells:        2
ABC RESULTS:   sky130_fd_sc_hd__and3_1 cells:        2
ABC RESULTS:   sky130_fd_sc_hd__o21bai_1 cells:        1
ABC RESULTS:   sky130_fd_sc_hd__a2111oi_0 cells:        1
ABC RESULTS:   sky130_fd_sc_hd__nand4_1 cells:        3
ABC RESULTS:   sky130_fd_sc_hd__o21a_1 cells:        4
ABC RESULTS:   sky130_fd_sc_hd__nor4_1 cells:        6
ABC RESULTS:   sky130_fd_sc_hd__a221oi_1 cells:        1
ABC RESULTS:   sky130_fd_sc_hd__a211oi_1 cells:        2
ABC RESULTS:   sky130_fd_sc_hd__a311oi_1 cells:        2
ABC RESULTS:   sky130_fd_sc_hd__a31o_1 cells:        1
ABC RESULTS:   sky130_fd_sc_hd__or3_1 cells:        4
ABC RESULTS:   sky130_fd_sc_hd__a41oi_1 cells:        2
ABC RESULTS:   sky130_fd_sc_hd__nor3_1 cells:        7
ABC RESULTS:   sky130_fd_sc_hd__o2111ai_1 cells:        2
ABC RESULTS:   sky130_fd_sc_hd__mux2i_1 cells:        1
ABC RESULTS:   sky130_fd_sc_hd__o22ai_1 cells:        3
ABC RESULTS:   sky130_fd_sc_hd__o211ai_1 cells:        9
ABC RESULTS:   sky130_fd_sc_hd__a21oi_1 cells:       12
ABC RESULTS:   sky130_fd_sc_hd__a32oi_1 cells:        2
ABC RESULTS:   sky130_fd_sc_hd__a31oi_1 cells:       10
ABC RESULTS:   sky130_fd_sc_hd__o211a_1 cells:        1
ABC RESULTS:   sky130_fd_sc_hd__xor2_1 cells:        2
ABC RESULTS:   sky130_fd_sc_hd__nand3_1 cells:       17
ABC RESULTS:   sky130_fd_sc_hd__nor4b_1 cells:        2
ABC RESULTS:   sky130_fd_sc_hd__nand3b_1 cells:        1
ABC RESULTS:   sky130_fd_sc_hd__nor2_1 cells:       12
ABC RESULTS:   sky130_fd_sc_hd__lpflow_inputiso1p_1 cells:        3
ABC RESULTS:   sky130_fd_sc_hd__o22a_1 cells:        2
ABC RESULTS:   sky130_fd_sc_hd__o21ai_0 cells:       24
ABC RESULTS:   sky130_fd_sc_hd__nand2_1 cells:       22
ABC RESULTS:   sky130_fd_sc_hd__buf_1 cells:        1
ABC RESULTS:        internal signals:      284
ABC RESULTS:           input signals:       13
ABC RESULTS:          output signals:       15
Removing temp directory.

14.10. Extracting gate netlist of module `\synth' to `<abc-temp-dir>/input.blif'..
Extracted 0 gates and 0 wires to a netlist network with 0 inputs and 0 outputs.
Don't call ABC as there is nothing to map.
Removing temp directory.

14.11. Extracting gate netlist of module `\waveshaper' to `<abc-temp-dir>/input.blif'..
Extracted 41 gates and 51 wires to a netlist network with 10 inputs and 8 outputs.

14.11.1. Executing ABC.
Running ABC command: "<yosys-exe-dir>/yosys-abc" -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_lib -w /home/shay/c/ecng007/sky130A/lib/sky130_fd_sc_hd__tt_100C_1v80.lib 
ABC: Parsing finished successfully.  Parsing time =     0.10 sec
ABC: Scl_LibertyReadGenlib() skipped cell "sky130_fd_sc_hd__decap_12" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "sky130_fd_sc_hd__decap_3" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "sky130_fd_sc_hd__decap_4" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "sky130_fd_sc_hd__decap_6" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "sky130_fd_sc_hd__decap_8" without logic function.
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfbbn_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfbbn_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfbbp_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfrbp_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfrbp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfrtn_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfrtp_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfrtp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfrtp_4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfsbp_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfsbp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfstp_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfstp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfstp_4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfxbp_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfxbp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfxtp_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfxtp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfxtp_4".
ABC: Scl_LibertyReadGenlib() skipped cell "sky130_fd_sc_hd__diode_2" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "sky130_fd_sc_hd__dlclkp_1" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "sky130_fd_sc_hd__dlclkp_2" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "sky130_fd_sc_hd__dlclkp_4" without logic function.
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlrbn_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlrbn_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlrbp_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlrbp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlrtn_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlrtn_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlrtn_4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlrtp_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlrtp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlrtp_4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlxbn_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlxbn_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlxbp_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlxtn_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlxtn_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlxtn_4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlxtp_1".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "sky130_fd_sc_hd__ebufn_1".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "sky130_fd_sc_hd__ebufn_2".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "sky130_fd_sc_hd__ebufn_4".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "sky130_fd_sc_hd__ebufn_8".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__edfxbp_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__edfxtp_1".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "sky130_fd_sc_hd__einvn_0".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "sky130_fd_sc_hd__einvn_1".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "sky130_fd_sc_hd__einvn_2".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "sky130_fd_sc_hd__einvn_4".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "sky130_fd_sc_hd__einvn_8".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "sky130_fd_sc_hd__einvp_1".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "sky130_fd_sc_hd__einvp_2".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "sky130_fd_sc_hd__einvp_4".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "sky130_fd_sc_hd__einvp_8".
ABC: Scl_LibertyReadGenlib() skipped cell "sky130_fd_sc_hd__lpflow_bleeder_1" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "sky130_fd_sc_hd__lpflow_decapkapwr_12" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "sky130_fd_sc_hd__lpflow_decapkapwr_3" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "sky130_fd_sc_hd__lpflow_decapkapwr_4" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "sky130_fd_sc_hd__lpflow_decapkapwr_6" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "sky130_fd_sc_hd__lpflow_decapkapwr_8" without logic function.
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__lpflow_inputisolatch_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sdfbbn_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sdfbbn_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sdfbbp_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sdfrbp_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sdfrbp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sdfrtn_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sdfrtp_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sdfrtp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sdfrtp_4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sdfsbp_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sdfsbp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sdfstp_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sdfstp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sdfstp_4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sdfxbp_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sdfxbp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sdfxtp_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sdfxtp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sdfxtp_4".
ABC: Scl_LibertyReadGenlib() skipped cell "sky130_fd_sc_hd__sdlclkp_1" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "sky130_fd_sc_hd__sdlclkp_2" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "sky130_fd_sc_hd__sdlclkp_4" without logic function.
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sedfxbp_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sedfxbp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sedfxtp_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sedfxtp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sedfxtp_4".
ABC: Library "sky130_fd_sc_hd__tt_100C_1v80" from "/home/shay/c/ecng007/sky130A/lib/sky130_fd_sc_hd__tt_100C_1v80.lib" has 334 cells (94 skipped: 63 seq; 13 tri-state; 18 no func; 0 dont_use).  Time =     0.14 sec
ABC: Memory =   19.85 MB. Time =     0.14 sec
ABC: Warning: Detected 9 multi-output gates (for example, "sky130_fd_sc_hd__fa_1").
ABC: + strash 
ABC: + &get -n 
ABC: + &fraig -x 
ABC: + &put 
ABC: + scorr 
ABC: Warning: The network is combinational (run "fraig" or "fraig_sweep").
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

14.11.2. Re-integrating ABC results.
ABC RESULTS:   sky130_fd_sc_hd__and3b_1 cells:        1
ABC RESULTS:   sky130_fd_sc_hd__nor2_1 cells:        1
ABC RESULTS:   sky130_fd_sc_hd__lpflow_isobufsrc_1 cells:        1
ABC RESULTS:   sky130_fd_sc_hd__xor2_1 cells:        6
ABC RESULTS:   sky130_fd_sc_hd__a221o_1 cells:        6
ABC RESULTS:   sky130_fd_sc_hd__a21o_1 cells:        2
ABC RESULTS:   sky130_fd_sc_hd__a21oi_1 cells:        2
ABC RESULTS:        internal signals:       33
ABC RESULTS:           input signals:       10
ABC RESULTS:          output signals:        8
Removing temp directory.
Removed 0 unused cells and 1420 unused wires.

15. Executing Verilog backend.
Dumping module `\clock_8Hz'.
Dumping module `\clock_div'.
Dumping module `\frequency_divider'.
Dumping module `\keypad_encoder'.
Dumping module `\mode_fsm'.
Dumping module `\oscillator'.
Dumping module `\pwm'.
Dumping module `\sequential_div'.
Dumping module `\sound_series_fsm'.
Dumping module `\synth'.
Dumping module `\waveshaper'.

Warnings: 26 unique messages, 234 total
End of script. Logfile hash: 94906023e9, CPU: user 6.14s system 0.22s, MEM: 239.32 MB peak
Yosys 0.27 (git sha1 5f88c218b, gcc 11.3.0-1ubuntu1~22.04 -fPIC -O3)
Time spent:
   31%     2 calls    2.952 sec abc
   18%    53 calls    1.724 sec opt_expr
   10%    10 calls    0.932 sec proc_mux
    9%    41 calls    0.869 sec opt_merge
    7%     1 calls    0.652 sec techmap
    6%     3 calls    0.612 sec clean
    2%    43 calls    0.249 sec opt_clean
    2%    37 calls    0.248 sec opt_dff
    2%    10 calls    0.218 sec proc_prune
    2%    10 calls    0.211 sec proc_dlatch
    1%    27 calls    0.159 sec opt_muxtree
    1%     1 calls    0.116 sec dfflibmap
    0%     2 calls    0.068 sec write_verilog
    0%    10 calls    0.068 sec proc_dff
    0%     1 calls    0.056 sec synth
    0%    13 calls    0.039 sec read_verilog
    0%    26 calls    0.016 sec opt_reduce
    0%     2 calls    0.015 sec check
    0%    18 calls    0.010 sec opt_share
    0%    15 calls    0.009 sec opt
    0%     1 calls    0.004 sec memory_dff
    0%    10 calls    0.004 sec proc_rom
    0%     1 calls    0.003 sec share
    0%     1 calls    0.002 sec fsm_detect
    0%     1 calls    0.001 sec wreduce
    0%     1 calls    0.001 sec memory_share
    0%     2 calls    0.001 sec hierarchy
    0%     1 calls    0.001 sec opt_mem_priority
    0%    10 calls    0.001 sec proc_arst
    0%     1 calls    0.001 sec alumacc
    0%    10 calls    0.001 sec proc_init
    0%     1 calls    0.001 sec dfflegalize
    0%    20 calls    0.001 sec proc_clean
    0%     1 calls    0.001 sec fsm_extract
    0%     1 calls    0.000 sec peepopt
    0%     1 calls    0.000 sec clean_zerowidth
    0%    10 calls    0.000 sec proc
    0%     1 calls    0.000 sec stat
    0%     1 calls    0.000 sec opt_mem_feedback
    0%     1 calls    0.000 sec memory_map
    0%    10 calls    0.000 sec proc_rmdead
    0%     1 calls    0.000 sec opt_mem
    0%     1 calls    0.000 sec memory_collect
    0%    10 calls    0.000 sec proc_memwr
    0%     1 calls    0.000 sec fsm
    0%     1 calls    0.000 sec opt_mem_widen
    0%     1 calls    0.000 sec memory
    0%     2 calls    0.000 sec fsm_opt
    0%     1 calls    0.000 sec memory_bmux2rom
    0%     1 calls    0.000 sec fsm_recode
    0%     1 calls    0.000 sec fsm_map
    0%     1 calls    0.000 sec fsm_info
