
 /----------------------------------------------------------------------------\
 |                                                                            |
 |  yosys -- Yosys Open SYnthesis Suite                                       |
 |                                                                            |
 |  Copyright (C) 2012 - 2020  Claire Xenia Wolf <claire@yosyshq.com>         |
 |                                                                            |
 |  Permission to use, copy, modify, and/or distribute this software for any  |
 |  purpose with or without fee is hereby granted, provided that the above    |
 |  copyright notice and this permission notice appear in all copies.         |
 |                                                                            |
 |  THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES  |
 |  WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF          |
 |  MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR   |
 |  ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES    |
 |  WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN     |
 |  ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF   |
 |  OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.            |
 |                                                                            |
 \----------------------------------------------------------------------------/

 Yosys 0.27 (git sha1 5f88c218b, gcc 11.3.0-1ubuntu1~22.04 -fPIC -O3)


-- Running command `read_verilog -sv -noblackbox ice40/ice40hx8k.sv source/top.sv source/synth.sv source/clock_8Hz.sv source/clock_div.sv source/frequency_divider.sv source/keypad_encoder.sv source/mode_fsm.sv source/oscillator.sv source/pwm.sv source/sequential_div.sv source/sound_series_fsm.sv source/waveshaper.sv ice40/uart/uart.v ice40/uart/uart_tx.v ice40/uart/uart_rx.v; synth_ice40 -top ice40hx8k -json ./ice40/build/ice40.json' --

1. Executing Verilog-2005 frontend: ice40/ice40hx8k.sv
Parsing SystemVerilog input from `ice40/ice40hx8k.sv' to AST representation.
Generating RTLIL representation for module `\ice40hx8k'.
Generating RTLIL representation for module `\reset_on_start'.
Successfully finished Verilog frontend.

2. Executing Verilog-2005 frontend: source/top.sv
Parsing SystemVerilog input from `source/top.sv' to AST representation.
Generating RTLIL representation for module `\top'.
Successfully finished Verilog frontend.

3. Executing Verilog-2005 frontend: source/synth.sv
Parsing SystemVerilog input from `source/synth.sv' to AST representation.
Generating RTLIL representation for module `\synth_top'.
Successfully finished Verilog frontend.

4. Executing Verilog-2005 frontend: source/clock_8Hz.sv
Parsing SystemVerilog input from `source/clock_8Hz.sv' to AST representation.
Generating RTLIL representation for module `\clock_8Hz'.
Successfully finished Verilog frontend.

5. Executing Verilog-2005 frontend: source/clock_div.sv
Parsing SystemVerilog input from `source/clock_div.sv' to AST representation.
Generating RTLIL representation for module `\clock_div'.
Successfully finished Verilog frontend.

6. Executing Verilog-2005 frontend: source/frequency_divider.sv
Parsing SystemVerilog input from `source/frequency_divider.sv' to AST representation.
Generating RTLIL representation for module `\frequency_divider'.
Successfully finished Verilog frontend.

7. Executing Verilog-2005 frontend: source/keypad_encoder.sv
Parsing SystemVerilog input from `source/keypad_encoder.sv' to AST representation.
Generating RTLIL representation for module `\keypad_encoder'.
Successfully finished Verilog frontend.

8. Executing Verilog-2005 frontend: source/mode_fsm.sv
Parsing SystemVerilog input from `source/mode_fsm.sv' to AST representation.
Generating RTLIL representation for module `\mode_fsm'.
Successfully finished Verilog frontend.

9. Executing Verilog-2005 frontend: source/oscillator.sv
Parsing SystemVerilog input from `source/oscillator.sv' to AST representation.
Generating RTLIL representation for module `\oscillator'.
Successfully finished Verilog frontend.

10. Executing Verilog-2005 frontend: source/pwm.sv
Parsing SystemVerilog input from `source/pwm.sv' to AST representation.
Generating RTLIL representation for module `\pwm'.
Successfully finished Verilog frontend.

11. Executing Verilog-2005 frontend: source/sequential_div.sv
Parsing SystemVerilog input from `source/sequential_div.sv' to AST representation.
Generating RTLIL representation for module `\sequential_div'.
Successfully finished Verilog frontend.

12. Executing Verilog-2005 frontend: source/sound_series_fsm.sv
Parsing SystemVerilog input from `source/sound_series_fsm.sv' to AST representation.
Generating RTLIL representation for module `\sound_series_fsm'.
Successfully finished Verilog frontend.

13. Executing Verilog-2005 frontend: source/waveshaper.sv
Parsing SystemVerilog input from `source/waveshaper.sv' to AST representation.
Generating RTLIL representation for module `\waveshaper'.
Successfully finished Verilog frontend.

14. Executing Verilog-2005 frontend: ice40/uart/uart.v
Parsing SystemVerilog input from `ice40/uart/uart.v' to AST representation.
Generating RTLIL representation for module `\uart'.
Successfully finished Verilog frontend.

15. Executing Verilog-2005 frontend: ice40/uart/uart_tx.v
Parsing SystemVerilog input from `ice40/uart/uart_tx.v' to AST representation.
Generating RTLIL representation for module `\uart_tx'.
Successfully finished Verilog frontend.

16. Executing Verilog-2005 frontend: ice40/uart/uart_rx.v
Parsing SystemVerilog input from `ice40/uart/uart_rx.v' to AST representation.
Generating RTLIL representation for module `\uart_rx'.
Successfully finished Verilog frontend.

17. Executing SYNTH_ICE40 pass.

17.1. Executing Verilog-2005 frontend: /home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v
Parsing Verilog input from `/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v' to AST representation.
Generating RTLIL representation for module `\SB_IO'.
Generating RTLIL representation for module `\SB_GB_IO'.
Generating RTLIL representation for module `\SB_GB'.
Generating RTLIL representation for module `\SB_LUT4'.
Generating RTLIL representation for module `\SB_CARRY'.
Generating RTLIL representation for module `\SB_DFF'.
Generating RTLIL representation for module `\SB_DFFE'.
Generating RTLIL representation for module `\SB_DFFSR'.
Generating RTLIL representation for module `\SB_DFFR'.
Generating RTLIL representation for module `\SB_DFFSS'.
Generating RTLIL representation for module `\SB_DFFS'.
Generating RTLIL representation for module `\SB_DFFESR'.
Generating RTLIL representation for module `\SB_DFFER'.
Generating RTLIL representation for module `\SB_DFFESS'.
Generating RTLIL representation for module `\SB_DFFES'.
Generating RTLIL representation for module `\SB_DFFN'.
Generating RTLIL representation for module `\SB_DFFNE'.
Generating RTLIL representation for module `\SB_DFFNSR'.
Generating RTLIL representation for module `\SB_DFFNR'.
Generating RTLIL representation for module `\SB_DFFNSS'.
Generating RTLIL representation for module `\SB_DFFNS'.
Generating RTLIL representation for module `\SB_DFFNESR'.
Generating RTLIL representation for module `\SB_DFFNER'.
Generating RTLIL representation for module `\SB_DFFNESS'.
Generating RTLIL representation for module `\SB_DFFNES'.
Generating RTLIL representation for module `\SB_RAM40_4K'.
Generating RTLIL representation for module `\SB_RAM40_4KNR'.
Generating RTLIL representation for module `\SB_RAM40_4KNW'.
Generating RTLIL representation for module `\SB_RAM40_4KNRNW'.
Generating RTLIL representation for module `\ICESTORM_LC'.
Generating RTLIL representation for module `\SB_PLL40_CORE'.
Generating RTLIL representation for module `\SB_PLL40_PAD'.
Generating RTLIL representation for module `\SB_PLL40_2_PAD'.
Generating RTLIL representation for module `\SB_PLL40_2F_CORE'.
Generating RTLIL representation for module `\SB_PLL40_2F_PAD'.
Generating RTLIL representation for module `\SB_WARMBOOT'.
Generating RTLIL representation for module `\SB_SPRAM256KA'.
Generating RTLIL representation for module `\SB_HFOSC'.
Generating RTLIL representation for module `\SB_LFOSC'.
Generating RTLIL representation for module `\SB_RGBA_DRV'.
Generating RTLIL representation for module `\SB_LED_DRV_CUR'.
Generating RTLIL representation for module `\SB_RGB_DRV'.
Generating RTLIL representation for module `\SB_I2C'.
Generating RTLIL representation for module `\SB_SPI'.
Generating RTLIL representation for module `\SB_LEDDA_IP'.
Generating RTLIL representation for module `\SB_FILTER_50NS'.
Generating RTLIL representation for module `\SB_IO_I3C'.
Generating RTLIL representation for module `\SB_IO_OD'.
Generating RTLIL representation for module `\SB_MAC16'.
Generating RTLIL representation for module `\ICESTORM_RAM'.
Successfully finished Verilog frontend.

17.2. Executing HIERARCHY pass (managing design hierarchy).

17.2.1. Analyzing design hierarchy..
Top module:  \ice40hx8k
Used module:     \top
Used module:         \synth_top
Used module:             \clock_8Hz
Used module:             \pwm
Used module:             \waveshaper
Used module:             \mode_fsm
Used module:             \sequential_div
Used module:             \clock_div
Used module:             \oscillator
Used module:             \frequency_divider
Used module:             \sound_series_fsm
Used module:             \keypad_encoder
Used module:     \reset_on_start
Used module:     \uart
Used module:         \uart_rx
Used module:         \uart_tx
Parameter \DATA_WIDTH = 8

17.2.2. Executing AST frontend in derive mode using pre-parsed AST for module `\uart_rx'.
Parameter \DATA_WIDTH = 8
Generating RTLIL representation for module `$paramod\uart_rx\DATA_WIDTH=s32'00000000000000000000000000001000'.
Parameter \DATA_WIDTH = 8

17.2.3. Executing AST frontend in derive mode using pre-parsed AST for module `\uart_tx'.
Parameter \DATA_WIDTH = 8
Generating RTLIL representation for module `$paramod\uart_tx\DATA_WIDTH=s32'00000000000000000000000000001000'.

17.2.4. Analyzing design hierarchy..
Top module:  \ice40hx8k
Used module:     \top
Used module:         \synth_top
Used module:             \clock_8Hz
Used module:             \pwm
Used module:             \waveshaper
Used module:             \mode_fsm
Used module:             \sequential_div
Used module:             \clock_div
Used module:             \oscillator
Used module:             \frequency_divider
Used module:             \sound_series_fsm
Used module:             \keypad_encoder
Used module:     \reset_on_start
Used module:     \uart
Used module:         $paramod\uart_rx\DATA_WIDTH=s32'00000000000000000000000000001000
Used module:         $paramod\uart_tx\DATA_WIDTH=s32'00000000000000000000000000001000

17.2.5. Analyzing design hierarchy..
Top module:  \ice40hx8k
Used module:     \top
Used module:         \synth_top
Used module:             \clock_8Hz
Used module:             \pwm
Used module:             \waveshaper
Used module:             \mode_fsm
Used module:             \sequential_div
Used module:             \clock_div
Used module:             \oscillator
Used module:             \frequency_divider
Used module:             \sound_series_fsm
Used module:             \keypad_encoder
Used module:     \reset_on_start
Used module:     \uart
Used module:         $paramod\uart_rx\DATA_WIDTH=s32'00000000000000000000000000001000
Used module:         $paramod\uart_tx\DATA_WIDTH=s32'00000000000000000000000000001000
Removing unused module `\uart_rx'.
Removing unused module `\uart_tx'.
Removed 2 unused modules.
Mapping positional arguments of cell ice40hx8k.top_inst (top).
Mapping positional arguments of cell ice40hx8k.ros (reset_on_start).
Warning: Resizing cell port ice40hx8k.uart_inst.prescale from 32 bits to 16 bits.
Warning: Resizing cell port ice40hx8k.uart_inst.rst from 32 bits to 1 bits.

17.3. Executing PROC pass (convert processes to netlists).

17.3.1. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

17.3.2. Executing PROC_RMDEAD pass (remove dead branches from decision trees).
Marked 1 switch rules as full_case in process $proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:1414$438 in module SB_DFFNES.
Marked 1 switch rules as full_case in process $proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:1353$431 in module SB_DFFNESS.
Marked 1 switch rules as full_case in process $proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:1273$427 in module SB_DFFNER.
Marked 1 switch rules as full_case in process $proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:1212$420 in module SB_DFFNESR.
Marked 1 switch rules as full_case in process $proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:1138$417 in module SB_DFFNS.
Marked 1 switch rules as full_case in process $proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:1088$414 in module SB_DFFNSS.
Marked 1 switch rules as full_case in process $proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:1017$411 in module SB_DFFNR.
Marked 1 switch rules as full_case in process $proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:967$408 in module SB_DFFNSR.
Marked 1 switch rules as full_case in process $proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:803$400 in module SB_DFFES.
Marked 1 switch rules as full_case in process $proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:742$393 in module SB_DFFESS.
Marked 1 switch rules as full_case in process $proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:662$389 in module SB_DFFER.
Marked 1 switch rules as full_case in process $proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:601$382 in module SB_DFFESR.
Marked 1 switch rules as full_case in process $proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:527$379 in module SB_DFFS.
Marked 1 switch rules as full_case in process $proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:477$376 in module SB_DFFSS.
Marked 1 switch rules as full_case in process $proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:406$373 in module SB_DFFR.
Marked 1 switch rules as full_case in process $proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:356$370 in module SB_DFFSR.
Marked 4 switch rules as full_case in process $proc$ice40/uart/uart_tx.v:78$606 in module $paramod\uart_tx\DATA_WIDTH=s32'00000000000000000000000000001000.
Marked 7 switch rules as full_case in process $proc$ice40/uart/uart_rx.v:86$578 in module $paramod\uart_rx\DATA_WIDTH=s32'00000000000000000000000000001000.
Removed 1 dead cases from process $proc$source/waveshaper.sv:0$145 in module waveshaper.
Marked 1 switch rules as full_case in process $proc$source/waveshaper.sv:0$145 in module waveshaper.
Marked 1 switch rules as full_case in process $proc$source/sound_series_fsm.sv:62$142 in module sound_series_fsm.
Marked 1 switch rules as full_case in process $proc$source/sound_series_fsm.sv:55$140 in module sound_series_fsm.
Removed 4 dead cases from process $proc$source/sound_series_fsm.sv:0$127 in module sound_series_fsm.
Marked 4 switch rules as full_case in process $proc$source/sound_series_fsm.sv:0$127 in module sound_series_fsm.
Marked 1 switch rules as full_case in process $proc$source/sequential_div.sv:112$125 in module sequential_div.
Marked 3 switch rules as full_case in process $proc$source/sequential_div.sv:0$120 in module sequential_div.
Marked 1 switch rules as full_case in process $proc$source/sequential_div.sv:77$118 in module sequential_div.
Marked 1 switch rules as full_case in process $proc$source/sequential_div.sv:0$117 in module sequential_div.
Marked 1 switch rules as full_case in process $proc$source/sequential_div.sv:0$116 in module sequential_div.
Marked 1 switch rules as full_case in process $proc$source/sequential_div.sv:48$114 in module sequential_div.
Removed 1 dead cases from process $proc$source/sequential_div.sv:0$109 in module sequential_div.
Marked 4 switch rules as full_case in process $proc$source/sequential_div.sv:0$109 in module sequential_div.
Marked 1 switch rules as full_case in process $proc$source/sequential_div.sv:0$106 in module sequential_div.
Marked 1 switch rules as full_case in process $proc$source/sequential_div.sv:14$104 in module sequential_div.
Marked 3 switch rules as full_case in process $proc$source/pwm.sv:0$99 in module pwm.
Marked 1 switch rules as full_case in process $proc$source/pwm.sv:10$97 in module pwm.
Marked 2 switch rules as full_case in process $proc$source/oscillator.sv:0$93 in module oscillator.
Marked 1 switch rules as full_case in process $proc$source/oscillator.sv:5$91 in module oscillator.
Removed 1 dead cases from process $proc$source/mode_fsm.sv:0$86 in module mode_fsm.
Marked 1 switch rules as full_case in process $proc$source/mode_fsm.sv:0$86 in module mode_fsm.
Marked 1 switch rules as full_case in process $proc$source/mode_fsm.sv:9$84 in module mode_fsm.
Marked 1 switch rules as full_case in process $proc$source/keypad_encoder.sv:55$80 in module keypad_encoder.
Marked 1 switch rules as full_case in process $proc$source/keypad_encoder.sv:42$76 in module keypad_encoder.
Marked 1 switch rules as full_case in process $proc$source/keypad_encoder.sv:0$75 in module keypad_encoder.
Marked 1 switch rules as full_case in process $proc$source/keypad_encoder.sv:11$73 in module keypad_encoder.
Marked 1 switch rules as full_case in process $proc$source/frequency_divider.sv:0$71 in module frequency_divider.
Marked 1 switch rules as full_case in process $proc$source/frequency_divider.sv:0$70 in module frequency_divider.
Marked 1 switch rules as full_case in process $proc$source/frequency_divider.sv:0$69 in module frequency_divider.
Marked 5 switch rules as full_case in process $proc$source/frequency_divider.sv:0$55 in module frequency_divider.
Marked 2 switch rules as full_case in process $proc$source/clock_div.sv:0$51 in module clock_div.
Marked 1 switch rules as full_case in process $proc$source/clock_div.sv:10$49 in module clock_div.
Marked 2 switch rules as full_case in process $proc$source/clock_8Hz.sv:0$45 in module clock_8Hz.
Marked 1 switch rules as full_case in process $proc$source/clock_8Hz.sv:10$43 in module clock_8Hz.
Marked 5 switch rules as full_case in process $proc$ice40/ice40hx8k.sv:131$16 in module reset_on_start.
Marked 1 switch rules as full_case in process $proc$ice40/ice40hx8k.sv:104$9 in module ice40hx8k.
Marked 1 switch rules as full_case in process $proc$ice40/ice40hx8k.sv:98$7 in module ice40hx8k.
Marked 1 switch rules as full_case in process $proc$ice40/ice40hx8k.sv:14$1 in module ice40hx8k.
Removed a total of 7 dead cases.

17.3.3. Executing PROC_PRUNE pass (remove redundant assignments in processes).
Removed 33 redundant assignments.
Promoted 72 assignments to connections.

17.3.4. Executing PROC_INIT pass (extract init attributes).
Found init rule in `\SB_DFFNES.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$441'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFNESS.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$437'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFNER.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$430'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFNESR.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$426'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFNS.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$419'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFNSS.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$416'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFNR.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$413'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFNSR.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$410'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFNE.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$407'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFN.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$405'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFES.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$403'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFESS.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$399'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFER.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$392'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFESR.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$388'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFS.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$381'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFSS.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$378'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFR.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$375'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFSR.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$372'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFE.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$369'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFF.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$367'.
  Set init value: \Q = 1'0
Found init rule in `$paramod\uart_tx\DATA_WIDTH=s32'00000000000000000000000000001000.$proc$ice40/uart/uart_tx.v:71$625'.
  Set init value: \bit_cnt = 4'0000
Found init rule in `$paramod\uart_tx\DATA_WIDTH=s32'00000000000000000000000000001000.$proc$ice40/uart/uart_tx.v:70$624'.
  Set init value: \prescale_reg = 19'0000000000000000000
Found init rule in `$paramod\uart_tx\DATA_WIDTH=s32'00000000000000000000000000001000.$proc$ice40/uart/uart_tx.v:69$623'.
  Set init value: \data_reg = 9'000000000
Found init rule in `$paramod\uart_tx\DATA_WIDTH=s32'00000000000000000000000000001000.$proc$ice40/uart/uart_tx.v:67$622'.
  Set init value: \busy_reg = 1'0
Found init rule in `$paramod\uart_tx\DATA_WIDTH=s32'00000000000000000000000000001000.$proc$ice40/uart/uart_tx.v:65$621'.
  Set init value: \txd_reg = 1'1
Found init rule in `$paramod\uart_tx\DATA_WIDTH=s32'00000000000000000000000000001000.$proc$ice40/uart/uart_tx.v:63$620'.
  Set init value: \input_axis_tready_reg = 1'0
Found init rule in `$paramod\uart_rx\DATA_WIDTH=s32'00000000000000000000000000001000.$proc$ice40/uart/uart_rx.v:77$605'.
  Set init value: \bit_cnt = 4'0000
Found init rule in `$paramod\uart_rx\DATA_WIDTH=s32'00000000000000000000000000001000.$proc$ice40/uart/uart_rx.v:76$604'.
  Set init value: \prescale_reg = 19'0000000000000000000
Found init rule in `$paramod\uart_rx\DATA_WIDTH=s32'00000000000000000000000000001000.$proc$ice40/uart/uart_rx.v:75$603'.
  Set init value: \data_reg = 8'00000000
Found init rule in `$paramod\uart_rx\DATA_WIDTH=s32'00000000000000000000000000001000.$proc$ice40/uart/uart_rx.v:73$602'.
  Set init value: \frame_error_reg = 1'0
Found init rule in `$paramod\uart_rx\DATA_WIDTH=s32'00000000000000000000000000001000.$proc$ice40/uart/uart_rx.v:72$601'.
  Set init value: \overrun_error_reg = 1'0
Found init rule in `$paramod\uart_rx\DATA_WIDTH=s32'00000000000000000000000000001000.$proc$ice40/uart/uart_rx.v:71$600'.
  Set init value: \busy_reg = 1'0
Found init rule in `$paramod\uart_rx\DATA_WIDTH=s32'00000000000000000000000000001000.$proc$ice40/uart/uart_rx.v:69$599'.
  Set init value: \rxd_reg = 1'1
Found init rule in `$paramod\uart_rx\DATA_WIDTH=s32'00000000000000000000000000001000.$proc$ice40/uart/uart_rx.v:67$598'.
  Set init value: \output_axis_tvalid_reg = 1'0
Found init rule in `$paramod\uart_rx\DATA_WIDTH=s32'00000000000000000000000000001000.$proc$ice40/uart/uart_rx.v:66$597'.
  Set init value: \output_axis_tdata_reg = 8'00000000
Found init rule in `\reset_on_start.$proc$ice40/ice40hx8k.sv:129$23'.
  Set init value: \startup = 3'000
Found init rule in `\ice40hx8k.$proc$ice40/ice40hx8k.sv:13$14'.
  Set init value: \hz100 = 1'0
Found init rule in `\ice40hx8k.$proc$ice40/ice40hx8k.sv:12$13'.
  Set init value: \ctr = 21'000000000000000000000

17.3.5. Executing PROC_ARST pass (detect async resets in processes).
Found async reset \S in `\SB_DFFNES.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:1414$438'.
Found async reset \R in `\SB_DFFNER.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:1273$427'.
Found async reset \S in `\SB_DFFNS.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:1138$417'.
Found async reset \R in `\SB_DFFNR.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:1017$411'.
Found async reset \S in `\SB_DFFES.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:803$400'.
Found async reset \R in `\SB_DFFER.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:662$389'.
Found async reset \S in `\SB_DFFS.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:527$379'.
Found async reset \R in `\SB_DFFR.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:406$373'.
Found async reset \n_rst in `\sound_series_fsm.$proc$source/sound_series_fsm.sv:62$142'.
Found async reset \n_rst in `\sound_series_fsm.$proc$source/sound_series_fsm.sv:55$140'.
Found async reset \n_rst in `\sequential_div.$proc$source/sequential_div.sv:112$125'.
Found async reset \n_rst in `\sequential_div.$proc$source/sequential_div.sv:77$118'.
Found async reset \n_rst in `\sequential_div.$proc$source/sequential_div.sv:48$114'.
Found async reset \n_rst in `\sequential_div.$proc$source/sequential_div.sv:14$104'.
Found async reset \n_rst in `\pwm.$proc$source/pwm.sv:10$97'.
Found async reset \n_rst in `\oscillator.$proc$source/oscillator.sv:5$91'.
Found async reset \n_rst in `\mode_fsm.$proc$source/mode_fsm.sv:9$84'.
Found async reset \n_rst in `\keypad_encoder.$proc$source/keypad_encoder.sv:55$80'.
Found async reset \n_rst in `\keypad_encoder.$proc$source/keypad_encoder.sv:42$76'.
Found async reset \n_rst in `\keypad_encoder.$proc$source/keypad_encoder.sv:11$73'.
Found async reset \n_rst in `\clock_div.$proc$source/clock_div.sv:10$49'.
Found async reset \n_rst in `\clock_8Hz.$proc$source/clock_8Hz.sv:10$43'.
Found async reset \manual in `\reset_on_start.$proc$ice40/ice40hx8k.sv:131$16'.
Found async reset \rxready in `\ice40hx8k.$proc$ice40/ice40hx8k.sv:104$9'.
Found async reset \txready in `\ice40hx8k.$proc$ice40/ice40hx8k.sv:98$7'.

17.3.6. Executing PROC_ROM pass (convert switches to ROMs).
Converted 3 switches.
<suppressed ~71 debug messages>

17.3.7. Executing PROC_MUX pass (convert decision trees to multiplexers).
Creating decoders for process `\SB_DFFNES.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$441'.
Creating decoders for process `\SB_DFFNES.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:1414$438'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFNESS.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$437'.
Creating decoders for process `\SB_DFFNESS.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:1353$431'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFNER.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$430'.
Creating decoders for process `\SB_DFFNER.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:1273$427'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFNESR.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$426'.
Creating decoders for process `\SB_DFFNESR.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:1212$420'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFNS.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$419'.
Creating decoders for process `\SB_DFFNS.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:1138$417'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFNSS.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$416'.
Creating decoders for process `\SB_DFFNSS.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:1088$414'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFNR.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$413'.
Creating decoders for process `\SB_DFFNR.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:1017$411'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFNSR.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$410'.
Creating decoders for process `\SB_DFFNSR.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:967$408'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFNE.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$407'.
Creating decoders for process `\SB_DFFNE.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:922$406'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFN.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$405'.
Creating decoders for process `\SB_DFFN.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:882$404'.
Creating decoders for process `\SB_DFFES.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$403'.
Creating decoders for process `\SB_DFFES.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:803$400'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFESS.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$399'.
Creating decoders for process `\SB_DFFESS.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:742$393'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFER.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$392'.
Creating decoders for process `\SB_DFFER.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:662$389'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFESR.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$388'.
Creating decoders for process `\SB_DFFESR.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:601$382'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFS.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$381'.
Creating decoders for process `\SB_DFFS.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:527$379'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFSS.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$378'.
Creating decoders for process `\SB_DFFSS.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:477$376'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFR.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$375'.
Creating decoders for process `\SB_DFFR.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:406$373'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFSR.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$372'.
Creating decoders for process `\SB_DFFSR.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:356$370'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFE.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$369'.
Creating decoders for process `\SB_DFFE.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:311$368'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFF.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$367'.
Creating decoders for process `\SB_DFF.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:271$366'.
Creating decoders for process `$paramod\uart_tx\DATA_WIDTH=s32'00000000000000000000000000001000.$proc$ice40/uart/uart_tx.v:71$625'.
Creating decoders for process `$paramod\uart_tx\DATA_WIDTH=s32'00000000000000000000000000001000.$proc$ice40/uart/uart_tx.v:70$624'.
Creating decoders for process `$paramod\uart_tx\DATA_WIDTH=s32'00000000000000000000000000001000.$proc$ice40/uart/uart_tx.v:69$623'.
Creating decoders for process `$paramod\uart_tx\DATA_WIDTH=s32'00000000000000000000000000001000.$proc$ice40/uart/uart_tx.v:67$622'.
Creating decoders for process `$paramod\uart_tx\DATA_WIDTH=s32'00000000000000000000000000001000.$proc$ice40/uart/uart_tx.v:65$621'.
Creating decoders for process `$paramod\uart_tx\DATA_WIDTH=s32'00000000000000000000000000001000.$proc$ice40/uart/uart_tx.v:63$620'.
Creating decoders for process `$paramod\uart_tx\DATA_WIDTH=s32'00000000000000000000000000001000.$proc$ice40/uart/uart_tx.v:78$606'.
     1/6: $0\data_reg[8:0]
     2/6: $0\prescale_reg[18:0]
     3/6: $0\txd_reg[0:0]
     4/6: $0\busy_reg[0:0]
     5/6: $0\bit_cnt[3:0]
     6/6: $0\input_axis_tready_reg[0:0]
Creating decoders for process `$paramod\uart_rx\DATA_WIDTH=s32'00000000000000000000000000001000.$proc$ice40/uart/uart_rx.v:77$605'.
Creating decoders for process `$paramod\uart_rx\DATA_WIDTH=s32'00000000000000000000000000001000.$proc$ice40/uart/uart_rx.v:76$604'.
Creating decoders for process `$paramod\uart_rx\DATA_WIDTH=s32'00000000000000000000000000001000.$proc$ice40/uart/uart_rx.v:75$603'.
Creating decoders for process `$paramod\uart_rx\DATA_WIDTH=s32'00000000000000000000000000001000.$proc$ice40/uart/uart_rx.v:73$602'.
Creating decoders for process `$paramod\uart_rx\DATA_WIDTH=s32'00000000000000000000000000001000.$proc$ice40/uart/uart_rx.v:72$601'.
Creating decoders for process `$paramod\uart_rx\DATA_WIDTH=s32'00000000000000000000000000001000.$proc$ice40/uart/uart_rx.v:71$600'.
Creating decoders for process `$paramod\uart_rx\DATA_WIDTH=s32'00000000000000000000000000001000.$proc$ice40/uart/uart_rx.v:69$599'.
Creating decoders for process `$paramod\uart_rx\DATA_WIDTH=s32'00000000000000000000000000001000.$proc$ice40/uart/uart_rx.v:67$598'.
Creating decoders for process `$paramod\uart_rx\DATA_WIDTH=s32'00000000000000000000000000001000.$proc$ice40/uart/uart_rx.v:66$597'.
Creating decoders for process `$paramod\uart_rx\DATA_WIDTH=s32'00000000000000000000000000001000.$proc$ice40/uart/uart_rx.v:86$578'.
     1/9: $0\frame_error_reg[0:0]
     2/9: $0\overrun_error_reg[0:0]
     3/9: $0\rxd_reg[0:0]
     4/9: $0\output_axis_tvalid_reg[0:0]
     5/9: $0\output_axis_tdata_reg[7:0]
     6/9: $0\bit_cnt[3:0]
     7/9: $0\prescale_reg[18:0]
     8/9: $0\data_reg[7:0]
     9/9: $0\busy_reg[0:0]
Creating decoders for process `\waveshaper.$proc$source/waveshaper.sv:0$145'.
     1/1: $1\sample[7:0]
Creating decoders for process `\sound_series_fsm.$proc$source/sound_series_fsm.sv:62$142'.
     1/1: $0\sound[0:0]
Creating decoders for process `\sound_series_fsm.$proc$source/sound_series_fsm.sv:55$140'.
     1/1: $0\note[3:0]
Creating decoders for process `\sound_series_fsm.$proc$source/sound_series_fsm.sv:0$127'.
     1/4: $1\note_out[3:0]
     2/4: $1\next_note[3:0]
     3/4: $1\s1_on[0:0]
     4/4: $1\next_sound[0:0]
Creating decoders for process `\sequential_div.$proc$source/sequential_div.sv:112$125'.
     1/3: $0\D[15:0]
     2/3: $0\Q[7:0]
     3/3: $0\R[23:0]
Creating decoders for process `\sequential_div.$proc$source/sequential_div.sv:0$120'.
     1/7: $3\next_q[7:0]
     2/7: $3\next_r[23:0]
     3/7: $2\next_q[7:0]
     4/7: $2\next_r[23:0]
     5/7: $1\next_d[15:0]
     6/7: $1\next_q[7:0]
     7/7: $1\next_r[23:0]
Creating decoders for process `\sequential_div.$proc$source/sequential_div.sv:77$118'.
     1/2: $0\q_out[7:0]
     2/2: $0\dividend[15:0]
Creating decoders for process `\sequential_div.$proc$source/sequential_div.sv:0$117'.
     1/1: $1\next_q_out[7:0]
Creating decoders for process `\sequential_div.$proc$source/sequential_div.sv:0$116'.
     1/1: $1\D_count[15:0]
Creating decoders for process `\sequential_div.$proc$source/sequential_div.sv:48$114'.
     1/1: $0\state[1:0]
Creating decoders for process `\sequential_div.$proc$source/sequential_div.sv:0$109'.
     1/4: $4\next_state[1:0]
     2/4: $3\next_state[1:0]
     3/4: $2\next_state[1:0]
     4/4: $1\next_state[1:0]
Creating decoders for process `\sequential_div.$proc$source/sequential_div.sv:0$106'.
     1/1: $1\next_count[2:0]
Creating decoders for process `\sequential_div.$proc$source/sequential_div.sv:14$104'.
     1/1: $0\count_div[2:0]
Creating decoders for process `\pwm.$proc$source/pwm.sv:0$99'.
     1/4: $2\pwm[0:0]
     2/4: $2\next_count[7:0]
     3/4: $1\pwm[0:0]
     4/4: $1\next_count[7:0]
Creating decoders for process `\pwm.$proc$source/pwm.sv:10$97'.
     1/2: $0\count[7:0]
     2/2: $0\pwm_o[0:0]
Creating decoders for process `\oscillator.$proc$source/oscillator.sv:0$93'.
     1/2: $2\next_count[15:0]
     2/2: $1\next_count[15:0]
Creating decoders for process `\oscillator.$proc$source/oscillator.sv:5$91'.
     1/1: $0\count[15:0]
Creating decoders for process `\mode_fsm.$proc$source/mode_fsm.sv:0$86'.
     1/1: $1\next_mode[1:0]
Creating decoders for process `\mode_fsm.$proc$source/mode_fsm.sv:9$84'.
     1/1: $0\mode[1:0]
Creating decoders for process `\keypad_encoder.$proc$source/keypad_encoder.sv:55$80'.
     1/1: $0\last_sk[0:0]
Creating decoders for process `\keypad_encoder.$proc$source/keypad_encoder.sv:42$76'.
     1/1: $0\last_mk[0:0]
Creating decoders for process `\keypad_encoder.$proc$source/keypad_encoder.sv:0$75'.
     1/1: $1\keycode[3:0]
Creating decoders for process `\keypad_encoder.$proc$source/keypad_encoder.sv:11$73'.
     1/2: $0\sync_out[14:0]
     2/2: $0\q[14:0]
Creating decoders for process `\frequency_divider.$proc$source/frequency_divider.sv:0$71'.
     1/1: $1\divider[15:0]
Creating decoders for process `\frequency_divider.$proc$source/frequency_divider.sv:0$70'.
     1/1: $1\LUT_12MHz[15:0]
Creating decoders for process `\frequency_divider.$proc$source/frequency_divider.sv:0$69'.
     1/1: $1\LUT_10MHz[15:0]
Creating decoders for process `\frequency_divider.$proc$source/frequency_divider.sv:0$55'.
     1/5: $5\intermediate[3:0]
     2/5: $4\intermediate[3:0]
     3/5: $3\intermediate[3:0]
     4/5: $2\intermediate[3:0]
     5/5: $1\intermediate[3:0]
Creating decoders for process `\clock_div.$proc$source/clock_div.sv:0$51'.
     1/4: $2\flag[0:0]
     2/4: $2\next_count[7:0]
     3/4: $1\next_count[7:0]
     4/4: $1\flag[0:0]
Creating decoders for process `\clock_div.$proc$source/clock_div.sv:10$49'.
     1/1: $0\count[7:0]
Creating decoders for process `\clock_8Hz.$proc$source/clock_8Hz.sv:0$45'.
     1/4: $2\flag[0:0]
     2/4: $2\next_count[20:0]
     3/4: $1\next_count[20:0]
     4/4: $1\flag[0:0]
Creating decoders for process `\clock_8Hz.$proc$source/clock_8Hz.sv:10$43'.
     1/1: $0\count[20:0]
Creating decoders for process `\top.$proc$source/top.sv:0$29'.
Creating decoders for process `\reset_on_start.$proc$ice40/ice40hx8k.sv:129$23'.
Creating decoders for process `\reset_on_start.$proc$ice40/ice40hx8k.sv:131$16'.
     1/1: $0\startup[2:0]
Creating decoders for process `\ice40hx8k.$proc$ice40/ice40hx8k.sv:13$14'.
Creating decoders for process `\ice40hx8k.$proc$ice40/ice40hx8k.sv:12$13'.
Creating decoders for process `\ice40hx8k.$proc$ice40/ice40hx8k.sv:104$9'.
     1/1: $0\recv[0:0]
Creating decoders for process `\ice40hx8k.$proc$ice40/ice40hx8k.sv:98$7'.
     1/1: $0\xmit[0:0]
Creating decoders for process `\ice40hx8k.$proc$ice40/ice40hx8k.sv:14$1'.
     1/2: $0\ctr[20:0]
     2/2: $0\hz100[0:0]

17.3.8. Executing PROC_DLATCH pass (convert process syncs to latches).
No latch inferred for signal `\waveshaper.\sample' from process `\waveshaper.$proc$source/waveshaper.sv:0$145'.
No latch inferred for signal `\sound_series_fsm.\note_out' from process `\sound_series_fsm.$proc$source/sound_series_fsm.sv:0$127'.
No latch inferred for signal `\sound_series_fsm.\next_note' from process `\sound_series_fsm.$proc$source/sound_series_fsm.sv:0$127'.
No latch inferred for signal `\sound_series_fsm.\next_sound' from process `\sound_series_fsm.$proc$source/sound_series_fsm.sv:0$127'.
No latch inferred for signal `\sound_series_fsm.\s1_on' from process `\sound_series_fsm.$proc$source/sound_series_fsm.sv:0$127'.
No latch inferred for signal `\sequential_div.\next_r' from process `\sequential_div.$proc$source/sequential_div.sv:0$120'.
No latch inferred for signal `\sequential_div.\next_q' from process `\sequential_div.$proc$source/sequential_div.sv:0$120'.
No latch inferred for signal `\sequential_div.\next_d' from process `\sequential_div.$proc$source/sequential_div.sv:0$120'.
No latch inferred for signal `\sequential_div.\next_q_out' from process `\sequential_div.$proc$source/sequential_div.sv:0$117'.
No latch inferred for signal `\sequential_div.\D_count' from process `\sequential_div.$proc$source/sequential_div.sv:0$116'.
No latch inferred for signal `\sequential_div.\div' from process `\sequential_div.$proc$source/sequential_div.sv:0$109'.
No latch inferred for signal `\sequential_div.\done' from process `\sequential_div.$proc$source/sequential_div.sv:0$109'.
No latch inferred for signal `\sequential_div.\load' from process `\sequential_div.$proc$source/sequential_div.sv:0$109'.
No latch inferred for signal `\sequential_div.\next_state' from process `\sequential_div.$proc$source/sequential_div.sv:0$109'.
No latch inferred for signal `\sequential_div.\next_count' from process `\sequential_div.$proc$source/sequential_div.sv:0$106'.
No latch inferred for signal `\pwm.\pwm' from process `\pwm.$proc$source/pwm.sv:0$99'.
No latch inferred for signal `\pwm.\next_count' from process `\pwm.$proc$source/pwm.sv:0$99'.
No latch inferred for signal `\oscillator.\next_count' from process `\oscillator.$proc$source/oscillator.sv:0$93'.
No latch inferred for signal `\mode_fsm.\next_mode' from process `\mode_fsm.$proc$source/mode_fsm.sv:0$86'.
No latch inferred for signal `\keypad_encoder.\keycode' from process `\keypad_encoder.$proc$source/keypad_encoder.sv:0$75'.
No latch inferred for signal `\frequency_divider.\divider' from process `\frequency_divider.$proc$source/frequency_divider.sv:0$71'.
No latch inferred for signal `\frequency_divider.\LUT_12MHz' from process `\frequency_divider.$proc$source/frequency_divider.sv:0$70'.
No latch inferred for signal `\frequency_divider.\LUT_10MHz' from process `\frequency_divider.$proc$source/frequency_divider.sv:0$69'.
No latch inferred for signal `\frequency_divider.\intermediate' from process `\frequency_divider.$proc$source/frequency_divider.sv:0$55'.
No latch inferred for signal `\clock_div.\flag' from process `\clock_div.$proc$source/clock_div.sv:0$51'.
No latch inferred for signal `\clock_div.\next_count' from process `\clock_div.$proc$source/clock_div.sv:0$51'.
No latch inferred for signal `\clock_8Hz.\flag' from process `\clock_8Hz.$proc$source/clock_8Hz.sv:0$45'.
No latch inferred for signal `\clock_8Hz.\next_count' from process `\clock_8Hz.$proc$source/clock_8Hz.sv:0$45'.
No latch inferred for signal `\top.\note' from process `\top.$proc$source/top.sv:0$29'.
No latch inferred for signal `\top.$bitselwrite$mask$source/top.sv:31$24' from process `\top.$proc$source/top.sv:0$29'.
No latch inferred for signal `\top.$bitselwrite$data$source/top.sv:31$25' from process `\top.$proc$source/top.sv:0$29'.
No latch inferred for signal `\top.$bitselwrite$sel$source/top.sv:31$26' from process `\top.$proc$source/top.sv:0$29'.

17.3.9. Executing PROC_DFF pass (convert process syncs to FFs).
Creating register for signal `\SB_DFFNES.\Q' using process `\SB_DFFNES.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:1414$438'.
  created $adff cell `$procdff$1151' with negative edge clock and positive level reset.
Creating register for signal `\SB_DFFNESS.\Q' using process `\SB_DFFNESS.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:1353$431'.
  created $dff cell `$procdff$1152' with negative edge clock.
Creating register for signal `\SB_DFFNER.\Q' using process `\SB_DFFNER.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:1273$427'.
  created $adff cell `$procdff$1153' with negative edge clock and positive level reset.
Creating register for signal `\SB_DFFNESR.\Q' using process `\SB_DFFNESR.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:1212$420'.
  created $dff cell `$procdff$1154' with negative edge clock.
Creating register for signal `\SB_DFFNS.\Q' using process `\SB_DFFNS.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:1138$417'.
  created $adff cell `$procdff$1155' with negative edge clock and positive level reset.
Creating register for signal `\SB_DFFNSS.\Q' using process `\SB_DFFNSS.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:1088$414'.
  created $dff cell `$procdff$1156' with negative edge clock.
Creating register for signal `\SB_DFFNR.\Q' using process `\SB_DFFNR.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:1017$411'.
  created $adff cell `$procdff$1157' with negative edge clock and positive level reset.
Creating register for signal `\SB_DFFNSR.\Q' using process `\SB_DFFNSR.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:967$408'.
  created $dff cell `$procdff$1158' with negative edge clock.
Creating register for signal `\SB_DFFNE.\Q' using process `\SB_DFFNE.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:922$406'.
  created $dff cell `$procdff$1159' with negative edge clock.
Creating register for signal `\SB_DFFN.\Q' using process `\SB_DFFN.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:882$404'.
  created $dff cell `$procdff$1160' with negative edge clock.
Creating register for signal `\SB_DFFES.\Q' using process `\SB_DFFES.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:803$400'.
  created $adff cell `$procdff$1161' with positive edge clock and positive level reset.
Creating register for signal `\SB_DFFESS.\Q' using process `\SB_DFFESS.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:742$393'.
  created $dff cell `$procdff$1162' with positive edge clock.
Creating register for signal `\SB_DFFER.\Q' using process `\SB_DFFER.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:662$389'.
  created $adff cell `$procdff$1163' with positive edge clock and positive level reset.
Creating register for signal `\SB_DFFESR.\Q' using process `\SB_DFFESR.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:601$382'.
  created $dff cell `$procdff$1164' with positive edge clock.
Creating register for signal `\SB_DFFS.\Q' using process `\SB_DFFS.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:527$379'.
  created $adff cell `$procdff$1165' with positive edge clock and positive level reset.
Creating register for signal `\SB_DFFSS.\Q' using process `\SB_DFFSS.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:477$376'.
  created $dff cell `$procdff$1166' with positive edge clock.
Creating register for signal `\SB_DFFR.\Q' using process `\SB_DFFR.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:406$373'.
  created $adff cell `$procdff$1167' with positive edge clock and positive level reset.
Creating register for signal `\SB_DFFSR.\Q' using process `\SB_DFFSR.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:356$370'.
  created $dff cell `$procdff$1168' with positive edge clock.
Creating register for signal `\SB_DFFE.\Q' using process `\SB_DFFE.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:311$368'.
  created $dff cell `$procdff$1169' with positive edge clock.
Creating register for signal `\SB_DFF.\Q' using process `\SB_DFF.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:271$366'.
  created $dff cell `$procdff$1170' with positive edge clock.
Creating register for signal `$paramod\uart_tx\DATA_WIDTH=s32'00000000000000000000000000001000.\input_axis_tready_reg' using process `$paramod\uart_tx\DATA_WIDTH=s32'00000000000000000000000000001000.$proc$ice40/uart/uart_tx.v:78$606'.
  created $dff cell `$procdff$1171' with positive edge clock.
Creating register for signal `$paramod\uart_tx\DATA_WIDTH=s32'00000000000000000000000000001000.\txd_reg' using process `$paramod\uart_tx\DATA_WIDTH=s32'00000000000000000000000000001000.$proc$ice40/uart/uart_tx.v:78$606'.
  created $dff cell `$procdff$1172' with positive edge clock.
Creating register for signal `$paramod\uart_tx\DATA_WIDTH=s32'00000000000000000000000000001000.\busy_reg' using process `$paramod\uart_tx\DATA_WIDTH=s32'00000000000000000000000000001000.$proc$ice40/uart/uart_tx.v:78$606'.
  created $dff cell `$procdff$1173' with positive edge clock.
Creating register for signal `$paramod\uart_tx\DATA_WIDTH=s32'00000000000000000000000000001000.\data_reg' using process `$paramod\uart_tx\DATA_WIDTH=s32'00000000000000000000000000001000.$proc$ice40/uart/uart_tx.v:78$606'.
  created $dff cell `$procdff$1174' with positive edge clock.
Creating register for signal `$paramod\uart_tx\DATA_WIDTH=s32'00000000000000000000000000001000.\prescale_reg' using process `$paramod\uart_tx\DATA_WIDTH=s32'00000000000000000000000000001000.$proc$ice40/uart/uart_tx.v:78$606'.
  created $dff cell `$procdff$1175' with positive edge clock.
Creating register for signal `$paramod\uart_tx\DATA_WIDTH=s32'00000000000000000000000000001000.\bit_cnt' using process `$paramod\uart_tx\DATA_WIDTH=s32'00000000000000000000000000001000.$proc$ice40/uart/uart_tx.v:78$606'.
  created $dff cell `$procdff$1176' with positive edge clock.
Creating register for signal `$paramod\uart_rx\DATA_WIDTH=s32'00000000000000000000000000001000.\busy_reg' using process `$paramod\uart_rx\DATA_WIDTH=s32'00000000000000000000000000001000.$proc$ice40/uart/uart_rx.v:86$578'.
  created $dff cell `$procdff$1177' with positive edge clock.
Creating register for signal `$paramod\uart_rx\DATA_WIDTH=s32'00000000000000000000000000001000.\data_reg' using process `$paramod\uart_rx\DATA_WIDTH=s32'00000000000000000000000000001000.$proc$ice40/uart/uart_rx.v:86$578'.
  created $dff cell `$procdff$1178' with positive edge clock.
Creating register for signal `$paramod\uart_rx\DATA_WIDTH=s32'00000000000000000000000000001000.\prescale_reg' using process `$paramod\uart_rx\DATA_WIDTH=s32'00000000000000000000000000001000.$proc$ice40/uart/uart_rx.v:86$578'.
  created $dff cell `$procdff$1179' with positive edge clock.
Creating register for signal `$paramod\uart_rx\DATA_WIDTH=s32'00000000000000000000000000001000.\bit_cnt' using process `$paramod\uart_rx\DATA_WIDTH=s32'00000000000000000000000000001000.$proc$ice40/uart/uart_rx.v:86$578'.
  created $dff cell `$procdff$1180' with positive edge clock.
Creating register for signal `$paramod\uart_rx\DATA_WIDTH=s32'00000000000000000000000000001000.\output_axis_tdata_reg' using process `$paramod\uart_rx\DATA_WIDTH=s32'00000000000000000000000000001000.$proc$ice40/uart/uart_rx.v:86$578'.
  created $dff cell `$procdff$1181' with positive edge clock.
Creating register for signal `$paramod\uart_rx\DATA_WIDTH=s32'00000000000000000000000000001000.\output_axis_tvalid_reg' using process `$paramod\uart_rx\DATA_WIDTH=s32'00000000000000000000000000001000.$proc$ice40/uart/uart_rx.v:86$578'.
  created $dff cell `$procdff$1182' with positive edge clock.
Creating register for signal `$paramod\uart_rx\DATA_WIDTH=s32'00000000000000000000000000001000.\rxd_reg' using process `$paramod\uart_rx\DATA_WIDTH=s32'00000000000000000000000000001000.$proc$ice40/uart/uart_rx.v:86$578'.
  created $dff cell `$procdff$1183' with positive edge clock.
Creating register for signal `$paramod\uart_rx\DATA_WIDTH=s32'00000000000000000000000000001000.\overrun_error_reg' using process `$paramod\uart_rx\DATA_WIDTH=s32'00000000000000000000000000001000.$proc$ice40/uart/uart_rx.v:86$578'.
  created $dff cell `$procdff$1184' with positive edge clock.
Creating register for signal `$paramod\uart_rx\DATA_WIDTH=s32'00000000000000000000000000001000.\frame_error_reg' using process `$paramod\uart_rx\DATA_WIDTH=s32'00000000000000000000000000001000.$proc$ice40/uart/uart_rx.v:86$578'.
  created $dff cell `$procdff$1185' with positive edge clock.
Creating register for signal `\sound_series_fsm.\sound' using process `\sound_series_fsm.$proc$source/sound_series_fsm.sv:62$142'.
  created $adff cell `$procdff$1186' with positive edge clock and negative level reset.
Creating register for signal `\sound_series_fsm.\note' using process `\sound_series_fsm.$proc$source/sound_series_fsm.sv:55$140'.
  created $adff cell `$procdff$1187' with positive edge clock and negative level reset.
Creating register for signal `\sequential_div.\D' using process `\sequential_div.$proc$source/sequential_div.sv:112$125'.
  created $adff cell `$procdff$1188' with positive edge clock and negative level reset.
Creating register for signal `\sequential_div.\Q' using process `\sequential_div.$proc$source/sequential_div.sv:112$125'.
  created $adff cell `$procdff$1189' with positive edge clock and negative level reset.
Creating register for signal `\sequential_div.\R' using process `\sequential_div.$proc$source/sequential_div.sv:112$125'.
  created $adff cell `$procdff$1190' with positive edge clock and negative level reset.
Creating register for signal `\sequential_div.\q_out' using process `\sequential_div.$proc$source/sequential_div.sv:77$118'.
  created $adff cell `$procdff$1191' with positive edge clock and negative level reset.
Creating register for signal `\sequential_div.\dividend' using process `\sequential_div.$proc$source/sequential_div.sv:77$118'.
  created $adff cell `$procdff$1192' with positive edge clock and negative level reset.
Creating register for signal `\sequential_div.\state' using process `\sequential_div.$proc$source/sequential_div.sv:48$114'.
  created $adff cell `$procdff$1193' with positive edge clock and negative level reset.
Creating register for signal `\sequential_div.\count_div' using process `\sequential_div.$proc$source/sequential_div.sv:14$104'.
  created $adff cell `$procdff$1194' with positive edge clock and negative level reset.
Creating register for signal `\pwm.\pwm_o' using process `\pwm.$proc$source/pwm.sv:10$97'.
  created $adff cell `$procdff$1195' with positive edge clock and negative level reset.
Creating register for signal `\pwm.\count' using process `\pwm.$proc$source/pwm.sv:10$97'.
  created $adff cell `$procdff$1196' with positive edge clock and negative level reset.
Creating register for signal `\oscillator.\count' using process `\oscillator.$proc$source/oscillator.sv:5$91'.
  created $adff cell `$procdff$1197' with positive edge clock and negative level reset.
Creating register for signal `\mode_fsm.\mode' using process `\mode_fsm.$proc$source/mode_fsm.sv:9$84'.
  created $adff cell `$procdff$1198' with positive edge clock and negative level reset.
Creating register for signal `\keypad_encoder.\last_sk' using process `\keypad_encoder.$proc$source/keypad_encoder.sv:55$80'.
  created $adff cell `$procdff$1199' with positive edge clock and negative level reset.
Creating register for signal `\keypad_encoder.\last_mk' using process `\keypad_encoder.$proc$source/keypad_encoder.sv:42$76'.
  created $adff cell `$procdff$1200' with positive edge clock and negative level reset.
Creating register for signal `\keypad_encoder.\q' using process `\keypad_encoder.$proc$source/keypad_encoder.sv:11$73'.
  created $adff cell `$procdff$1201' with positive edge clock and negative level reset.
Creating register for signal `\keypad_encoder.\sync_out' using process `\keypad_encoder.$proc$source/keypad_encoder.sv:11$73'.
  created $adff cell `$procdff$1202' with positive edge clock and negative level reset.
Creating register for signal `\clock_div.\count' using process `\clock_div.$proc$source/clock_div.sv:10$49'.
  created $adff cell `$procdff$1203' with positive edge clock and negative level reset.
Creating register for signal `\clock_8Hz.\count' using process `\clock_8Hz.$proc$source/clock_8Hz.sv:10$43'.
  created $adff cell `$procdff$1204' with positive edge clock and negative level reset.
Creating register for signal `\reset_on_start.\startup' using process `\reset_on_start.$proc$ice40/ice40hx8k.sv:131$16'.
  created $adff cell `$procdff$1205' with positive edge clock and positive level reset.
Creating register for signal `\ice40hx8k.\recv' using process `\ice40hx8k.$proc$ice40/ice40hx8k.sv:104$9'.
  created $adff cell `$procdff$1206' with positive edge clock and negative level reset.
Creating register for signal `\ice40hx8k.\xmit' using process `\ice40hx8k.$proc$ice40/ice40hx8k.sv:98$7'.
  created $adff cell `$procdff$1207' with positive edge clock and negative level reset.
Creating register for signal `\ice40hx8k.\ctr' using process `\ice40hx8k.$proc$ice40/ice40hx8k.sv:14$1'.
  created $dff cell `$procdff$1208' with positive edge clock.
Creating register for signal `\ice40hx8k.\hz100' using process `\ice40hx8k.$proc$ice40/ice40hx8k.sv:14$1'.
  created $dff cell `$procdff$1209' with positive edge clock.

17.3.10. Executing PROC_MEMWR pass (convert process memory writes to cells).

17.3.11. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Removing empty process `SB_DFFNES.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$441'.
Found and cleaned up 1 empty switch in `\SB_DFFNES.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:1414$438'.
Removing empty process `SB_DFFNES.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:1414$438'.
Removing empty process `SB_DFFNESS.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$437'.
Found and cleaned up 2 empty switches in `\SB_DFFNESS.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:1353$431'.
Removing empty process `SB_DFFNESS.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:1353$431'.
Removing empty process `SB_DFFNER.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$430'.
Found and cleaned up 1 empty switch in `\SB_DFFNER.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:1273$427'.
Removing empty process `SB_DFFNER.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:1273$427'.
Removing empty process `SB_DFFNESR.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$426'.
Found and cleaned up 2 empty switches in `\SB_DFFNESR.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:1212$420'.
Removing empty process `SB_DFFNESR.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:1212$420'.
Removing empty process `SB_DFFNS.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$419'.
Removing empty process `SB_DFFNS.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:1138$417'.
Removing empty process `SB_DFFNSS.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$416'.
Found and cleaned up 1 empty switch in `\SB_DFFNSS.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:1088$414'.
Removing empty process `SB_DFFNSS.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:1088$414'.
Removing empty process `SB_DFFNR.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$413'.
Removing empty process `SB_DFFNR.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:1017$411'.
Removing empty process `SB_DFFNSR.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$410'.
Found and cleaned up 1 empty switch in `\SB_DFFNSR.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:967$408'.
Removing empty process `SB_DFFNSR.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:967$408'.
Removing empty process `SB_DFFNE.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$407'.
Found and cleaned up 1 empty switch in `\SB_DFFNE.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:922$406'.
Removing empty process `SB_DFFNE.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:922$406'.
Removing empty process `SB_DFFN.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$405'.
Removing empty process `SB_DFFN.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:882$404'.
Removing empty process `SB_DFFES.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$403'.
Found and cleaned up 1 empty switch in `\SB_DFFES.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:803$400'.
Removing empty process `SB_DFFES.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:803$400'.
Removing empty process `SB_DFFESS.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$399'.
Found and cleaned up 2 empty switches in `\SB_DFFESS.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:742$393'.
Removing empty process `SB_DFFESS.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:742$393'.
Removing empty process `SB_DFFER.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$392'.
Found and cleaned up 1 empty switch in `\SB_DFFER.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:662$389'.
Removing empty process `SB_DFFER.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:662$389'.
Removing empty process `SB_DFFESR.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$388'.
Found and cleaned up 2 empty switches in `\SB_DFFESR.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:601$382'.
Removing empty process `SB_DFFESR.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:601$382'.
Removing empty process `SB_DFFS.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$381'.
Removing empty process `SB_DFFS.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:527$379'.
Removing empty process `SB_DFFSS.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$378'.
Found and cleaned up 1 empty switch in `\SB_DFFSS.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:477$376'.
Removing empty process `SB_DFFSS.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:477$376'.
Removing empty process `SB_DFFR.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$375'.
Removing empty process `SB_DFFR.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:406$373'.
Removing empty process `SB_DFFSR.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$372'.
Found and cleaned up 1 empty switch in `\SB_DFFSR.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:356$370'.
Removing empty process `SB_DFFSR.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:356$370'.
Removing empty process `SB_DFFE.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$369'.
Found and cleaned up 1 empty switch in `\SB_DFFE.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:311$368'.
Removing empty process `SB_DFFE.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:311$368'.
Removing empty process `SB_DFF.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$367'.
Removing empty process `SB_DFF.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:271$366'.
Removing empty process `$paramod\uart_tx\DATA_WIDTH=s32'00000000000000000000000000001000.$proc$ice40/uart/uart_tx.v:71$625'.
Removing empty process `$paramod\uart_tx\DATA_WIDTH=s32'00000000000000000000000000001000.$proc$ice40/uart/uart_tx.v:70$624'.
Removing empty process `$paramod\uart_tx\DATA_WIDTH=s32'00000000000000000000000000001000.$proc$ice40/uart/uart_tx.v:69$623'.
Removing empty process `$paramod\uart_tx\DATA_WIDTH=s32'00000000000000000000000000001000.$proc$ice40/uart/uart_tx.v:67$622'.
Removing empty process `$paramod\uart_tx\DATA_WIDTH=s32'00000000000000000000000000001000.$proc$ice40/uart/uart_tx.v:65$621'.
Removing empty process `$paramod\uart_tx\DATA_WIDTH=s32'00000000000000000000000000001000.$proc$ice40/uart/uart_tx.v:63$620'.
Found and cleaned up 6 empty switches in `$paramod\uart_tx\DATA_WIDTH=s32'00000000000000000000000000001000.$proc$ice40/uart/uart_tx.v:78$606'.
Removing empty process `$paramod\uart_tx\DATA_WIDTH=s32'00000000000000000000000000001000.$proc$ice40/uart/uart_tx.v:78$606'.
Removing empty process `$paramod\uart_rx\DATA_WIDTH=s32'00000000000000000000000000001000.$proc$ice40/uart/uart_rx.v:77$605'.
Removing empty process `$paramod\uart_rx\DATA_WIDTH=s32'00000000000000000000000000001000.$proc$ice40/uart/uart_rx.v:76$604'.
Removing empty process `$paramod\uart_rx\DATA_WIDTH=s32'00000000000000000000000000001000.$proc$ice40/uart/uart_rx.v:75$603'.
Removing empty process `$paramod\uart_rx\DATA_WIDTH=s32'00000000000000000000000000001000.$proc$ice40/uart/uart_rx.v:73$602'.
Removing empty process `$paramod\uart_rx\DATA_WIDTH=s32'00000000000000000000000000001000.$proc$ice40/uart/uart_rx.v:72$601'.
Removing empty process `$paramod\uart_rx\DATA_WIDTH=s32'00000000000000000000000000001000.$proc$ice40/uart/uart_rx.v:71$600'.
Removing empty process `$paramod\uart_rx\DATA_WIDTH=s32'00000000000000000000000000001000.$proc$ice40/uart/uart_rx.v:69$599'.
Removing empty process `$paramod\uart_rx\DATA_WIDTH=s32'00000000000000000000000000001000.$proc$ice40/uart/uart_rx.v:67$598'.
Removing empty process `$paramod\uart_rx\DATA_WIDTH=s32'00000000000000000000000000001000.$proc$ice40/uart/uart_rx.v:66$597'.
Found and cleaned up 10 empty switches in `$paramod\uart_rx\DATA_WIDTH=s32'00000000000000000000000000001000.$proc$ice40/uart/uart_rx.v:86$578'.
Removing empty process `$paramod\uart_rx\DATA_WIDTH=s32'00000000000000000000000000001000.$proc$ice40/uart/uart_rx.v:86$578'.
Found and cleaned up 1 empty switch in `\waveshaper.$proc$source/waveshaper.sv:0$145'.
Removing empty process `waveshaper.$proc$source/waveshaper.sv:0$145'.
Removing empty process `sound_series_fsm.$proc$source/sound_series_fsm.sv:62$142'.
Removing empty process `sound_series_fsm.$proc$source/sound_series_fsm.sv:55$140'.
Found and cleaned up 4 empty switches in `\sound_series_fsm.$proc$source/sound_series_fsm.sv:0$127'.
Removing empty process `sound_series_fsm.$proc$source/sound_series_fsm.sv:0$127'.
Removing empty process `sequential_div.$proc$source/sequential_div.sv:112$125'.
Found and cleaned up 3 empty switches in `\sequential_div.$proc$source/sequential_div.sv:0$120'.
Removing empty process `sequential_div.$proc$source/sequential_div.sv:0$120'.
Removing empty process `sequential_div.$proc$source/sequential_div.sv:77$118'.
Found and cleaned up 1 empty switch in `\sequential_div.$proc$source/sequential_div.sv:0$117'.
Removing empty process `sequential_div.$proc$source/sequential_div.sv:0$117'.
Found and cleaned up 1 empty switch in `\sequential_div.$proc$source/sequential_div.sv:0$116'.
Removing empty process `sequential_div.$proc$source/sequential_div.sv:0$116'.
Removing empty process `sequential_div.$proc$source/sequential_div.sv:48$114'.
Found and cleaned up 4 empty switches in `\sequential_div.$proc$source/sequential_div.sv:0$109'.
Removing empty process `sequential_div.$proc$source/sequential_div.sv:0$109'.
Found and cleaned up 1 empty switch in `\sequential_div.$proc$source/sequential_div.sv:0$106'.
Removing empty process `sequential_div.$proc$source/sequential_div.sv:0$106'.
Removing empty process `sequential_div.$proc$source/sequential_div.sv:14$104'.
Found and cleaned up 3 empty switches in `\pwm.$proc$source/pwm.sv:0$99'.
Removing empty process `pwm.$proc$source/pwm.sv:0$99'.
Removing empty process `pwm.$proc$source/pwm.sv:10$97'.
Found and cleaned up 2 empty switches in `\oscillator.$proc$source/oscillator.sv:0$93'.
Removing empty process `oscillator.$proc$source/oscillator.sv:0$93'.
Removing empty process `oscillator.$proc$source/oscillator.sv:5$91'.
Found and cleaned up 1 empty switch in `\mode_fsm.$proc$source/mode_fsm.sv:0$86'.
Removing empty process `mode_fsm.$proc$source/mode_fsm.sv:0$86'.
Removing empty process `mode_fsm.$proc$source/mode_fsm.sv:9$84'.
Removing empty process `keypad_encoder.$proc$source/keypad_encoder.sv:55$80'.
Removing empty process `keypad_encoder.$proc$source/keypad_encoder.sv:42$76'.
Found and cleaned up 1 empty switch in `\keypad_encoder.$proc$source/keypad_encoder.sv:0$75'.
Removing empty process `keypad_encoder.$proc$source/keypad_encoder.sv:0$75'.
Removing empty process `keypad_encoder.$proc$source/keypad_encoder.sv:11$73'.
Found and cleaned up 1 empty switch in `\frequency_divider.$proc$source/frequency_divider.sv:0$71'.
Removing empty process `frequency_divider.$proc$source/frequency_divider.sv:0$71'.
Found and cleaned up 1 empty switch in `\frequency_divider.$proc$source/frequency_divider.sv:0$70'.
Removing empty process `frequency_divider.$proc$source/frequency_divider.sv:0$70'.
Found and cleaned up 1 empty switch in `\frequency_divider.$proc$source/frequency_divider.sv:0$69'.
Removing empty process `frequency_divider.$proc$source/frequency_divider.sv:0$69'.
Found and cleaned up 5 empty switches in `\frequency_divider.$proc$source/frequency_divider.sv:0$55'.
Removing empty process `frequency_divider.$proc$source/frequency_divider.sv:0$55'.
Found and cleaned up 2 empty switches in `\clock_div.$proc$source/clock_div.sv:0$51'.
Removing empty process `clock_div.$proc$source/clock_div.sv:0$51'.
Removing empty process `clock_div.$proc$source/clock_div.sv:10$49'.
Found and cleaned up 2 empty switches in `\clock_8Hz.$proc$source/clock_8Hz.sv:0$45'.
Removing empty process `clock_8Hz.$proc$source/clock_8Hz.sv:0$45'.
Removing empty process `clock_8Hz.$proc$source/clock_8Hz.sv:10$43'.
Removing empty process `top.$proc$source/top.sv:0$29'.
Removing empty process `reset_on_start.$proc$ice40/ice40hx8k.sv:129$23'.
Found and cleaned up 5 empty switches in `\reset_on_start.$proc$ice40/ice40hx8k.sv:131$16'.
Removing empty process `reset_on_start.$proc$ice40/ice40hx8k.sv:131$16'.
Removing empty process `ice40hx8k.$proc$ice40/ice40hx8k.sv:13$14'.
Removing empty process `ice40hx8k.$proc$ice40/ice40hx8k.sv:12$13'.
Removing empty process `ice40hx8k.$proc$ice40/ice40hx8k.sv:104$9'.
Removing empty process `ice40hx8k.$proc$ice40/ice40hx8k.sv:98$7'.
Found and cleaned up 1 empty switch in `\ice40hx8k.$proc$ice40/ice40hx8k.sv:14$1'.
Removing empty process `ice40hx8k.$proc$ice40/ice40hx8k.sv:14$1'.
Cleaned up 74 empty switches.

17.3.12. Executing OPT_EXPR pass (perform const folding).
Optimizing module $paramod\uart_tx\DATA_WIDTH=s32'00000000000000000000000000001000.
<suppressed ~4 debug messages>
Optimizing module $paramod\uart_rx\DATA_WIDTH=s32'00000000000000000000000000001000.
<suppressed ~9 debug messages>
Optimizing module uart.
Optimizing module waveshaper.
<suppressed ~1 debug messages>
Optimizing module sound_series_fsm.
<suppressed ~6 debug messages>
Optimizing module sequential_div.
<suppressed ~5 debug messages>
Optimizing module pwm.
<suppressed ~2 debug messages>
Optimizing module oscillator.
<suppressed ~2 debug messages>
Optimizing module mode_fsm.
<suppressed ~2 debug messages>
Optimizing module keypad_encoder.
<suppressed ~3 debug messages>
Optimizing module frequency_divider.
<suppressed ~3 debug messages>
Optimizing module clock_div.
<suppressed ~2 debug messages>
Optimizing module clock_8Hz.
<suppressed ~2 debug messages>
Optimizing module synth_top.
Optimizing module top.
<suppressed ~2 debug messages>
Optimizing module reset_on_start.
<suppressed ~2 debug messages>
Optimizing module ice40hx8k.

17.4. Executing FLATTEN pass (flatten design).
Deleting now unused module $paramod\uart_tx\DATA_WIDTH=s32'00000000000000000000000000001000.
Deleting now unused module $paramod\uart_rx\DATA_WIDTH=s32'00000000000000000000000000001000.
Deleting now unused module uart.
Deleting now unused module waveshaper.
Deleting now unused module sound_series_fsm.
Deleting now unused module sequential_div.
Deleting now unused module pwm.
Deleting now unused module oscillator.
Deleting now unused module mode_fsm.
Deleting now unused module keypad_encoder.
Deleting now unused module frequency_divider.
Deleting now unused module clock_div.
Deleting now unused module clock_8Hz.
Deleting now unused module synth_top.
Deleting now unused module top.
Deleting now unused module reset_on_start.
<suppressed ~16 debug messages>

17.5. Executing TRIBUF pass.

17.6. Executing DEMINOUT pass (demote inout ports to input or output).

17.7. Executing OPT_EXPR pass (perform const folding).
Optimizing module ice40hx8k.
<suppressed ~77 debug messages>

17.8. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ice40hx8k..
Removed 102 unused cells and 512 unused wires.
<suppressed ~162 debug messages>

17.9. Executing CHECK pass (checking for obvious problems).
Checking module ice40hx8k...
Warning: Wire ice40hx8k.\ss7 [7] is used but has no driver.
Warning: Wire ice40hx8k.\ss7 [6] is used but has no driver.
Warning: Wire ice40hx8k.\ss7 [5] is used but has no driver.
Warning: Wire ice40hx8k.\ss7 [4] is used but has no driver.
Warning: Wire ice40hx8k.\ss7 [3] is used but has no driver.
Warning: Wire ice40hx8k.\ss7 [2] is used but has no driver.
Warning: Wire ice40hx8k.\ss7 [1] is used but has no driver.
Warning: Wire ice40hx8k.\ss7 [0] is used but has no driver.
Warning: Wire ice40hx8k.\ss6 [7] is used but has no driver.
Warning: Wire ice40hx8k.\ss6 [6] is used but has no driver.
Warning: Wire ice40hx8k.\ss6 [5] is used but has no driver.
Warning: Wire ice40hx8k.\ss6 [4] is used but has no driver.
Warning: Wire ice40hx8k.\ss6 [3] is used but has no driver.
Warning: Wire ice40hx8k.\ss6 [2] is used but has no driver.
Warning: Wire ice40hx8k.\ss6 [1] is used but has no driver.
Warning: Wire ice40hx8k.\ss6 [0] is used but has no driver.
Warning: Wire ice40hx8k.\ss5 [7] is used but has no driver.
Warning: Wire ice40hx8k.\ss5 [6] is used but has no driver.
Warning: Wire ice40hx8k.\ss5 [5] is used but has no driver.
Warning: Wire ice40hx8k.\ss5 [4] is used but has no driver.
Warning: Wire ice40hx8k.\ss5 [3] is used but has no driver.
Warning: Wire ice40hx8k.\ss5 [2] is used but has no driver.
Warning: Wire ice40hx8k.\ss5 [1] is used but has no driver.
Warning: Wire ice40hx8k.\ss5 [0] is used but has no driver.
Warning: Wire ice40hx8k.\ss4 [7] is used but has no driver.
Warning: Wire ice40hx8k.\ss4 [6] is used but has no driver.
Warning: Wire ice40hx8k.\ss4 [5] is used but has no driver.
Warning: Wire ice40hx8k.\ss4 [4] is used but has no driver.
Warning: Wire ice40hx8k.\ss4 [3] is used but has no driver.
Warning: Wire ice40hx8k.\ss4 [2] is used but has no driver.
Warning: Wire ice40hx8k.\ss4 [1] is used but has no driver.
Warning: Wire ice40hx8k.\ss4 [0] is used but has no driver.
Warning: Wire ice40hx8k.\ss3 [7] is used but has no driver.
Warning: Wire ice40hx8k.\ss3 [6] is used but has no driver.
Warning: Wire ice40hx8k.\ss3 [5] is used but has no driver.
Warning: Wire ice40hx8k.\ss3 [4] is used but has no driver.
Warning: Wire ice40hx8k.\ss3 [3] is used but has no driver.
Warning: Wire ice40hx8k.\ss3 [2] is used but has no driver.
Warning: Wire ice40hx8k.\ss3 [1] is used but has no driver.
Warning: Wire ice40hx8k.\ss3 [0] is used but has no driver.
Warning: Wire ice40hx8k.\ss2 [7] is used but has no driver.
Warning: Wire ice40hx8k.\ss2 [6] is used but has no driver.
Warning: Wire ice40hx8k.\ss2 [5] is used but has no driver.
Warning: Wire ice40hx8k.\ss2 [4] is used but has no driver.
Warning: Wire ice40hx8k.\ss2 [3] is used but has no driver.
Warning: Wire ice40hx8k.\ss2 [2] is used but has no driver.
Warning: Wire ice40hx8k.\ss2 [1] is used but has no driver.
Warning: Wire ice40hx8k.\ss2 [0] is used but has no driver.
Warning: Wire ice40hx8k.\ss1 [7] is used but has no driver.
Warning: Wire ice40hx8k.\ss1 [6] is used but has no driver.
Warning: Wire ice40hx8k.\ss1 [5] is used but has no driver.
Warning: Wire ice40hx8k.\ss1 [4] is used but has no driver.
Warning: Wire ice40hx8k.\ss1 [3] is used but has no driver.
Warning: Wire ice40hx8k.\ss1 [2] is used but has no driver.
Warning: Wire ice40hx8k.\ss1 [1] is used but has no driver.
Warning: Wire ice40hx8k.\ss1 [0] is used but has no driver.
Warning: Wire ice40hx8k.\ss0 [7] is used but has no driver.
Warning: Wire ice40hx8k.\ss0 [6] is used but has no driver.
Warning: Wire ice40hx8k.\ss0 [5] is used but has no driver.
Warning: Wire ice40hx8k.\ss0 [4] is used but has no driver.
Warning: Wire ice40hx8k.\ss0 [3] is used but has no driver.
Warning: Wire ice40hx8k.\ss0 [2] is used but has no driver.
Warning: Wire ice40hx8k.\ss0 [1] is used but has no driver.
Warning: Wire ice40hx8k.\ss0 [0] is used but has no driver.
Warning: Wire ice40hx8k.\red is used but has no driver.
Warning: Wire ice40hx8k.\left [6] is used but has no driver.
Warning: Wire ice40hx8k.\left [5] is used but has no driver.
Warning: Wire ice40hx8k.\green is used but has no driver.
Warning: Wire ice40hx8k.\blue is used but has no driver.
Warning: Wire ice40hx8k.\txclk is used but has no driver.
Warning: Wire ice40hx8k.\uart_inst.uart_tx_inst.input_axis_tdata [7] is used but has no driver.
Warning: Wire ice40hx8k.\uart_inst.uart_tx_inst.input_axis_tdata [6] is used but has no driver.
Warning: Wire ice40hx8k.\uart_inst.uart_tx_inst.input_axis_tdata [5] is used but has no driver.
Warning: Wire ice40hx8k.\uart_inst.uart_tx_inst.input_axis_tdata [4] is used but has no driver.
Warning: Wire ice40hx8k.\uart_inst.uart_tx_inst.input_axis_tdata [3] is used but has no driver.
Warning: Wire ice40hx8k.\uart_inst.uart_tx_inst.input_axis_tdata [2] is used but has no driver.
Warning: Wire ice40hx8k.\uart_inst.uart_tx_inst.input_axis_tdata [1] is used but has no driver.
Warning: Wire ice40hx8k.\uart_inst.uart_tx_inst.input_axis_tdata [0] is used but has no driver.
Found and reported 78 problems.

17.10. Executing OPT pass (performing simple optimizations).

17.10.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module ice40hx8k.

17.10.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ice40hx8k'.
<suppressed ~39 debug messages>
Removed a total of 13 cells.

17.10.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \ice40hx8k..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
    dead port 1/2 on $mux $flatten\top_inst.\U1.\clk8.$procmux$1117.
    dead port 1/2 on $mux $flatten\top_inst.\U1.\clk8.$procmux$1123.
    dead port 1/2 on $mux $flatten\top_inst.\U1.\clk_div.$procmux$1099.
    dead port 1/2 on $mux $flatten\top_inst.\U1.\clk_div.$procmux$1105.
    dead port 2/2 on $mux $flatten\top_inst.\U1.\frqdiv.$procmux$1061.
    dead port 1/2 on $mux $flatten\top_inst.\U1.\frqdiv.$procmux$1064.
    dead port 1/2 on $mux $flatten\top_inst.\U1.\frqdiv.$procmux$1066.
    dead port 1/2 on $mux $flatten\top_inst.\U1.\frqdiv.$procmux$1073.
    dead port 1/2 on $mux $flatten\top_inst.\U1.\frqdiv.$procmux$1075.
    dead port 2/2 on $mux $flatten\top_inst.\U1.\frqdiv.$procmux$1082.
    dead port 1/2 on $mux $flatten\top_inst.\U1.\frqdiv.$procmux$1084.
    dead port 1/2 on $mux $flatten\top_inst.\U1.\frqdiv.$procmux$1090.
    dead port 1/2 on $mux $flatten\top_inst.\U1.\osc.$procmux$1026.
    dead port 1/2 on $mux $flatten\top_inst.\U1.\pwm.$procmux$1008.
    dead port 1/2 on $mux $flatten\top_inst.\U1.\pwm.$procmux$1014.
    dead port 2/2 on $mux $flatten\top_inst.\U1.\seq_div.$procmux$948.
    dead port 2/2 on $mux $flatten\top_inst.\U1.\seq_div.$procmux$954.
    dead port 2/2 on $mux $flatten\top_inst.\U1.\seq_div.$procmux$980.
    dead port 2/2 on $mux $flatten\top_inst.\U1.\seq_div.$procmux$986.
    dead port 2/2 on $mux $flatten\top_inst.\U1.\seq_div.$procmux$994.
Removed 20 multiplexer ports.
<suppressed ~26 debug messages>

17.10.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \ice40hx8k.
Performed a total of 0 changes.

17.10.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ice40hx8k'.
<suppressed ~3 debug messages>
Removed a total of 1 cells.

17.10.6. Executing OPT_DFF pass (perform DFF optimizations).

17.10.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ice40hx8k..
Removed 0 unused cells and 34 unused wires.
<suppressed ~1 debug messages>

17.10.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module ice40hx8k.

17.10.9. Rerunning OPT passes. (Maybe there is more to do..)

17.10.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \ice40hx8k..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~26 debug messages>

17.10.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \ice40hx8k.
    New ctrl vector for $pmux cell $flatten\top_inst.\U1.\seq_div.$procmux$996: { \top_inst.U1.seq_div.load \top_inst.U1.seq_div.div $auto$opt_reduce.cc:134:opt_pmux$1211 }
  Optimizing cells in module \ice40hx8k.
Performed a total of 1 changes.

17.10.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ice40hx8k'.
Removed a total of 0 cells.

17.10.13. Executing OPT_DFF pass (perform DFF optimizations).

17.10.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ice40hx8k..

17.10.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module ice40hx8k.

17.10.16. Rerunning OPT passes. (Maybe there is more to do..)

17.10.17. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \ice40hx8k..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~26 debug messages>

17.10.18. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \ice40hx8k.
Performed a total of 0 changes.

17.10.19. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ice40hx8k'.
Removed a total of 0 cells.

17.10.20. Executing OPT_DFF pass (perform DFF optimizations).

17.10.21. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ice40hx8k..

17.10.22. Executing OPT_EXPR pass (perform const folding).
Optimizing module ice40hx8k.

17.10.23. Finished OPT passes. (There is nothing left to do.)

17.11. Executing FSM pass (extract and optimize FSM).

17.11.1. Executing FSM_DETECT pass (finding FSMs in design).
Not marking ice40hx8k.top_inst.U1.SS_FSM.note as FSM state register:
    Users of register don't seem to benefit from recoding.
    Circuit seems to be self-resetting.
Not marking ice40hx8k.top_inst.U1.mode_FSM.mode as FSM state register:
    Circuit seems to be self-resetting.
Not marking ice40hx8k.top_inst.U1.seq_div.state as FSM state register:
    Circuit seems to be self-resetting.

17.11.2. Executing FSM_EXTRACT pass (extracting FSM from design).

17.11.3. Executing FSM_OPT pass (simple optimizations of FSMs).

17.11.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ice40hx8k..

17.11.5. Executing FSM_OPT pass (simple optimizations of FSMs).

17.11.6. Executing FSM_RECODE pass (re-assigning FSM state encoding).

17.11.7. Executing FSM_INFO pass (dumping all available information on FSM cells).

17.11.8. Executing FSM_MAP pass (mapping FSMs to basic logic).

17.12. Executing OPT pass (performing simple optimizations).

17.12.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module ice40hx8k.

17.12.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ice40hx8k'.
Removed a total of 0 cells.

17.12.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \ice40hx8k..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~26 debug messages>

17.12.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \ice40hx8k.
Performed a total of 0 changes.

17.12.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ice40hx8k'.
Removed a total of 0 cells.

17.12.6. Executing OPT_DFF pass (perform DFF optimizations).
Adding EN signal on $flatten\uart_inst.\uart_tx_inst.$procdff$1176 ($dff) from module ice40hx8k (D = $flatten\uart_inst.\uart_tx_inst.$procmux$747_Y, Q = \uart_inst.uart_tx_inst.bit_cnt).
Adding EN signal on $flatten\uart_inst.\uart_tx_inst.$procdff$1175 ($dff) from module ice40hx8k (D = $flatten\uart_inst.\uart_tx_inst.$0\prescale_reg[18:0], Q = \uart_inst.uart_tx_inst.prescale_reg).
Adding EN signal on $flatten\uart_inst.\uart_tx_inst.$procdff$1174 ($dff) from module ice40hx8k (D = $flatten\uart_inst.\uart_tx_inst.$procmux$688_Y, Q = \uart_inst.uart_tx_inst.data_reg).
Adding EN signal on $flatten\uart_inst.\uart_tx_inst.$procdff$1172 ($dff) from module ice40hx8k (D = $flatten\uart_inst.\uart_tx_inst.$procmux$720_Y, Q = \uart_inst.uart_tx_inst.txd_reg).
Adding SRST signal on $flatten\uart_inst.\uart_tx_inst.$procdff$1171 ($dff) from module ice40hx8k (D = $flatten\uart_inst.\uart_tx_inst.$procmux$758_Y, Q = \uart_inst.uart_tx_inst.input_axis_tready_reg, rval = 1'0).
Adding EN signal on $auto$ff.cc:266:slice$1246 ($sdff) from module ice40hx8k (D = $flatten\uart_inst.\uart_tx_inst.$procmux$756_Y, Q = \uart_inst.uart_tx_inst.input_axis_tready_reg).
Adding EN signal on $flatten\top_inst.\U1.\seq_div.$procdff$1194 ($adff) from module ice40hx8k (D = $flatten\top_inst.\U1.\seq_div.$add$source/sequential_div.sv:23$108_Y [2:0], Q = \top_inst.U1.seq_div.count_div).
Adding EN signal on $flatten\top_inst.\U1.\seq_div.$procdff$1193 ($adff) from module ice40hx8k (D = \top_inst.U1.seq_div.next_state, Q = \top_inst.U1.seq_div.state).
Adding EN signal on $flatten\top_inst.\U1.\seq_div.$procdff$1192 ($adff) from module ice40hx8k (D = \top_inst.U1.osc.count, Q = \top_inst.U1.seq_div.dividend).
Adding EN signal on $flatten\top_inst.\U1.\seq_div.$procdff$1191 ($adff) from module ice40hx8k (D = \top_inst.U1.seq_div.Q, Q = \top_inst.U1.seq_div.q_out).
Adding EN signal on $flatten\top_inst.\U1.\seq_div.$procdff$1190 ($adff) from module ice40hx8k (D = \top_inst.U1.seq_div.next_r, Q = \top_inst.U1.seq_div.R).
Adding EN signal on $flatten\top_inst.\U1.\seq_div.$procdff$1189 ($adff) from module ice40hx8k (D = \top_inst.U1.seq_div.next_q, Q = \top_inst.U1.seq_div.Q).
Adding EN signal on $flatten\top_inst.\U1.\seq_div.$procdff$1188 ($adff) from module ice40hx8k (D = \top_inst.U1.osc.divider, Q = \top_inst.U1.seq_div.D).

17.12.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ice40hx8k..
Removed 9 unused cells and 9 unused wires.
<suppressed ~14 debug messages>

17.12.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module ice40hx8k.
<suppressed ~6 debug messages>

17.12.9. Rerunning OPT passes. (Maybe there is more to do..)

17.12.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \ice40hx8k..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~22 debug messages>

17.12.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \ice40hx8k.
Performed a total of 0 changes.

17.12.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ice40hx8k'.
<suppressed ~21 debug messages>
Removed a total of 7 cells.

17.12.13. Executing OPT_DFF pass (perform DFF optimizations).

17.12.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ice40hx8k..
Removed 0 unused cells and 7 unused wires.
<suppressed ~1 debug messages>

17.12.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module ice40hx8k.

17.12.16. Rerunning OPT passes. (Maybe there is more to do..)

17.12.17. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \ice40hx8k..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~22 debug messages>

17.12.18. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \ice40hx8k.
Performed a total of 0 changes.

17.12.19. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ice40hx8k'.
Removed a total of 0 cells.

17.12.20. Executing OPT_DFF pass (perform DFF optimizations).

17.12.21. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ice40hx8k..

17.12.22. Executing OPT_EXPR pass (perform const folding).
Optimizing module ice40hx8k.

17.12.23. Finished OPT passes. (There is nothing left to do.)

17.13. Executing WREDUCE pass (reducing word size of cells).
Removed top 28 address bits (of 32) from memory init port ice40hx8k.$flatten\top_inst.\U1.\SS_FSM.$auto$mem.cc:319:emit$629 ($flatten\top_inst.\U1.\SS_FSM.$auto$proc_rom.cc:150:do_switch$627).
Removed top 28 address bits (of 32) from memory init port ice40hx8k.$flatten\top_inst.\U1.\frqdiv.$auto$mem.cc:319:emit$633 ($flatten\top_inst.\U1.\frqdiv.$auto$proc_rom.cc:150:do_switch$631).
Removed top 31 bits (of 32) from port B of cell ice40hx8k.$flatten\uart_inst.\uart_tx_inst.$sub$ice40/uart/uart_tx.v:88$608 ($sub).
Removed top 13 bits (of 32) from port Y of cell ice40hx8k.$flatten\uart_inst.\uart_tx_inst.$sub$ice40/uart/uart_tx.v:88$608 ($sub).
Removed top 31 bits (of 32) from port B of cell ice40hx8k.$flatten\uart_inst.\uart_tx_inst.$gt$ice40/uart/uart_tx.v:102$613 ($gt).
Removed top 31 bits (of 32) from port B of cell ice40hx8k.$flatten\uart_inst.\uart_tx_inst.$sub$ice40/uart/uart_tx.v:103$614 ($sub).
Removed top 28 bits (of 32) from port Y of cell ice40hx8k.$flatten\uart_inst.\uart_tx_inst.$sub$ice40/uart/uart_tx.v:103$614 ($sub).
Removed top 3 bits (of 4) from port B of cell ice40hx8k.$flatten\uart_inst.\uart_tx_inst.$eq$ice40/uart/uart_tx.v:106$617 ($eq).
Removed top 31 bits (of 32) from port B of cell ice40hx8k.$flatten\uart_inst.\uart_tx_inst.$gt$ice40/uart/uart_tx.v:86$607 ($gt).
Removed top 31 bits (of 32) from mux cell ice40hx8k.$flatten\top_inst.\U1.\SS_FSM.$ternary$source/sound_series_fsm.sv:15$128 ($mux).
Removed top 1 bits (of 10) from port A of cell ice40hx8k.$flatten\top_inst.\U1.\waveshaper.$sub$source/waveshaper.sv:12$144 ($sub).
Removed top 1 bits (of 10) from port B of cell ice40hx8k.$flatten\top_inst.\U1.\waveshaper.$sub$source/waveshaper.sv:12$144 ($sub).
Removed top 2 bits (of 10) from port Y of cell ice40hx8k.$flatten\top_inst.\U1.\waveshaper.$sub$source/waveshaper.sv:12$144 ($sub).
Removed top 1 bits (of 9) from port A of cell ice40hx8k.$flatten\top_inst.\U1.\waveshaper.$sub$source/waveshaper.sv:12$144 ($sub).
Removed top 1 bits (of 9) from port B of cell ice40hx8k.$flatten\top_inst.\U1.\waveshaper.$sub$source/waveshaper.sv:12$144 ($sub).
Removed top 3 bits (of 4) from port B of cell ice40hx8k.$flatten\top_inst.\U1.\SS_FSM.$procmux$936_CMP0 ($eq).
Removed top 2 bits (of 4) from port B of cell ice40hx8k.$flatten\top_inst.\U1.\SS_FSM.$procmux$935_CMP0 ($eq).
Removed top 2 bits (of 4) from port B of cell ice40hx8k.$flatten\top_inst.\U1.\SS_FSM.$procmux$934_CMP0 ($eq).
Removed top 1 bits (of 4) from port B of cell ice40hx8k.$flatten\top_inst.\U1.\SS_FSM.$procmux$933_CMP0 ($eq).
Removed top 1 bits (of 4) from port B of cell ice40hx8k.$flatten\top_inst.\U1.\SS_FSM.$procmux$932_CMP0 ($eq).
Removed top 1 bits (of 4) from port B of cell ice40hx8k.$flatten\top_inst.\U1.\SS_FSM.$procmux$931_CMP0 ($eq).
Removed top 1 bits (of 4) from port B of cell ice40hx8k.$flatten\top_inst.\U1.\SS_FSM.$procmux$930_CMP0 ($eq).
Removed top 3 bits (of 4) from mux cell ice40hx8k.$flatten\top_inst.\U1.\SS_FSM.$ternary$source/sound_series_fsm.sv:33$137 ($mux).
Removed top 2 bits (of 4) from mux cell ice40hx8k.$flatten\top_inst.\U1.\SS_FSM.$ternary$source/sound_series_fsm.sv:32$136 ($mux).
Removed top 3 bits (of 4) from mux cell ice40hx8k.$flatten\top_inst.\U1.\SS_FSM.$ternary$source/sound_series_fsm.sv:31$135 ($mux).
Removed top 1 bits (of 4) from mux cell ice40hx8k.$flatten\top_inst.\U1.\SS_FSM.$ternary$source/sound_series_fsm.sv:30$134 ($mux).
Removed top 3 bits (of 4) from mux cell ice40hx8k.$flatten\top_inst.\U1.\SS_FSM.$ternary$source/sound_series_fsm.sv:29$133 ($mux).
Removed top 2 bits (of 4) from mux cell ice40hx8k.$flatten\top_inst.\U1.\SS_FSM.$ternary$source/sound_series_fsm.sv:28$132 ($mux).
Removed top 3 bits (of 4) from mux cell ice40hx8k.$flatten\top_inst.\U1.\SS_FSM.$ternary$source/sound_series_fsm.sv:27$131 ($mux).
Removed top 31 bits (of 32) from mux cell ice40hx8k.$flatten\top_inst.\U1.\SS_FSM.$ternary$source/sound_series_fsm.sv:16$129 ($mux).
Removed top 31 bits (of 32) from port B of cell ice40hx8k.$flatten\top_inst.\U1.\osc.$add$source/oscillator.sv:17$96 ($add).
Removed top 16 bits (of 32) from port Y of cell ice40hx8k.$flatten\top_inst.\U1.\osc.$add$source/oscillator.sv:17$96 ($add).
Removed top 31 bits (of 32) from port B of cell ice40hx8k.$flatten\top_inst.\U1.\clk_div.$add$source/clock_div.sv:28$54 ($add).
Removed top 24 bits (of 32) from port Y of cell ice40hx8k.$flatten\top_inst.\U1.\clk_div.$add$source/clock_div.sv:28$54 ($add).
Removed top 7 bits (of 8) from mux cell ice40hx8k.$flatten\top_inst.\U1.\seq_div.$procmux$946 ($mux).
Removed top 1 bits (of 17) from port B of cell ice40hx8k.$flatten\top_inst.\U1.\seq_div.$ge$source/sequential_div.sv:101$121 ($ge).
Removed top 1 bits (of 2) from port B of cell ice40hx8k.$flatten\top_inst.\U1.\seq_div.$eq$source/sequential_div.sv:45$113 ($eq).
Removed top 31 bits (of 32) from port B of cell ice40hx8k.$flatten\top_inst.\U1.\seq_div.$add$source/sequential_div.sv:23$108 ($add).
Removed top 29 bits (of 32) from port Y of cell ice40hx8k.$flatten\top_inst.\U1.\seq_div.$add$source/sequential_div.sv:23$108 ($add).
Removed top 1 bits (of 2) from port B of cell ice40hx8k.$flatten\top_inst.\U1.\mode_FSM.$procmux$1034_CMP0 ($eq).
Removed top 1 bits (of 2) from mux cell ice40hx8k.$flatten\top_inst.\U1.\mode_FSM.$ternary$source/mode_fsm.sv:21$89 ($mux).
Removed top 1 bits (of 2) from mux cell ice40hx8k.$flatten\top_inst.\U1.\mode_FSM.$ternary$source/mode_fsm.sv:19$87 ($mux).
Removed top 24 bits (of 32) from mux cell ice40hx8k.$flatten\top_inst.\U1.\waveshaper.$ternary$source/waveshaper.sv:18$149 ($mux).
Removed top 24 bits (of 32) from port B of cell ice40hx8k.$flatten\top_inst.\U1.\waveshaper.$ge$source/waveshaper.sv:17$146 ($ge).
Removed top 31 bits (of 32) from port B of cell ice40hx8k.$flatten\top_inst.\U1.\pwm.$add$source/pwm.sv:26$102 ($add).
Removed top 24 bits (of 32) from port Y of cell ice40hx8k.$flatten\top_inst.\U1.\pwm.$add$source/pwm.sv:26$102 ($add).
Removed top 24 bits (of 32) from port B of cell ice40hx8k.$flatten\top_inst.\U1.\pwm.$ge$source/pwm.sv:22$101 ($ge).
Removed top 31 bits (of 32) from port B of cell ice40hx8k.$flatten\top_inst.\U1.\clk8.$add$source/clock_8Hz.sv:27$48 ($add).
Removed top 11 bits (of 32) from port Y of cell ice40hx8k.$flatten\top_inst.\U1.\clk8.$add$source/clock_8Hz.sv:27$48 ($add).
Removed top 27 bits (of 32) from port A of cell ice40hx8k.$flatten\top_inst.$neg$source/top.sv:0$37 ($neg).
Converting cell ice40hx8k.$flatten\top_inst.$neg$source/top.sv:0$37 ($neg) from signed to unsigned.
Removed top 1 bits (of 5) from port A of cell ice40hx8k.$flatten\top_inst.$neg$source/top.sv:0$37 ($neg).
Removed top 31 bits (of 32) from wire ice40hx8k.$flatten\top_inst.\U1.\SS_FSM.$ternary$source/sound_series_fsm.sv:15$128_Y.
Removed top 31 bits (of 32) from wire ice40hx8k.$flatten\top_inst.\U1.\SS_FSM.$ternary$source/sound_series_fsm.sv:16$129_Y.
Removed top 3 bits (of 4) from wire ice40hx8k.$flatten\top_inst.\U1.\SS_FSM.$ternary$source/sound_series_fsm.sv:27$131_Y.
Removed top 2 bits (of 4) from wire ice40hx8k.$flatten\top_inst.\U1.\SS_FSM.$ternary$source/sound_series_fsm.sv:28$132_Y.
Removed top 3 bits (of 4) from wire ice40hx8k.$flatten\top_inst.\U1.\SS_FSM.$ternary$source/sound_series_fsm.sv:29$133_Y.
Removed top 1 bits (of 4) from wire ice40hx8k.$flatten\top_inst.\U1.\SS_FSM.$ternary$source/sound_series_fsm.sv:30$134_Y.
Removed top 3 bits (of 4) from wire ice40hx8k.$flatten\top_inst.\U1.\SS_FSM.$ternary$source/sound_series_fsm.sv:31$135_Y.
Removed top 2 bits (of 4) from wire ice40hx8k.$flatten\top_inst.\U1.\SS_FSM.$ternary$source/sound_series_fsm.sv:32$136_Y.
Removed top 3 bits (of 4) from wire ice40hx8k.$flatten\top_inst.\U1.\SS_FSM.$ternary$source/sound_series_fsm.sv:33$137_Y.
Removed top 11 bits (of 32) from wire ice40hx8k.$flatten\top_inst.\U1.\clk8.$add$source/clock_8Hz.sv:27$48_Y.
Removed top 24 bits (of 32) from wire ice40hx8k.$flatten\top_inst.\U1.\clk_div.$add$source/clock_div.sv:28$54_Y.
Removed top 16 bits (of 32) from wire ice40hx8k.$flatten\top_inst.\U1.\osc.$add$source/oscillator.sv:17$96_Y.
Removed top 7 bits (of 8) from wire ice40hx8k.$flatten\top_inst.\U1.\seq_div.$3\next_q[7:0].
Removed top 29 bits (of 32) from wire ice40hx8k.$flatten\top_inst.\U1.\seq_div.$add$source/sequential_div.sv:23$108_Y.
Removed top 28 bits (of 32) from wire ice40hx8k.$flatten\uart_inst.\uart_tx_inst.$sub$ice40/uart/uart_tx.v:103$614_Y.

17.14. Executing PEEPOPT pass (run peephole optimizers).

17.15. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ice40hx8k..
Removed 0 unused cells and 15 unused wires.
<suppressed ~1 debug messages>

17.16. Executing SHARE pass (SAT-based resource sharing).

17.17. Executing TECHMAP pass (map to technology primitives).

17.17.1. Executing Verilog-2005 frontend: /home/shay/a/ece270/bin/../share/yosys/cmp2lut.v
Parsing Verilog input from `/home/shay/a/ece270/bin/../share/yosys/cmp2lut.v' to AST representation.
Generating RTLIL representation for module `\_90_lut_cmp_'.
Successfully finished Verilog frontend.

17.17.2. Continuing TECHMAP pass.
Using template $paramod$106e7676feb63f00b8f79ebab3ff16b0f4c109cb\_90_lut_cmp_ for cells of type $gt.
No more expansions possible.
<suppressed ~196 debug messages>

17.18. Executing OPT_EXPR pass (perform const folding).
Optimizing module ice40hx8k.

17.19. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ice40hx8k..
Removed 0 unused cells and 3 unused wires.
<suppressed ~1 debug messages>

17.20. Executing ALUMACC pass (create $alu and $macc cells).
Extracting $alu and $macc cells in module ice40hx8k:
  creating $macc model for $flatten\top_inst.$neg$source/top.sv:0$37 ($neg).
  creating $macc model for $flatten\top_inst.\U1.\clk8.$add$source/clock_8Hz.sv:27$48 ($add).
  creating $macc model for $flatten\top_inst.\U1.\clk_div.$add$source/clock_div.sv:28$54 ($add).
  creating $macc model for $flatten\top_inst.\U1.\osc.$add$source/oscillator.sv:17$96 ($add).
  creating $macc model for $flatten\top_inst.\U1.\pwm.$add$source/pwm.sv:26$102 ($add).
  creating $macc model for $flatten\top_inst.\U1.\seq_div.$add$source/sequential_div.sv:23$108 ($add).
  creating $macc model for $flatten\top_inst.\U1.\seq_div.$sub$source/sequential_div.sv:102$123 ($sub).
  creating $macc model for $flatten\top_inst.\U1.\waveshaper.$sub$source/waveshaper.sv:12$144 ($sub).
  creating $macc model for $flatten\uart_inst.\uart_tx_inst.$sub$ice40/uart/uart_tx.v:103$614 ($sub).
  creating $macc model for $flatten\uart_inst.\uart_tx_inst.$sub$ice40/uart/uart_tx.v:88$608 ($sub).
  creating $alu model for $macc $flatten\uart_inst.\uart_tx_inst.$sub$ice40/uart/uart_tx.v:88$608.
  creating $alu model for $macc $flatten\uart_inst.\uart_tx_inst.$sub$ice40/uart/uart_tx.v:103$614.
  creating $alu model for $macc $flatten\top_inst.\U1.\waveshaper.$sub$source/waveshaper.sv:12$144.
  creating $alu model for $macc $flatten\top_inst.\U1.\seq_div.$sub$source/sequential_div.sv:102$123.
  creating $alu model for $macc $flatten\top_inst.\U1.\seq_div.$add$source/sequential_div.sv:23$108.
  creating $alu model for $macc $flatten\top_inst.\U1.\pwm.$add$source/pwm.sv:26$102.
  creating $alu model for $macc $flatten\top_inst.\U1.\osc.$add$source/oscillator.sv:17$96.
  creating $alu model for $macc $flatten\top_inst.\U1.\clk_div.$add$source/clock_div.sv:28$54.
  creating $alu model for $macc $flatten\top_inst.\U1.\clk8.$add$source/clock_8Hz.sv:27$48.
  creating $alu model for $macc $flatten\top_inst.$neg$source/top.sv:0$37.
  creating $alu model for $flatten\top_inst.\U1.\osc.$ge$source/oscillator.sv:14$95 ($ge): new $alu
  creating $alu model for $flatten\top_inst.\U1.\pwm.$ge$source/pwm.sv:22$101 ($ge): new $alu
  creating $alu model for $flatten\top_inst.\U1.\pwm.$lt$source/pwm.sv:29$103 ($lt): new $alu
  creating $alu model for $flatten\top_inst.\U1.\seq_div.$ge$source/sequential_div.sv:101$121 ($ge): new $alu
  creating $alu model for $flatten\top_inst.\U1.\waveshaper.$ge$source/waveshaper.sv:17$146 ($ge): new $alu
  creating $alu model for $flatten\uart_inst.\uart_tx_inst.$gt$ice40/uart/uart_tx.v:86$607 ($gt): new $alu
  creating $alu cell for $flatten\uart_inst.\uart_tx_inst.$gt$ice40/uart/uart_tx.v:86$607: $auto$alumacc.cc:485:replace_alu$1289
  creating $alu cell for $flatten\top_inst.\U1.\waveshaper.$ge$source/waveshaper.sv:17$146: $auto$alumacc.cc:485:replace_alu$1294
  creating $alu cell for $flatten\top_inst.\U1.\seq_div.$ge$source/sequential_div.sv:101$121: $auto$alumacc.cc:485:replace_alu$1307
  creating $alu cell for $flatten\top_inst.\U1.\pwm.$lt$source/pwm.sv:29$103: $auto$alumacc.cc:485:replace_alu$1316
  creating $alu cell for $flatten\top_inst.\U1.\pwm.$ge$source/pwm.sv:22$101: $auto$alumacc.cc:485:replace_alu$1321
  creating $alu cell for $flatten\top_inst.\U1.\osc.$ge$source/oscillator.sv:14$95: $auto$alumacc.cc:485:replace_alu$1334
  creating $alu cell for $flatten\top_inst.$neg$source/top.sv:0$37: $auto$alumacc.cc:485:replace_alu$1347
  creating $alu cell for $flatten\top_inst.\U1.\clk8.$add$source/clock_8Hz.sv:27$48: $auto$alumacc.cc:485:replace_alu$1350
  creating $alu cell for $flatten\top_inst.\U1.\clk_div.$add$source/clock_div.sv:28$54: $auto$alumacc.cc:485:replace_alu$1353
  creating $alu cell for $flatten\top_inst.\U1.\osc.$add$source/oscillator.sv:17$96: $auto$alumacc.cc:485:replace_alu$1356
  creating $alu cell for $flatten\top_inst.\U1.\pwm.$add$source/pwm.sv:26$102: $auto$alumacc.cc:485:replace_alu$1359
  creating $alu cell for $flatten\top_inst.\U1.\seq_div.$add$source/sequential_div.sv:23$108: $auto$alumacc.cc:485:replace_alu$1362
  creating $alu cell for $flatten\top_inst.\U1.\seq_div.$sub$source/sequential_div.sv:102$123: $auto$alumacc.cc:485:replace_alu$1365
  creating $alu cell for $flatten\top_inst.\U1.\waveshaper.$sub$source/waveshaper.sv:12$144: $auto$alumacc.cc:485:replace_alu$1368
  creating $alu cell for $flatten\uart_inst.\uart_tx_inst.$sub$ice40/uart/uart_tx.v:103$614: $auto$alumacc.cc:485:replace_alu$1371
  creating $alu cell for $flatten\uart_inst.\uart_tx_inst.$sub$ice40/uart/uart_tx.v:88$608: $auto$alumacc.cc:485:replace_alu$1374
  created 16 $alu and 0 $macc cells.

17.21. Executing OPT pass (performing simple optimizations).

17.21.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module ice40hx8k.
<suppressed ~4 debug messages>

17.21.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ice40hx8k'.
Removed a total of 0 cells.

17.21.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \ice40hx8k..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~22 debug messages>

17.21.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \ice40hx8k.
Performed a total of 0 changes.

17.21.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ice40hx8k'.
<suppressed ~9 debug messages>
Removed a total of 3 cells.

17.21.6. Executing OPT_DFF pass (perform DFF optimizations).

17.21.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ice40hx8k..
Removed 1 unused cells and 11 unused wires.
<suppressed ~2 debug messages>

17.21.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module ice40hx8k.

17.21.9. Rerunning OPT passes. (Maybe there is more to do..)

17.21.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \ice40hx8k..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~22 debug messages>

17.21.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \ice40hx8k.
Performed a total of 0 changes.

17.21.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ice40hx8k'.
Removed a total of 0 cells.

17.21.13. Executing OPT_DFF pass (perform DFF optimizations).

17.21.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ice40hx8k..

17.21.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module ice40hx8k.

17.21.16. Finished OPT passes. (There is nothing left to do.)

17.22. Executing MEMORY pass.

17.22.1. Executing OPT_MEM pass (optimize memories).
Performed a total of 0 transformations.

17.22.2. Executing OPT_MEM_PRIORITY pass (removing unnecessary memory write priority relations).
Performed a total of 0 transformations.

17.22.3. Executing OPT_MEM_FEEDBACK pass (finding memory read-to-write feedback paths).

17.22.4. Executing MEMORY_BMUX2ROM pass (converting muxes to ROMs).

17.22.5. Executing MEMORY_DFF pass (merging $dff cells to $memrd).
Checking read port `$flatten\top_inst.\U1.\SS_FSM.$auto$proc_rom.cc:150:do_switch$627'[0] in module `\ice40hx8k': no output FF found.
Checking read port `$flatten\top_inst.\U1.\frqdiv.$auto$proc_rom.cc:150:do_switch$631'[0] in module `\ice40hx8k': no output FF found.
Checking read port address `$flatten\top_inst.\U1.\SS_FSM.$auto$proc_rom.cc:150:do_switch$627'[0] in module `\ice40hx8k': address FF has async set and/or reset, not supported.
Checking read port address `$flatten\top_inst.\U1.\frqdiv.$auto$proc_rom.cc:150:do_switch$631'[0] in module `\ice40hx8k': no address FF found.

17.22.6. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ice40hx8k..

17.22.7. Executing MEMORY_SHARE pass (consolidating $memrd/$memwr cells).

17.22.8. Executing OPT_MEM_WIDEN pass (optimize memories where all ports are wide).
Performed a total of 0 transformations.

17.22.9. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ice40hx8k..

17.22.10. Executing MEMORY_COLLECT pass (generating $mem cells).

17.23. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ice40hx8k..

17.24. Executing MEMORY_LIBMAP pass (mapping memories to cells).
using FF mapping for memory ice40hx8k.$flatten\top_inst.\U1.\SS_FSM.$auto$proc_rom.cc:150:do_switch$627
using FF mapping for memory ice40hx8k.$flatten\top_inst.\U1.\frqdiv.$auto$proc_rom.cc:150:do_switch$631
<suppressed ~12 debug messages>

17.25. Executing TECHMAP pass (map to technology primitives).

17.25.1. Executing Verilog-2005 frontend: /home/shay/a/ece270/bin/../share/yosys/ice40/brams_map.v
Parsing Verilog input from `/home/shay/a/ece270/bin/../share/yosys/ice40/brams_map.v' to AST representation.
Generating RTLIL representation for module `\$__ICE40_RAM4K_'.
Successfully finished Verilog frontend.

17.25.2. Executing Verilog-2005 frontend: /home/shay/a/ece270/bin/../share/yosys/ice40/spram_map.v
Parsing Verilog input from `/home/shay/a/ece270/bin/../share/yosys/ice40/spram_map.v' to AST representation.
Generating RTLIL representation for module `\$__ICE40_SPRAM_'.
Successfully finished Verilog frontend.

17.25.3. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~4 debug messages>

17.26. Executing ICE40_BRAMINIT pass.

17.27. Executing OPT pass (performing simple optimizations).

17.27.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module ice40hx8k.
<suppressed ~83 debug messages>

17.27.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ice40hx8k'.
<suppressed ~21 debug messages>
Removed a total of 7 cells.

17.27.3. Executing OPT_DFF pass (perform DFF optimizations).
Handling const CLK on $procdff$1207 ($adff) from module ice40hx8k (removing D path).
Adding SRST signal on $auto$ff.cc:266:slice$1237 ($dffe) from module ice40hx8k (D = $flatten\uart_inst.\uart_tx_inst.$procmux$715_Y, Q = \uart_inst.uart_tx_inst.txd_reg, rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$1228 ($dffe) from module ice40hx8k (D = $flatten\uart_inst.\uart_tx_inst.$procmux$683_Y [8], Q = \uart_inst.uart_tx_inst.data_reg [8], rval = 1'1).
Adding SRST signal on $auto$ff.cc:266:slice$1212 ($dffe) from module ice40hx8k (D = $flatten\uart_inst.\uart_tx_inst.$procmux$742_Y, Q = \uart_inst.uart_tx_inst.bit_cnt, rval = 4'1001).
Setting constant 0-bit at position 0 on $procdff$1207 ($dlatch) from module ice40hx8k.

17.27.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ice40hx8k..
Removed 14 unused cells and 57 unused wires.
<suppressed ~20 debug messages>

17.27.5. Rerunning OPT passes. (Removed registers in this run.)

17.27.6. Executing OPT_EXPR pass (perform const folding).
Optimizing module ice40hx8k.
<suppressed ~1 debug messages>

17.27.7. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ice40hx8k'.
Removed a total of 0 cells.

17.27.8. Executing OPT_DFF pass (perform DFF optimizations).

17.27.9. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ice40hx8k..

17.27.10. Finished fast OPT passes.

17.28. Executing MEMORY_MAP pass (converting memories to logic and flip-flops).
Mapping memory $flatten\top_inst.\U1.\SS_FSM.$auto$proc_rom.cc:150:do_switch$627 in module \ice40hx8k:
  created 16 $dff cells and 0 static cells of width 4.
  read interface: 0 $dff and 15 $mux cells.
  write interface: 0 write mux blocks.
Mapping memory $flatten\top_inst.\U1.\frqdiv.$auto$proc_rom.cc:150:do_switch$631 in module \ice40hx8k:
  created 16 $dff cells and 0 static cells of width 16.
  read interface: 0 $dff and 15 $mux cells.
  write interface: 0 write mux blocks.

17.29. Executing OPT pass (performing simple optimizations).

17.29.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module ice40hx8k.
<suppressed ~5 debug messages>

17.29.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ice40hx8k'.
Removed a total of 0 cells.

17.29.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \ice40hx8k..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~21 debug messages>

17.29.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \ice40hx8k.
    Consolidated identical input bits for $mux cell $memory$flatten\top_inst.\U1.\frqdiv.$auto$proc_rom.cc:150:do_switch$631$rdmux[0][3][1]$1522:
      Old ports: A=16'1001111110011110, B=16'1001011010101001, Y=$memory$flatten\top_inst.\U1.\frqdiv.$auto$proc_rom.cc:150:do_switch$631$rdmux[0][2][0]$b$1509
      New ports: A=2'10, B=2'01, Y=$memory$flatten\top_inst.\U1.\frqdiv.$auto$proc_rom.cc:150:do_switch$631$rdmux[0][2][0]$b$1509 [1:0]
      New connections: $memory$flatten\top_inst.\U1.\frqdiv.$auto$proc_rom.cc:150:do_switch$631$rdmux[0][2][0]$b$1509 [15:2] = { 4'1001 $memory$flatten\top_inst.\U1.\frqdiv.$auto$proc_rom.cc:150:do_switch$631$rdmux[0][2][0]$b$1509 [1] 2'11 $memory$flatten\top_inst.\U1.\frqdiv.$auto$proc_rom.cc:150:do_switch$631$rdmux[0][2][0]$b$1509 [1] 2'10 $memory$flatten\top_inst.\U1.\frqdiv.$auto$proc_rom.cc:150:do_switch$631$rdmux[0][2][0]$b$1509 [0] $memory$flatten\top_inst.\U1.\frqdiv.$auto$proc_rom.cc:150:do_switch$631$rdmux[0][2][0]$b$1509 [1] 1'1 $memory$flatten\top_inst.\U1.\frqdiv.$auto$proc_rom.cc:150:do_switch$631$rdmux[0][2][0]$b$1509 [1] }
    Consolidated identical input bits for $mux cell $memory$flatten\top_inst.\U1.\frqdiv.$auto$proc_rom.cc:150:do_switch$631$rdmux[0][3][0]$1519:
      Old ports: A=16'1011001100101100, B=16'1010100100011100, Y=$memory$flatten\top_inst.\U1.\frqdiv.$auto$proc_rom.cc:150:do_switch$631$rdmux[0][2][0]$a$1508
      New ports: A=2'10, B=2'01, Y=$memory$flatten\top_inst.\U1.\frqdiv.$auto$proc_rom.cc:150:do_switch$631$rdmux[0][2][0]$a$1508 [5:4]
      New connections: { $memory$flatten\top_inst.\U1.\frqdiv.$auto$proc_rom.cc:150:do_switch$631$rdmux[0][2][0]$a$1508 [15:6] $memory$flatten\top_inst.\U1.\frqdiv.$auto$proc_rom.cc:150:do_switch$631$rdmux[0][2][0]$a$1508 [3:0] } = { 3'101 $memory$flatten\top_inst.\U1.\frqdiv.$auto$proc_rom.cc:150:do_switch$631$rdmux[0][2][0]$a$1508 [5:4] 1'0 $memory$flatten\top_inst.\U1.\frqdiv.$auto$proc_rom.cc:150:do_switch$631$rdmux[0][2][0]$a$1508 [5] 7'1001100 }
    Consolidated identical input bits for $mux cell $memory$flatten\top_inst.\U1.\frqdiv.$auto$proc_rom.cc:150:do_switch$631$rdmux[0][3][5]$1534:
      Old ports: A=16'0110010010001110, B=16'0101111011101010, Y=$memory$flatten\top_inst.\U1.\frqdiv.$auto$proc_rom.cc:150:do_switch$631$rdmux[0][2][2]$b$1515
      New ports: A=2'01, B=2'10, Y={ $memory$flatten\top_inst.\U1.\frqdiv.$auto$proc_rom.cc:150:do_switch$631$rdmux[0][2][2]$b$1515 [5] $memory$flatten\top_inst.\U1.\frqdiv.$auto$proc_rom.cc:150:do_switch$631$rdmux[0][2][2]$b$1515 [2] }
      New connections: { $memory$flatten\top_inst.\U1.\frqdiv.$auto$proc_rom.cc:150:do_switch$631$rdmux[0][2][2]$b$1515 [15:6] $memory$flatten\top_inst.\U1.\frqdiv.$auto$proc_rom.cc:150:do_switch$631$rdmux[0][2][2]$b$1515 [4:3] $memory$flatten\top_inst.\U1.\frqdiv.$auto$proc_rom.cc:150:do_switch$631$rdmux[0][2][2]$b$1515 [1:0] } = { 2'01 $memory$flatten\top_inst.\U1.\frqdiv.$auto$proc_rom.cc:150:do_switch$631$rdmux[0][2][2]$b$1515 [2] $memory$flatten\top_inst.\U1.\frqdiv.$auto$proc_rom.cc:150:do_switch$631$rdmux[0][2][2]$b$1515 [5] $memory$flatten\top_inst.\U1.\frqdiv.$auto$proc_rom.cc:150:do_switch$631$rdmux[0][2][2]$b$1515 [5] 1'1 $memory$flatten\top_inst.\U1.\frqdiv.$auto$proc_rom.cc:150:do_switch$631$rdmux[0][2][2]$b$1515 [5] 2'01 $memory$flatten\top_inst.\U1.\frqdiv.$auto$proc_rom.cc:150:do_switch$631$rdmux[0][2][2]$b$1515 [5] 4'0110 }
    Consolidated identical input bits for $mux cell $memory$flatten\top_inst.\U1.\frqdiv.$auto$proc_rom.cc:150:do_switch$631$rdmux[0][3][6]$1537:
      Old ports: A=16'0101100110010101, B=16'0000000000000001, Y=$memory$flatten\top_inst.\U1.\frqdiv.$auto$proc_rom.cc:150:do_switch$631$rdmux[0][2][3]$a$1517
      New ports: A=1'1, B=1'0, Y=$memory$flatten\top_inst.\U1.\frqdiv.$auto$proc_rom.cc:150:do_switch$631$rdmux[0][2][3]$a$1517 [2]
      New connections: { $memory$flatten\top_inst.\U1.\frqdiv.$auto$proc_rom.cc:150:do_switch$631$rdmux[0][2][3]$a$1517 [15:3] $memory$flatten\top_inst.\U1.\frqdiv.$auto$proc_rom.cc:150:do_switch$631$rdmux[0][2][3]$a$1517 [1:0] } = { 1'0 $memory$flatten\top_inst.\U1.\frqdiv.$auto$proc_rom.cc:150:do_switch$631$rdmux[0][2][3]$a$1517 [2] 1'0 $memory$flatten\top_inst.\U1.\frqdiv.$auto$proc_rom.cc:150:do_switch$631$rdmux[0][2][3]$a$1517 [2] $memory$flatten\top_inst.\U1.\frqdiv.$auto$proc_rom.cc:150:do_switch$631$rdmux[0][2][3]$a$1517 [2] 2'00 $memory$flatten\top_inst.\U1.\frqdiv.$auto$proc_rom.cc:150:do_switch$631$rdmux[0][2][3]$a$1517 [2] $memory$flatten\top_inst.\U1.\frqdiv.$auto$proc_rom.cc:150:do_switch$631$rdmux[0][2][3]$a$1517 [2] 2'00 $memory$flatten\top_inst.\U1.\frqdiv.$auto$proc_rom.cc:150:do_switch$631$rdmux[0][2][3]$a$1517 [2] 3'001 }
    Consolidated identical input bits for $mux cell $memory$flatten\top_inst.\U1.\SS_FSM.$auto$proc_rom.cc:150:do_switch$627$rdmux[0][3][4]$1486:
      Old ports: A=4'1100, B=4'1111, Y=$memory$flatten\top_inst.\U1.\SS_FSM.$auto$proc_rom.cc:150:do_switch$627$rdmux[0][2][2]$a$1469
      New ports: A=1'0, B=1'1, Y=$memory$flatten\top_inst.\U1.\SS_FSM.$auto$proc_rom.cc:150:do_switch$627$rdmux[0][2][2]$a$1469 [0]
      New connections: $memory$flatten\top_inst.\U1.\SS_FSM.$auto$proc_rom.cc:150:do_switch$627$rdmux[0][2][2]$a$1469 [3:1] = { 2'11 $memory$flatten\top_inst.\U1.\SS_FSM.$auto$proc_rom.cc:150:do_switch$627$rdmux[0][2][2]$a$1469 [0] }
    Consolidated identical input bits for $mux cell $memory$flatten\top_inst.\U1.\SS_FSM.$auto$proc_rom.cc:150:do_switch$627$rdmux[0][3][3]$1483:
      Old ports: A=4'1001, B=4'1011, Y=$memory$flatten\top_inst.\U1.\SS_FSM.$auto$proc_rom.cc:150:do_switch$627$rdmux[0][2][1]$b$1467
      New ports: A=1'0, B=1'1, Y=$memory$flatten\top_inst.\U1.\SS_FSM.$auto$proc_rom.cc:150:do_switch$627$rdmux[0][2][1]$b$1467 [1]
      New connections: { $memory$flatten\top_inst.\U1.\SS_FSM.$auto$proc_rom.cc:150:do_switch$627$rdmux[0][2][1]$b$1467 [3:2] $memory$flatten\top_inst.\U1.\SS_FSM.$auto$proc_rom.cc:150:do_switch$627$rdmux[0][2][1]$b$1467 [0] } = 3'101
    Consolidated identical input bits for $mux cell $memory$flatten\top_inst.\U1.\SS_FSM.$auto$proc_rom.cc:150:do_switch$627$rdmux[0][3][2]$1480:
      Old ports: A=4'0101, B=4'0111, Y=$memory$flatten\top_inst.\U1.\SS_FSM.$auto$proc_rom.cc:150:do_switch$627$rdmux[0][2][1]$a$1466
      New ports: A=1'0, B=1'1, Y=$memory$flatten\top_inst.\U1.\SS_FSM.$auto$proc_rom.cc:150:do_switch$627$rdmux[0][2][1]$a$1466 [1]
      New connections: { $memory$flatten\top_inst.\U1.\SS_FSM.$auto$proc_rom.cc:150:do_switch$627$rdmux[0][2][1]$a$1466 [3:2] $memory$flatten\top_inst.\U1.\SS_FSM.$auto$proc_rom.cc:150:do_switch$627$rdmux[0][2][1]$a$1466 [0] } = 3'011
    Consolidated identical input bits for $mux cell $memory$flatten\top_inst.\U1.\SS_FSM.$auto$proc_rom.cc:150:do_switch$627$rdmux[0][3][1]$1477:
      Old ports: A=4'0010, B=4'0100, Y=$memory$flatten\top_inst.\U1.\SS_FSM.$auto$proc_rom.cc:150:do_switch$627$rdmux[0][2][0]$b$1464
      New ports: A=2'01, B=2'10, Y=$memory$flatten\top_inst.\U1.\SS_FSM.$auto$proc_rom.cc:150:do_switch$627$rdmux[0][2][0]$b$1464 [2:1]
      New connections: { $memory$flatten\top_inst.\U1.\SS_FSM.$auto$proc_rom.cc:150:do_switch$627$rdmux[0][2][0]$b$1464 [3] $memory$flatten\top_inst.\U1.\SS_FSM.$auto$proc_rom.cc:150:do_switch$627$rdmux[0][2][0]$b$1464 [0] } = 2'00
    Consolidated identical input bits for $mux cell $memory$flatten\top_inst.\U1.\SS_FSM.$auto$proc_rom.cc:150:do_switch$627$rdmux[0][3][0]$1474:
      Old ports: A=4'1111, B=4'0000, Y=$memory$flatten\top_inst.\U1.\SS_FSM.$auto$proc_rom.cc:150:do_switch$627$rdmux[0][2][0]$a$1463
      New ports: A=1'1, B=1'0, Y=$memory$flatten\top_inst.\U1.\SS_FSM.$auto$proc_rom.cc:150:do_switch$627$rdmux[0][2][0]$a$1463 [0]
      New connections: $memory$flatten\top_inst.\U1.\SS_FSM.$auto$proc_rom.cc:150:do_switch$627$rdmux[0][2][0]$a$1463 [3:1] = { $memory$flatten\top_inst.\U1.\SS_FSM.$auto$proc_rom.cc:150:do_switch$627$rdmux[0][2][0]$a$1463 [0] $memory$flatten\top_inst.\U1.\SS_FSM.$auto$proc_rom.cc:150:do_switch$627$rdmux[0][2][0]$a$1463 [0] $memory$flatten\top_inst.\U1.\SS_FSM.$auto$proc_rom.cc:150:do_switch$627$rdmux[0][2][0]$a$1463 [0] }
    Consolidated identical input bits for $mux cell $memory$flatten\top_inst.\U1.\frqdiv.$auto$proc_rom.cc:150:do_switch$631$rdmux[0][3][3]$1528:
      Old ports: A=16'0111111010110000, B=16'0111011110010101, Y=$memory$flatten\top_inst.\U1.\frqdiv.$auto$proc_rom.cc:150:do_switch$631$rdmux[0][2][1]$b$1512
      New ports: A=2'10, B=2'01, Y={ $memory$flatten\top_inst.\U1.\frqdiv.$auto$proc_rom.cc:150:do_switch$631$rdmux[0][2][1]$b$1512 [5] $memory$flatten\top_inst.\U1.\frqdiv.$auto$proc_rom.cc:150:do_switch$631$rdmux[0][2][1]$b$1512 [0] }
      New connections: { $memory$flatten\top_inst.\U1.\frqdiv.$auto$proc_rom.cc:150:do_switch$631$rdmux[0][2][1]$b$1512 [15:6] $memory$flatten\top_inst.\U1.\frqdiv.$auto$proc_rom.cc:150:do_switch$631$rdmux[0][2][1]$b$1512 [4:1] } = { 4'0111 $memory$flatten\top_inst.\U1.\frqdiv.$auto$proc_rom.cc:150:do_switch$631$rdmux[0][2][1]$b$1512 [5] 2'11 $memory$flatten\top_inst.\U1.\frqdiv.$auto$proc_rom.cc:150:do_switch$631$rdmux[0][2][1]$b$1512 [0] 4'1010 $memory$flatten\top_inst.\U1.\frqdiv.$auto$proc_rom.cc:150:do_switch$631$rdmux[0][2][1]$b$1512 [0] 1'0 }
    Consolidated identical input bits for $mux cell $memory$flatten\top_inst.\U1.\frqdiv.$auto$proc_rom.cc:150:do_switch$631$rdmux[0][3][4]$1531:
      Old ports: A=16'0111000011011111, B=16'0110101010001000, Y=$memory$flatten\top_inst.\U1.\frqdiv.$auto$proc_rom.cc:150:do_switch$631$rdmux[0][2][2]$a$1514
      New ports: A=2'01, B=2'10, Y={ $memory$flatten\top_inst.\U1.\frqdiv.$auto$proc_rom.cc:150:do_switch$631$rdmux[0][2][2]$a$1514 [9] $memory$flatten\top_inst.\U1.\frqdiv.$auto$proc_rom.cc:150:do_switch$631$rdmux[0][2][2]$a$1514 [0] }
      New connections: { $memory$flatten\top_inst.\U1.\frqdiv.$auto$proc_rom.cc:150:do_switch$631$rdmux[0][2][2]$a$1514 [15:10] $memory$flatten\top_inst.\U1.\frqdiv.$auto$proc_rom.cc:150:do_switch$631$rdmux[0][2][2]$a$1514 [8:1] } = { 3'011 $memory$flatten\top_inst.\U1.\frqdiv.$auto$proc_rom.cc:150:do_switch$631$rdmux[0][2][2]$a$1514 [0] $memory$flatten\top_inst.\U1.\frqdiv.$auto$proc_rom.cc:150:do_switch$631$rdmux[0][2][2]$a$1514 [9] 3'001 $memory$flatten\top_inst.\U1.\frqdiv.$auto$proc_rom.cc:150:do_switch$631$rdmux[0][2][2]$a$1514 [0] 1'0 $memory$flatten\top_inst.\U1.\frqdiv.$auto$proc_rom.cc:150:do_switch$631$rdmux[0][2][2]$a$1514 [0] 1'1 $memory$flatten\top_inst.\U1.\frqdiv.$auto$proc_rom.cc:150:do_switch$631$rdmux[0][2][2]$a$1514 [0] $memory$flatten\top_inst.\U1.\frqdiv.$auto$proc_rom.cc:150:do_switch$631$rdmux[0][2][2]$a$1514 [0] }
    Consolidated identical input bits for $mux cell $flatten\top_inst.\U1.\SS_FSM.$ternary$source/sound_series_fsm.sv:30$134:
      Old ports: A=3'011, B=3'100, Y=$auto$wreduce.cc:455:run$1270 [2:0]
      New ports: A=2'01, B=2'10, Y={ $auto$wreduce.cc:455:run$1270 [2] $auto$wreduce.cc:455:run$1270 [0] }
      New connections: $auto$wreduce.cc:455:run$1270 [1] = $auto$wreduce.cc:455:run$1270 [0]
    Consolidated identical input bits for $mux cell $flatten\top_inst.\U1.\SS_FSM.$ternary$source/sound_series_fsm.sv:34$138:
      Old ports: A=4'0111, B=4'1000, Y=$flatten\top_inst.\U1.\SS_FSM.$ternary$source/sound_series_fsm.sv:34$138_Y
      New ports: A=2'01, B=2'10, Y={ $flatten\top_inst.\U1.\SS_FSM.$ternary$source/sound_series_fsm.sv:34$138_Y [3] $flatten\top_inst.\U1.\SS_FSM.$ternary$source/sound_series_fsm.sv:34$138_Y [0] }
      New connections: $flatten\top_inst.\U1.\SS_FSM.$ternary$source/sound_series_fsm.sv:34$138_Y [2:1] = { $flatten\top_inst.\U1.\SS_FSM.$ternary$source/sound_series_fsm.sv:34$138_Y [0] $flatten\top_inst.\U1.\SS_FSM.$ternary$source/sound_series_fsm.sv:34$138_Y [0] }
    Consolidated identical input bits for $mux cell $flatten\top_inst.\U1.\SS_FSM.$ternary$source/sound_series_fsm.sv:35$139:
      Old ports: A=4'1000, B=4'0000, Y=$flatten\top_inst.\U1.\SS_FSM.$ternary$source/sound_series_fsm.sv:35$139_Y
      New ports: A=1'1, B=1'0, Y=$flatten\top_inst.\U1.\SS_FSM.$ternary$source/sound_series_fsm.sv:35$139_Y [3]
      New connections: $flatten\top_inst.\U1.\SS_FSM.$ternary$source/sound_series_fsm.sv:35$139_Y [2:0] = 3'000
    Consolidated identical input bits for $mux cell $memory$flatten\top_inst.\U1.\frqdiv.$auto$proc_rom.cc:150:do_switch$631$rdmux[0][3][2]$1525:
      Old ports: A=16'1000111000110100, B=16'1000011000111010, Y=$memory$flatten\top_inst.\U1.\frqdiv.$auto$proc_rom.cc:150:do_switch$631$rdmux[0][2][1]$a$1511
      New ports: A=2'10, B=2'01, Y=$memory$flatten\top_inst.\U1.\frqdiv.$auto$proc_rom.cc:150:do_switch$631$rdmux[0][2][1]$a$1511 [2:1]
      New connections: { $memory$flatten\top_inst.\U1.\frqdiv.$auto$proc_rom.cc:150:do_switch$631$rdmux[0][2][1]$a$1511 [15:3] $memory$flatten\top_inst.\U1.\frqdiv.$auto$proc_rom.cc:150:do_switch$631$rdmux[0][2][1]$a$1511 [0] } = { 4'1000 $memory$flatten\top_inst.\U1.\frqdiv.$auto$proc_rom.cc:150:do_switch$631$rdmux[0][2][1]$a$1511 [2] 7'1100011 $memory$flatten\top_inst.\U1.\frqdiv.$auto$proc_rom.cc:150:do_switch$631$rdmux[0][2][1]$a$1511 [1] 1'0 }
    Consolidated identical input bits for $mux cell $flatten\top_inst.\U1.\mode_FSM.$ternary$source/mode_fsm.sv:20$88:
      Old ports: A=2'01, B=2'11, Y=$flatten\top_inst.\U1.\mode_FSM.$ternary$source/mode_fsm.sv:20$88_Y
      New ports: A=1'0, B=1'1, Y=$flatten\top_inst.\U1.\mode_FSM.$ternary$source/mode_fsm.sv:20$88_Y [1]
      New connections: $flatten\top_inst.\U1.\mode_FSM.$ternary$source/mode_fsm.sv:20$88_Y [0] = 1'1
    Consolidated identical input bits for $mux cell $flatten\top_inst.\U1.\mode_FSM.$ternary$source/mode_fsm.sv:22$90:
      Old ports: A=2'10, B=2'00, Y=$flatten\top_inst.\U1.\mode_FSM.$ternary$source/mode_fsm.sv:22$90_Y
      New ports: A=1'1, B=1'0, Y=$flatten\top_inst.\U1.\mode_FSM.$ternary$source/mode_fsm.sv:22$90_Y [1]
      New connections: $flatten\top_inst.\U1.\mode_FSM.$ternary$source/mode_fsm.sv:22$90_Y [0] = 1'0
    Consolidated identical input bits for $mux cell $flatten\top_inst.\U1.\seq_div.$procmux$952:
      Old ports: A={ \top_inst.U1.seq_div.R [22:0] 1'0 }, B={ $flatten\top_inst.\U1.\seq_div.$sub$source/sequential_div.sv:102$123_Y [23:8] \top_inst.U1.seq_div.R [6:0] 1'0 }, Y=$flatten\top_inst.\U1.\seq_div.$3\next_r[23:0]
      New ports: A=\top_inst.U1.seq_div.R [22:7], B=$flatten\top_inst.\U1.\seq_div.$sub$source/sequential_div.sv:102$123_Y [23:8], Y=$flatten\top_inst.\U1.\seq_div.$3\next_r[23:0] [23:8]
      New connections: $flatten\top_inst.\U1.\seq_div.$3\next_r[23:0] [7:0] = { \top_inst.U1.seq_div.R [6:0] 1'0 }
    Consolidated identical input bits for $mux cell $flatten\top_inst.\U1.\waveshaper.$ternary$source/waveshaper.sv:17$147:
      Old ports: A={ \top_inst.U1.seq_div.q_out [6:0] 1'0 }, B={ \top_inst.U1.waveshaper.int_2 [7:1] 1'0 }, Y=$flatten\top_inst.\U1.\waveshaper.$ternary$source/waveshaper.sv:17$147_Y
      New ports: A=\top_inst.U1.seq_div.q_out [6:0], B=\top_inst.U1.waveshaper.int_2 [7:1], Y=$flatten\top_inst.\U1.\waveshaper.$ternary$source/waveshaper.sv:17$147_Y [7:1]
      New connections: $flatten\top_inst.\U1.\waveshaper.$ternary$source/waveshaper.sv:17$147_Y [0] = 1'0
    Consolidated identical input bits for $mux cell $flatten\top_inst.\U1.\waveshaper.$ternary$source/waveshaper.sv:18$149:
      Old ports: A=8'00000000, B=8'11111111, Y=$flatten\top_inst.\U1.\waveshaper.$ternary$source/waveshaper.sv:18$149_Y [7:0]
      New ports: A=1'0, B=1'1, Y=$flatten\top_inst.\U1.\waveshaper.$ternary$source/waveshaper.sv:18$149_Y [0]
      New connections: $flatten\top_inst.\U1.\waveshaper.$ternary$source/waveshaper.sv:18$149_Y [7:1] = { $flatten\top_inst.\U1.\waveshaper.$ternary$source/waveshaper.sv:18$149_Y [0] $flatten\top_inst.\U1.\waveshaper.$ternary$source/waveshaper.sv:18$149_Y [0] $flatten\top_inst.\U1.\waveshaper.$ternary$source/waveshaper.sv:18$149_Y [0] $flatten\top_inst.\U1.\waveshaper.$ternary$source/waveshaper.sv:18$149_Y [0] $flatten\top_inst.\U1.\waveshaper.$ternary$source/waveshaper.sv:18$149_Y [0] $flatten\top_inst.\U1.\waveshaper.$ternary$source/waveshaper.sv:18$149_Y [0] $flatten\top_inst.\U1.\waveshaper.$ternary$source/waveshaper.sv:18$149_Y [0] }
    Consolidated identical input bits for $mux cell $flatten\uart_inst.\uart_tx_inst.$procmux$699:
      Old ports: A=19'0000000000000100000, B=19'0000000000000011111, Y=$flatten\uart_inst.\uart_tx_inst.$procmux$699_Y
      New ports: A=2'10, B=2'01, Y={ $flatten\uart_inst.\uart_tx_inst.$procmux$699_Y [5] $flatten\uart_inst.\uart_tx_inst.$procmux$699_Y [0] }
      New connections: { $flatten\uart_inst.\uart_tx_inst.$procmux$699_Y [18:6] $flatten\uart_inst.\uart_tx_inst.$procmux$699_Y [4:1] } = { 13'0000000000000 $flatten\uart_inst.\uart_tx_inst.$procmux$699_Y [0] $flatten\uart_inst.\uart_tx_inst.$procmux$699_Y [0] $flatten\uart_inst.\uart_tx_inst.$procmux$699_Y [0] $flatten\uart_inst.\uart_tx_inst.$procmux$699_Y [0] }
  Optimizing cells in module \ice40hx8k.
    Consolidated identical input bits for $mux cell $memory$flatten\top_inst.\U1.\frqdiv.$auto$proc_rom.cc:150:do_switch$631$rdmux[0][2][3]$1516:
      Old ports: A=$memory$flatten\top_inst.\U1.\frqdiv.$auto$proc_rom.cc:150:do_switch$631$rdmux[0][2][3]$a$1517, B=16'0000000000000001, Y=$memory$flatten\top_inst.\U1.\frqdiv.$auto$proc_rom.cc:150:do_switch$631$rdmux[0][1][1]$b$1506
      New ports: A=$memory$flatten\top_inst.\U1.\frqdiv.$auto$proc_rom.cc:150:do_switch$631$rdmux[0][2][3]$a$1517 [2], B=1'0, Y=$memory$flatten\top_inst.\U1.\frqdiv.$auto$proc_rom.cc:150:do_switch$631$rdmux[0][1][1]$b$1506 [2]
      New connections: { $memory$flatten\top_inst.\U1.\frqdiv.$auto$proc_rom.cc:150:do_switch$631$rdmux[0][1][1]$b$1506 [15:3] $memory$flatten\top_inst.\U1.\frqdiv.$auto$proc_rom.cc:150:do_switch$631$rdmux[0][1][1]$b$1506 [1:0] } = { 1'0 $memory$flatten\top_inst.\U1.\frqdiv.$auto$proc_rom.cc:150:do_switch$631$rdmux[0][1][1]$b$1506 [2] 1'0 $memory$flatten\top_inst.\U1.\frqdiv.$auto$proc_rom.cc:150:do_switch$631$rdmux[0][1][1]$b$1506 [2] $memory$flatten\top_inst.\U1.\frqdiv.$auto$proc_rom.cc:150:do_switch$631$rdmux[0][1][1]$b$1506 [2] 2'00 $memory$flatten\top_inst.\U1.\frqdiv.$auto$proc_rom.cc:150:do_switch$631$rdmux[0][1][1]$b$1506 [2] $memory$flatten\top_inst.\U1.\frqdiv.$auto$proc_rom.cc:150:do_switch$631$rdmux[0][1][1]$b$1506 [2] 2'00 $memory$flatten\top_inst.\U1.\frqdiv.$auto$proc_rom.cc:150:do_switch$631$rdmux[0][1][1]$b$1506 [2] 3'001 }
    Consolidated identical input bits for $mux cell $memory$flatten\top_inst.\U1.\frqdiv.$auto$proc_rom.cc:150:do_switch$631$rdmux[0][2][2]$1513:
      Old ports: A=$memory$flatten\top_inst.\U1.\frqdiv.$auto$proc_rom.cc:150:do_switch$631$rdmux[0][2][2]$a$1514, B=$memory$flatten\top_inst.\U1.\frqdiv.$auto$proc_rom.cc:150:do_switch$631$rdmux[0][2][2]$b$1515, Y=$memory$flatten\top_inst.\U1.\frqdiv.$auto$proc_rom.cc:150:do_switch$631$rdmux[0][1][1]$a$1505
      New ports: A={ 2'10 $memory$flatten\top_inst.\U1.\frqdiv.$auto$proc_rom.cc:150:do_switch$631$rdmux[0][2][2]$a$1514 [9] $memory$flatten\top_inst.\U1.\frqdiv.$auto$proc_rom.cc:150:do_switch$631$rdmux[0][2][2]$a$1514 [0] 1'0 $memory$flatten\top_inst.\U1.\frqdiv.$auto$proc_rom.cc:150:do_switch$631$rdmux[0][2][2]$a$1514 [0] $memory$flatten\top_inst.\U1.\frqdiv.$auto$proc_rom.cc:150:do_switch$631$rdmux[0][2][2]$a$1514 [0] $memory$flatten\top_inst.\U1.\frqdiv.$auto$proc_rom.cc:150:do_switch$631$rdmux[0][2][2]$a$1514 [0] }, B={ $memory$flatten\top_inst.\U1.\frqdiv.$auto$proc_rom.cc:150:do_switch$631$rdmux[0][2][2]$b$1515 [2] 1'1 $memory$flatten\top_inst.\U1.\frqdiv.$auto$proc_rom.cc:150:do_switch$631$rdmux[0][2][2]$b$1515 [5] $memory$flatten\top_inst.\U1.\frqdiv.$auto$proc_rom.cc:150:do_switch$631$rdmux[0][2][2]$b$1515 [5] $memory$flatten\top_inst.\U1.\frqdiv.$auto$proc_rom.cc:150:do_switch$631$rdmux[0][2][2]$b$1515 [5] $memory$flatten\top_inst.\U1.\frqdiv.$auto$proc_rom.cc:150:do_switch$631$rdmux[0][2][2]$b$1515 [2] 2'10 }, Y={ $memory$flatten\top_inst.\U1.\frqdiv.$auto$proc_rom.cc:150:do_switch$631$rdmux[0][1][1]$a$1505 [13] $memory$flatten\top_inst.\U1.\frqdiv.$auto$proc_rom.cc:150:do_switch$631$rdmux[0][1][1]$a$1505 [10:9] $memory$flatten\top_inst.\U1.\frqdiv.$auto$proc_rom.cc:150:do_switch$631$rdmux[0][1][1]$a$1505 [6:5] $memory$flatten\top_inst.\U1.\frqdiv.$auto$proc_rom.cc:150:do_switch$631$rdmux[0][1][1]$a$1505 [2:0] }
      New connections: { $memory$flatten\top_inst.\U1.\frqdiv.$auto$proc_rom.cc:150:do_switch$631$rdmux[0][1][1]$a$1505 [15:14] $memory$flatten\top_inst.\U1.\frqdiv.$auto$proc_rom.cc:150:do_switch$631$rdmux[0][1][1]$a$1505 [12:11] $memory$flatten\top_inst.\U1.\frqdiv.$auto$proc_rom.cc:150:do_switch$631$rdmux[0][1][1]$a$1505 [8:7] $memory$flatten\top_inst.\U1.\frqdiv.$auto$proc_rom.cc:150:do_switch$631$rdmux[0][1][1]$a$1505 [4:3] } = { 2'01 $memory$flatten\top_inst.\U1.\frqdiv.$auto$proc_rom.cc:150:do_switch$631$rdmux[0][1][1]$a$1505 [6] $memory$flatten\top_inst.\U1.\frqdiv.$auto$proc_rom.cc:150:do_switch$631$rdmux[0][1][1]$a$1505 [9] 2'01 $memory$flatten\top_inst.\U1.\frqdiv.$auto$proc_rom.cc:150:do_switch$631$rdmux[0][1][1]$a$1505 [0] 1'1 }
    Consolidated identical input bits for $mux cell $memory$flatten\top_inst.\U1.\frqdiv.$auto$proc_rom.cc:150:do_switch$631$rdmux[0][2][1]$1510:
      Old ports: A=$memory$flatten\top_inst.\U1.\frqdiv.$auto$proc_rom.cc:150:do_switch$631$rdmux[0][2][1]$a$1511, B=$memory$flatten\top_inst.\U1.\frqdiv.$auto$proc_rom.cc:150:do_switch$631$rdmux[0][2][1]$b$1512, Y=$memory$flatten\top_inst.\U1.\frqdiv.$auto$proc_rom.cc:150:do_switch$631$rdmux[0][1][0]$b$1503
      New ports: A={ 1'1 $memory$flatten\top_inst.\U1.\frqdiv.$auto$proc_rom.cc:150:do_switch$631$rdmux[0][2][1]$a$1511 [2] 2'01 $memory$flatten\top_inst.\U1.\frqdiv.$auto$proc_rom.cc:150:do_switch$631$rdmux[0][2][1]$a$1511 [2:1] 1'0 }, B={ 1'0 $memory$flatten\top_inst.\U1.\frqdiv.$auto$proc_rom.cc:150:do_switch$631$rdmux[0][2][1]$b$1512 [5] 1'1 $memory$flatten\top_inst.\U1.\frqdiv.$auto$proc_rom.cc:150:do_switch$631$rdmux[0][2][1]$b$1512 [5] $memory$flatten\top_inst.\U1.\frqdiv.$auto$proc_rom.cc:150:do_switch$631$rdmux[0][2][1]$b$1512 [0] 1'0 $memory$flatten\top_inst.\U1.\frqdiv.$auto$proc_rom.cc:150:do_switch$631$rdmux[0][2][1]$b$1512 [0] }, Y={ $memory$flatten\top_inst.\U1.\frqdiv.$auto$proc_rom.cc:150:do_switch$631$rdmux[0][1][0]$b$1503 [15] $memory$flatten\top_inst.\U1.\frqdiv.$auto$proc_rom.cc:150:do_switch$631$rdmux[0][1][0]$b$1503 [11] $memory$flatten\top_inst.\U1.\frqdiv.$auto$proc_rom.cc:150:do_switch$631$rdmux[0][1][0]$b$1503 [7] $memory$flatten\top_inst.\U1.\frqdiv.$auto$proc_rom.cc:150:do_switch$631$rdmux[0][1][0]$b$1503 [5] $memory$flatten\top_inst.\U1.\frqdiv.$auto$proc_rom.cc:150:do_switch$631$rdmux[0][1][0]$b$1503 [2:0] }
      New connections: { $memory$flatten\top_inst.\U1.\frqdiv.$auto$proc_rom.cc:150:do_switch$631$rdmux[0][1][0]$b$1503 [14:12] $memory$flatten\top_inst.\U1.\frqdiv.$auto$proc_rom.cc:150:do_switch$631$rdmux[0][1][0]$b$1503 [10:8] $memory$flatten\top_inst.\U1.\frqdiv.$auto$proc_rom.cc:150:do_switch$631$rdmux[0][1][0]$b$1503 [6] $memory$flatten\top_inst.\U1.\frqdiv.$auto$proc_rom.cc:150:do_switch$631$rdmux[0][1][0]$b$1503 [4:3] } = { $memory$flatten\top_inst.\U1.\frqdiv.$auto$proc_rom.cc:150:do_switch$631$rdmux[0][1][0]$b$1503 [7] $memory$flatten\top_inst.\U1.\frqdiv.$auto$proc_rom.cc:150:do_switch$631$rdmux[0][1][0]$b$1503 [7] $memory$flatten\top_inst.\U1.\frqdiv.$auto$proc_rom.cc:150:do_switch$631$rdmux[0][1][0]$b$1503 [7] 2'11 $memory$flatten\top_inst.\U1.\frqdiv.$auto$proc_rom.cc:150:do_switch$631$rdmux[0][1][0]$b$1503 [0] 2'01 $memory$flatten\top_inst.\U1.\frqdiv.$auto$proc_rom.cc:150:do_switch$631$rdmux[0][1][0]$b$1503 [1] }
    Consolidated identical input bits for $mux cell $memory$flatten\top_inst.\U1.\frqdiv.$auto$proc_rom.cc:150:do_switch$631$rdmux[0][2][0]$1507:
      Old ports: A=$memory$flatten\top_inst.\U1.\frqdiv.$auto$proc_rom.cc:150:do_switch$631$rdmux[0][2][0]$a$1508, B=$memory$flatten\top_inst.\U1.\frqdiv.$auto$proc_rom.cc:150:do_switch$631$rdmux[0][2][0]$b$1509, Y=$memory$flatten\top_inst.\U1.\frqdiv.$auto$proc_rom.cc:150:do_switch$631$rdmux[0][1][0]$a$1502
      New ports: A={ 1'1 $memory$flatten\top_inst.\U1.\frqdiv.$auto$proc_rom.cc:150:do_switch$631$rdmux[0][2][0]$a$1508 [5] 1'0 $memory$flatten\top_inst.\U1.\frqdiv.$auto$proc_rom.cc:150:do_switch$631$rdmux[0][2][0]$a$1508 [5:4] 3'100 }, B={ 3'011 $memory$flatten\top_inst.\U1.\frqdiv.$auto$proc_rom.cc:150:do_switch$631$rdmux[0][2][0]$b$1509 [0] $memory$flatten\top_inst.\U1.\frqdiv.$auto$proc_rom.cc:150:do_switch$631$rdmux[0][2][0]$b$1509 [1] $memory$flatten\top_inst.\U1.\frqdiv.$auto$proc_rom.cc:150:do_switch$631$rdmux[0][2][0]$b$1509 [1] $memory$flatten\top_inst.\U1.\frqdiv.$auto$proc_rom.cc:150:do_switch$631$rdmux[0][2][0]$b$1509 [1:0] }, Y={ $memory$flatten\top_inst.\U1.\frqdiv.$auto$proc_rom.cc:150:do_switch$631$rdmux[0][1][0]$a$1502 [13] $memory$flatten\top_inst.\U1.\frqdiv.$auto$proc_rom.cc:150:do_switch$631$rdmux[0][1][0]$a$1502 [9] $memory$flatten\top_inst.\U1.\frqdiv.$auto$proc_rom.cc:150:do_switch$631$rdmux[0][1][0]$a$1502 [7] $memory$flatten\top_inst.\U1.\frqdiv.$auto$proc_rom.cc:150:do_switch$631$rdmux[0][1][0]$a$1502 [5:4] $memory$flatten\top_inst.\U1.\frqdiv.$auto$proc_rom.cc:150:do_switch$631$rdmux[0][1][0]$a$1502 [2:0] }
      New connections: { $memory$flatten\top_inst.\U1.\frqdiv.$auto$proc_rom.cc:150:do_switch$631$rdmux[0][1][0]$a$1502 [15:14] $memory$flatten\top_inst.\U1.\frqdiv.$auto$proc_rom.cc:150:do_switch$631$rdmux[0][1][0]$a$1502 [12:10] $memory$flatten\top_inst.\U1.\frqdiv.$auto$proc_rom.cc:150:do_switch$631$rdmux[0][1][0]$a$1502 [8] $memory$flatten\top_inst.\U1.\frqdiv.$auto$proc_rom.cc:150:do_switch$631$rdmux[0][1][0]$a$1502 [6] $memory$flatten\top_inst.\U1.\frqdiv.$auto$proc_rom.cc:150:do_switch$631$rdmux[0][1][0]$a$1502 [3] } = { 2'10 $memory$flatten\top_inst.\U1.\frqdiv.$auto$proc_rom.cc:150:do_switch$631$rdmux[0][1][0]$a$1502 [9] $memory$flatten\top_inst.\U1.\frqdiv.$auto$proc_rom.cc:150:do_switch$631$rdmux[0][1][0]$a$1502 [4] $memory$flatten\top_inst.\U1.\frqdiv.$auto$proc_rom.cc:150:do_switch$631$rdmux[0][1][0]$a$1502 [7] $memory$flatten\top_inst.\U1.\frqdiv.$auto$proc_rom.cc:150:do_switch$631$rdmux[0][1][0]$a$1502 [2] 2'01 }
    Consolidated identical input bits for $mux cell $memory$flatten\top_inst.\U1.\SS_FSM.$auto$proc_rom.cc:150:do_switch$627$rdmux[0][2][2]$1468:
      Old ports: A=$memory$flatten\top_inst.\U1.\SS_FSM.$auto$proc_rom.cc:150:do_switch$627$rdmux[0][2][2]$a$1469, B=4'1111, Y=$memory$flatten\top_inst.\U1.\SS_FSM.$auto$proc_rom.cc:150:do_switch$627$rdmux[0][1][1]$a$1460
      New ports: A=$memory$flatten\top_inst.\U1.\SS_FSM.$auto$proc_rom.cc:150:do_switch$627$rdmux[0][2][2]$a$1469 [0], B=1'1, Y=$memory$flatten\top_inst.\U1.\SS_FSM.$auto$proc_rom.cc:150:do_switch$627$rdmux[0][1][1]$a$1460 [0]
      New connections: $memory$flatten\top_inst.\U1.\SS_FSM.$auto$proc_rom.cc:150:do_switch$627$rdmux[0][1][1]$a$1460 [3:1] = { 2'11 $memory$flatten\top_inst.\U1.\SS_FSM.$auto$proc_rom.cc:150:do_switch$627$rdmux[0][1][1]$a$1460 [0] }
    Consolidated identical input bits for $mux cell $memory$flatten\top_inst.\U1.\SS_FSM.$auto$proc_rom.cc:150:do_switch$627$rdmux[0][2][1]$1465:
      Old ports: A=$memory$flatten\top_inst.\U1.\SS_FSM.$auto$proc_rom.cc:150:do_switch$627$rdmux[0][2][1]$a$1466, B=$memory$flatten\top_inst.\U1.\SS_FSM.$auto$proc_rom.cc:150:do_switch$627$rdmux[0][2][1]$b$1467, Y=$memory$flatten\top_inst.\U1.\SS_FSM.$auto$proc_rom.cc:150:do_switch$627$rdmux[0][1][0]$b$1458
      New ports: A={ 2'01 $memory$flatten\top_inst.\U1.\SS_FSM.$auto$proc_rom.cc:150:do_switch$627$rdmux[0][2][1]$a$1466 [1] }, B={ 2'10 $memory$flatten\top_inst.\U1.\SS_FSM.$auto$proc_rom.cc:150:do_switch$627$rdmux[0][2][1]$b$1467 [1] }, Y=$memory$flatten\top_inst.\U1.\SS_FSM.$auto$proc_rom.cc:150:do_switch$627$rdmux[0][1][0]$b$1458 [3:1]
      New connections: $memory$flatten\top_inst.\U1.\SS_FSM.$auto$proc_rom.cc:150:do_switch$627$rdmux[0][1][0]$b$1458 [0] = 1'1
    Consolidated identical input bits for $mux cell $memory$flatten\top_inst.\U1.\SS_FSM.$auto$proc_rom.cc:150:do_switch$627$rdmux[0][2][0]$1462:
      Old ports: A=$memory$flatten\top_inst.\U1.\SS_FSM.$auto$proc_rom.cc:150:do_switch$627$rdmux[0][2][0]$a$1463, B=$memory$flatten\top_inst.\U1.\SS_FSM.$auto$proc_rom.cc:150:do_switch$627$rdmux[0][2][0]$b$1464, Y=$memory$flatten\top_inst.\U1.\SS_FSM.$auto$proc_rom.cc:150:do_switch$627$rdmux[0][1][0]$a$1457
      New ports: A={ $memory$flatten\top_inst.\U1.\SS_FSM.$auto$proc_rom.cc:150:do_switch$627$rdmux[0][2][0]$a$1463 [0] $memory$flatten\top_inst.\U1.\SS_FSM.$auto$proc_rom.cc:150:do_switch$627$rdmux[0][2][0]$a$1463 [0] $memory$flatten\top_inst.\U1.\SS_FSM.$auto$proc_rom.cc:150:do_switch$627$rdmux[0][2][0]$a$1463 [0] }, B={ $memory$flatten\top_inst.\U1.\SS_FSM.$auto$proc_rom.cc:150:do_switch$627$rdmux[0][2][0]$b$1464 [2:1] 1'0 }, Y=$memory$flatten\top_inst.\U1.\SS_FSM.$auto$proc_rom.cc:150:do_switch$627$rdmux[0][1][0]$a$1457 [2:0]
      New connections: $memory$flatten\top_inst.\U1.\SS_FSM.$auto$proc_rom.cc:150:do_switch$627$rdmux[0][1][0]$a$1457 [3] = $memory$flatten\top_inst.\U1.\SS_FSM.$auto$proc_rom.cc:150:do_switch$627$rdmux[0][1][0]$a$1457 [0]
    Consolidated identical input bits for $mux cell $flatten\top_inst.\U1.\seq_div.$procmux$960:
      Old ports: A={ \top_inst.U1.seq_div.dividend 8'00000000 }, B=$flatten\top_inst.\U1.\seq_div.$3\next_r[23:0], Y=\top_inst.U1.seq_div.next_r
      New ports: A={ \top_inst.U1.seq_div.dividend 7'0000000 }, B={ $flatten\top_inst.\U1.\seq_div.$3\next_r[23:0] [23:8] \top_inst.U1.seq_div.R [6:0] }, Y=\top_inst.U1.seq_div.next_r [23:1]
      New connections: \top_inst.U1.seq_div.next_r [0] = 1'0
    Consolidated identical input bits for $mux cell $flatten\uart_inst.\uart_tx_inst.$procmux$704:
      Old ports: A=$flatten\uart_inst.\uart_tx_inst.$procmux$699_Y, B=19'0000000000000011111, Y=$flatten\uart_inst.\uart_tx_inst.$procmux$704_Y
      New ports: A={ $flatten\uart_inst.\uart_tx_inst.$procmux$699_Y [5] $flatten\uart_inst.\uart_tx_inst.$procmux$699_Y [0] }, B=2'01, Y={ $flatten\uart_inst.\uart_tx_inst.$procmux$704_Y [5] $flatten\uart_inst.\uart_tx_inst.$procmux$704_Y [0] }
      New connections: { $flatten\uart_inst.\uart_tx_inst.$procmux$704_Y [18:6] $flatten\uart_inst.\uart_tx_inst.$procmux$704_Y [4:1] } = { 13'0000000000000 $flatten\uart_inst.\uart_tx_inst.$procmux$704_Y [0] $flatten\uart_inst.\uart_tx_inst.$procmux$704_Y [0] $flatten\uart_inst.\uart_tx_inst.$procmux$704_Y [0] $flatten\uart_inst.\uart_tx_inst.$procmux$704_Y [0] }
  Optimizing cells in module \ice40hx8k.
    Consolidated identical input bits for $mux cell $memory$flatten\top_inst.\U1.\frqdiv.$auto$proc_rom.cc:150:do_switch$631$rdmux[0][1][1]$1504:
      Old ports: A=$memory$flatten\top_inst.\U1.\frqdiv.$auto$proc_rom.cc:150:do_switch$631$rdmux[0][1][1]$a$1505, B=$memory$flatten\top_inst.\U1.\frqdiv.$auto$proc_rom.cc:150:do_switch$631$rdmux[0][1][1]$b$1506, Y=$memory$flatten\top_inst.\U1.\frqdiv.$auto$proc_rom.cc:150:do_switch$631$rdmux[0][0][0]$b$1500
      New ports: A={ $memory$flatten\top_inst.\U1.\frqdiv.$auto$proc_rom.cc:150:do_switch$631$rdmux[0][1][1]$a$1505 [13] $memory$flatten\top_inst.\U1.\frqdiv.$auto$proc_rom.cc:150:do_switch$631$rdmux[0][1][1]$a$1505 [6] $memory$flatten\top_inst.\U1.\frqdiv.$auto$proc_rom.cc:150:do_switch$631$rdmux[0][1][1]$a$1505 [9] $memory$flatten\top_inst.\U1.\frqdiv.$auto$proc_rom.cc:150:do_switch$631$rdmux[0][1][1]$a$1505 [10:9] 2'01 $memory$flatten\top_inst.\U1.\frqdiv.$auto$proc_rom.cc:150:do_switch$631$rdmux[0][1][1]$a$1505 [6:5] $memory$flatten\top_inst.\U1.\frqdiv.$auto$proc_rom.cc:150:do_switch$631$rdmux[0][1][1]$a$1505 [0] 1'1 $memory$flatten\top_inst.\U1.\frqdiv.$auto$proc_rom.cc:150:do_switch$631$rdmux[0][1][1]$a$1505 [2:0] }, B={ 1'0 $memory$flatten\top_inst.\U1.\frqdiv.$auto$proc_rom.cc:150:do_switch$631$rdmux[0][1][1]$b$1506 [2] $memory$flatten\top_inst.\U1.\frqdiv.$auto$proc_rom.cc:150:do_switch$631$rdmux[0][1][1]$b$1506 [2] 2'00 $memory$flatten\top_inst.\U1.\frqdiv.$auto$proc_rom.cc:150:do_switch$631$rdmux[0][1][1]$b$1506 [2] $memory$flatten\top_inst.\U1.\frqdiv.$auto$proc_rom.cc:150:do_switch$631$rdmux[0][1][1]$b$1506 [2] 2'00 $memory$flatten\top_inst.\U1.\frqdiv.$auto$proc_rom.cc:150:do_switch$631$rdmux[0][1][1]$b$1506 [2] 1'0 $memory$flatten\top_inst.\U1.\frqdiv.$auto$proc_rom.cc:150:do_switch$631$rdmux[0][1][1]$b$1506 [2] 2'01 }, Y=$memory$flatten\top_inst.\U1.\frqdiv.$auto$proc_rom.cc:150:do_switch$631$rdmux[0][0][0]$b$1500 [13:0]
      New connections: $memory$flatten\top_inst.\U1.\frqdiv.$auto$proc_rom.cc:150:do_switch$631$rdmux[0][0][0]$b$1500 [15:14] = { 1'0 $memory$flatten\top_inst.\U1.\frqdiv.$auto$proc_rom.cc:150:do_switch$631$rdmux[0][0][0]$b$1500 [7] }
    Consolidated identical input bits for $mux cell $memory$flatten\top_inst.\U1.\frqdiv.$auto$proc_rom.cc:150:do_switch$631$rdmux[0][1][0]$1501:
      Old ports: A=$memory$flatten\top_inst.\U1.\frqdiv.$auto$proc_rom.cc:150:do_switch$631$rdmux[0][1][0]$a$1502, B=$memory$flatten\top_inst.\U1.\frqdiv.$auto$proc_rom.cc:150:do_switch$631$rdmux[0][1][0]$b$1503, Y=$memory$flatten\top_inst.\U1.\frqdiv.$auto$proc_rom.cc:150:do_switch$631$rdmux[0][0][0]$a$1499
      New ports: A={ 2'10 $memory$flatten\top_inst.\U1.\frqdiv.$auto$proc_rom.cc:150:do_switch$631$rdmux[0][1][0]$a$1502 [13] $memory$flatten\top_inst.\U1.\frqdiv.$auto$proc_rom.cc:150:do_switch$631$rdmux[0][1][0]$a$1502 [9] $memory$flatten\top_inst.\U1.\frqdiv.$auto$proc_rom.cc:150:do_switch$631$rdmux[0][1][0]$a$1502 [4] $memory$flatten\top_inst.\U1.\frqdiv.$auto$proc_rom.cc:150:do_switch$631$rdmux[0][1][0]$a$1502 [7] $memory$flatten\top_inst.\U1.\frqdiv.$auto$proc_rom.cc:150:do_switch$631$rdmux[0][1][0]$a$1502 [9] $memory$flatten\top_inst.\U1.\frqdiv.$auto$proc_rom.cc:150:do_switch$631$rdmux[0][1][0]$a$1502 [2] $memory$flatten\top_inst.\U1.\frqdiv.$auto$proc_rom.cc:150:do_switch$631$rdmux[0][1][0]$a$1502 [7] $memory$flatten\top_inst.\U1.\frqdiv.$auto$proc_rom.cc:150:do_switch$631$rdmux[0][1][0]$a$1502 [5:4] 1'1 $memory$flatten\top_inst.\U1.\frqdiv.$auto$proc_rom.cc:150:do_switch$631$rdmux[0][1][0]$a$1502 [2:0] }, B={ $memory$flatten\top_inst.\U1.\frqdiv.$auto$proc_rom.cc:150:do_switch$631$rdmux[0][1][0]$b$1503 [15] $memory$flatten\top_inst.\U1.\frqdiv.$auto$proc_rom.cc:150:do_switch$631$rdmux[0][1][0]$b$1503 [7] $memory$flatten\top_inst.\U1.\frqdiv.$auto$proc_rom.cc:150:do_switch$631$rdmux[0][1][0]$b$1503 [7] $memory$flatten\top_inst.\U1.\frqdiv.$auto$proc_rom.cc:150:do_switch$631$rdmux[0][1][0]$b$1503 [7] $memory$flatten\top_inst.\U1.\frqdiv.$auto$proc_rom.cc:150:do_switch$631$rdmux[0][1][0]$b$1503 [11] 2'11 $memory$flatten\top_inst.\U1.\frqdiv.$auto$proc_rom.cc:150:do_switch$631$rdmux[0][1][0]$b$1503 [0] $memory$flatten\top_inst.\U1.\frqdiv.$auto$proc_rom.cc:150:do_switch$631$rdmux[0][1][0]$b$1503 [7] $memory$flatten\top_inst.\U1.\frqdiv.$auto$proc_rom.cc:150:do_switch$631$rdmux[0][1][0]$b$1503 [5] 1'1 $memory$flatten\top_inst.\U1.\frqdiv.$auto$proc_rom.cc:150:do_switch$631$rdmux[0][1][0]$b$1503 [1] $memory$flatten\top_inst.\U1.\frqdiv.$auto$proc_rom.cc:150:do_switch$631$rdmux[0][1][0]$b$1503 [2:0] }, Y={ $memory$flatten\top_inst.\U1.\frqdiv.$auto$proc_rom.cc:150:do_switch$631$rdmux[0][0][0]$a$1499 [15:7] $memory$flatten\top_inst.\U1.\frqdiv.$auto$proc_rom.cc:150:do_switch$631$rdmux[0][0][0]$a$1499 [5:0] }
      New connections: $memory$flatten\top_inst.\U1.\frqdiv.$auto$proc_rom.cc:150:do_switch$631$rdmux[0][0][0]$a$1499 [6] = 1'0
    Consolidated identical input bits for $mux cell $memory$flatten\top_inst.\U1.\SS_FSM.$auto$proc_rom.cc:150:do_switch$627$rdmux[0][1][1]$1459:
      Old ports: A=$memory$flatten\top_inst.\U1.\SS_FSM.$auto$proc_rom.cc:150:do_switch$627$rdmux[0][1][1]$a$1460, B=4'1111, Y=$memory$flatten\top_inst.\U1.\SS_FSM.$auto$proc_rom.cc:150:do_switch$627$rdmux[0][0][0]$b$1455
      New ports: A=$memory$flatten\top_inst.\U1.\SS_FSM.$auto$proc_rom.cc:150:do_switch$627$rdmux[0][1][1]$a$1460 [0], B=1'1, Y=$memory$flatten\top_inst.\U1.\SS_FSM.$auto$proc_rom.cc:150:do_switch$627$rdmux[0][0][0]$b$1455 [0]
      New connections: $memory$flatten\top_inst.\U1.\SS_FSM.$auto$proc_rom.cc:150:do_switch$627$rdmux[0][0][0]$b$1455 [3:1] = { 2'11 $memory$flatten\top_inst.\U1.\SS_FSM.$auto$proc_rom.cc:150:do_switch$627$rdmux[0][0][0]$b$1455 [0] }
  Optimizing cells in module \ice40hx8k.
Performed a total of 33 changes.

17.29.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ice40hx8k'.
<suppressed ~27 debug messages>
Removed a total of 9 cells.

17.29.6. Executing OPT_DFF pass (perform DFF optimizations).

17.29.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ice40hx8k..
Removed 0 unused cells and 46 unused wires.
<suppressed ~1 debug messages>

17.29.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module ice40hx8k.

17.29.9. Rerunning OPT passes. (Maybe there is more to do..)

17.29.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \ice40hx8k..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~23 debug messages>

17.29.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \ice40hx8k.
    Consolidated identical input bits for $mux cell $memory$flatten\top_inst.\U1.\SS_FSM.$auto$proc_rom.cc:150:do_switch$627$rdmux[0][2][1]$1465:
      Old ports: A={ 2'01 $memory$flatten\top_inst.\U1.\SS_FSM.$auto$proc_rom.cc:150:do_switch$627$rdmux[0][2][1]$a$1466 [1] }, B={ 2'10 $memory$flatten\top_inst.\U1.\SS_FSM.$auto$proc_rom.cc:150:do_switch$627$rdmux[0][2][1]$a$1466 [1] }, Y=$memory$flatten\top_inst.\U1.\SS_FSM.$auto$proc_rom.cc:150:do_switch$627$rdmux[0][1][0]$b$1458 [3:1]
      New ports: A=2'01, B=2'10, Y=$memory$flatten\top_inst.\U1.\SS_FSM.$auto$proc_rom.cc:150:do_switch$627$rdmux[0][1][0]$b$1458 [3:2]
      New connections: $memory$flatten\top_inst.\U1.\SS_FSM.$auto$proc_rom.cc:150:do_switch$627$rdmux[0][1][0]$b$1458 [1] = $memory$flatten\top_inst.\U1.\SS_FSM.$auto$proc_rom.cc:150:do_switch$627$rdmux[0][2][1]$a$1466 [1]
    Consolidated identical input bits for $mux cell $memory$flatten\top_inst.\U1.\frqdiv.$auto$proc_rom.cc:150:do_switch$631$rdmux[0][2][1]$1510:
      Old ports: A={ 1'1 $memory$flatten\top_inst.\U1.\frqdiv.$auto$proc_rom.cc:150:do_switch$631$rdmux[0][2][0]$a$1508 [12] 2'01 $memory$flatten\top_inst.\U1.\frqdiv.$auto$proc_rom.cc:150:do_switch$631$rdmux[0][2][0]$a$1508 [12:11] 1'0 }, B={ 1'0 $memory$flatten\top_inst.\U1.\frqdiv.$auto$proc_rom.cc:150:do_switch$631$rdmux[0][2][0]$a$1508 [12] 1'1 $memory$flatten\top_inst.\U1.\frqdiv.$auto$proc_rom.cc:150:do_switch$631$rdmux[0][2][0]$a$1508 [12:11] 1'0 $memory$flatten\top_inst.\U1.\frqdiv.$auto$proc_rom.cc:150:do_switch$631$rdmux[0][2][0]$a$1508 [11] }, Y={ $memory$flatten\top_inst.\U1.\frqdiv.$auto$proc_rom.cc:150:do_switch$631$rdmux[0][1][0]$b$1503 [15] $memory$flatten\top_inst.\U1.\frqdiv.$auto$proc_rom.cc:150:do_switch$631$rdmux[0][1][0]$b$1503 [11] $memory$flatten\top_inst.\U1.\frqdiv.$auto$proc_rom.cc:150:do_switch$631$rdmux[0][1][0]$b$1503 [14] $memory$flatten\top_inst.\U1.\frqdiv.$auto$proc_rom.cc:150:do_switch$631$rdmux[0][1][0]$b$1503 [5] $memory$flatten\top_inst.\U1.\frqdiv.$auto$proc_rom.cc:150:do_switch$631$rdmux[0][1][0]$b$1503 [2] $memory$flatten\top_inst.\U1.\frqdiv.$auto$proc_rom.cc:150:do_switch$631$rdmux[0][1][0]$b$1503 [3] $memory$flatten\top_inst.\U1.\frqdiv.$auto$proc_rom.cc:150:do_switch$631$rdmux[0][1][0]$b$1503 [8] }
      New ports: A={ 3'101 $memory$flatten\top_inst.\U1.\frqdiv.$auto$proc_rom.cc:150:do_switch$631$rdmux[0][2][0]$a$1508 [12:11] 1'0 }, B={ 2'01 $memory$flatten\top_inst.\U1.\frqdiv.$auto$proc_rom.cc:150:do_switch$631$rdmux[0][2][0]$a$1508 [12:11] 1'0 $memory$flatten\top_inst.\U1.\frqdiv.$auto$proc_rom.cc:150:do_switch$631$rdmux[0][2][0]$a$1508 [11] }, Y={ $memory$flatten\top_inst.\U1.\frqdiv.$auto$proc_rom.cc:150:do_switch$631$rdmux[0][1][0]$b$1503 [15:14] $memory$flatten\top_inst.\U1.\frqdiv.$auto$proc_rom.cc:150:do_switch$631$rdmux[0][1][0]$b$1503 [5] $memory$flatten\top_inst.\U1.\frqdiv.$auto$proc_rom.cc:150:do_switch$631$rdmux[0][1][0]$b$1503 [2] $memory$flatten\top_inst.\U1.\frqdiv.$auto$proc_rom.cc:150:do_switch$631$rdmux[0][1][0]$b$1503 [3] $memory$flatten\top_inst.\U1.\frqdiv.$auto$proc_rom.cc:150:do_switch$631$rdmux[0][1][0]$b$1503 [8] }
      New connections: $memory$flatten\top_inst.\U1.\frqdiv.$auto$proc_rom.cc:150:do_switch$631$rdmux[0][1][0]$b$1503 [11] = $memory$flatten\top_inst.\U1.\frqdiv.$auto$proc_rom.cc:150:do_switch$631$rdmux[0][2][0]$a$1508 [12]
    Consolidated identical input bits for $mux cell $memory$flatten\top_inst.\U1.\frqdiv.$auto$proc_rom.cc:150:do_switch$631$rdmux[0][2][2]$1513:
      Old ports: A={ 2'10 $memory$flatten\top_inst.\U1.\frqdiv.$auto$proc_rom.cc:150:do_switch$631$rdmux[0][2][2]$a$1514 [11] $memory$flatten\top_inst.\U1.\frqdiv.$auto$proc_rom.cc:150:do_switch$631$rdmux[0][2][2]$a$1514 [12] 1'0 $memory$flatten\top_inst.\U1.\frqdiv.$auto$proc_rom.cc:150:do_switch$631$rdmux[0][2][2]$a$1514 [12] $memory$flatten\top_inst.\U1.\frqdiv.$auto$proc_rom.cc:150:do_switch$631$rdmux[0][2][2]$a$1514 [12] $memory$flatten\top_inst.\U1.\frqdiv.$auto$proc_rom.cc:150:do_switch$631$rdmux[0][2][2]$a$1514 [12] }, B={ $memory$flatten\top_inst.\U1.\frqdiv.$auto$proc_rom.cc:150:do_switch$631$rdmux[0][2][2]$a$1514 [12] 1'1 $memory$flatten\top_inst.\U1.\frqdiv.$auto$proc_rom.cc:150:do_switch$631$rdmux[0][2][2]$a$1514 [11] $memory$flatten\top_inst.\U1.\frqdiv.$auto$proc_rom.cc:150:do_switch$631$rdmux[0][2][2]$a$1514 [11] $memory$flatten\top_inst.\U1.\frqdiv.$auto$proc_rom.cc:150:do_switch$631$rdmux[0][2][2]$a$1514 [11] $memory$flatten\top_inst.\U1.\frqdiv.$auto$proc_rom.cc:150:do_switch$631$rdmux[0][2][2]$a$1514 [12] 2'10 }, Y={ $memory$flatten\top_inst.\U1.\frqdiv.$auto$proc_rom.cc:150:do_switch$631$rdmux[0][1][1]$a$1505 [13] $memory$flatten\top_inst.\U1.\frqdiv.$auto$proc_rom.cc:150:do_switch$631$rdmux[0][1][1]$a$1505 [10] $memory$flatten\top_inst.\U1.\frqdiv.$auto$proc_rom.cc:150:do_switch$631$rdmux[0][1][1]$a$1505 [11] $memory$flatten\top_inst.\U1.\frqdiv.$auto$proc_rom.cc:150:do_switch$631$rdmux[0][1][1]$a$1505 [12] $memory$flatten\top_inst.\U1.\frqdiv.$auto$proc_rom.cc:150:do_switch$631$rdmux[0][1][1]$a$1505 [5] $memory$flatten\top_inst.\U1.\frqdiv.$auto$proc_rom.cc:150:do_switch$631$rdmux[0][1][1]$a$1505 [2:1] $memory$flatten\top_inst.\U1.\frqdiv.$auto$proc_rom.cc:150:do_switch$631$rdmux[0][1][1]$a$1505 [4] }
      New ports: A={ 2'10 $memory$flatten\top_inst.\U1.\frqdiv.$auto$proc_rom.cc:150:do_switch$631$rdmux[0][2][2]$a$1514 [12] 1'0 $memory$flatten\top_inst.\U1.\frqdiv.$auto$proc_rom.cc:150:do_switch$631$rdmux[0][2][2]$a$1514 [12] $memory$flatten\top_inst.\U1.\frqdiv.$auto$proc_rom.cc:150:do_switch$631$rdmux[0][2][2]$a$1514 [12] }, B={ $memory$flatten\top_inst.\U1.\frqdiv.$auto$proc_rom.cc:150:do_switch$631$rdmux[0][2][2]$a$1514 [12] 1'1 $memory$flatten\top_inst.\U1.\frqdiv.$auto$proc_rom.cc:150:do_switch$631$rdmux[0][2][2]$a$1514 [11] $memory$flatten\top_inst.\U1.\frqdiv.$auto$proc_rom.cc:150:do_switch$631$rdmux[0][2][2]$a$1514 [11] 2'10 }, Y={ $memory$flatten\top_inst.\U1.\frqdiv.$auto$proc_rom.cc:150:do_switch$631$rdmux[0][1][1]$a$1505 [13] $memory$flatten\top_inst.\U1.\frqdiv.$auto$proc_rom.cc:150:do_switch$631$rdmux[0][1][1]$a$1505 [10] $memory$flatten\top_inst.\U1.\frqdiv.$auto$proc_rom.cc:150:do_switch$631$rdmux[0][1][1]$a$1505 [12] $memory$flatten\top_inst.\U1.\frqdiv.$auto$proc_rom.cc:150:do_switch$631$rdmux[0][1][1]$a$1505 [5] $memory$flatten\top_inst.\U1.\frqdiv.$auto$proc_rom.cc:150:do_switch$631$rdmux[0][1][1]$a$1505 [1] $memory$flatten\top_inst.\U1.\frqdiv.$auto$proc_rom.cc:150:do_switch$631$rdmux[0][1][1]$a$1505 [4] }
      New connections: { $memory$flatten\top_inst.\U1.\frqdiv.$auto$proc_rom.cc:150:do_switch$631$rdmux[0][1][1]$a$1505 [11] $memory$flatten\top_inst.\U1.\frqdiv.$auto$proc_rom.cc:150:do_switch$631$rdmux[0][1][1]$a$1505 [2] } = { $memory$flatten\top_inst.\U1.\frqdiv.$auto$proc_rom.cc:150:do_switch$631$rdmux[0][2][2]$a$1514 [11] $memory$flatten\top_inst.\U1.\frqdiv.$auto$proc_rom.cc:150:do_switch$631$rdmux[0][2][2]$a$1514 [12] }
  Optimizing cells in module \ice40hx8k.
Performed a total of 3 changes.

17.29.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ice40hx8k'.
Removed a total of 0 cells.

17.29.13. Executing OPT_DFF pass (perform DFF optimizations).
Adding SRST signal on $auto$ff.cc:266:slice$1221 ($dffe) from module ice40hx8k (D = $flatten\uart_inst.\uart_tx_inst.$sub$ice40/uart/uart_tx.v:88$608_Y [18:6], Q = \uart_inst.uart_tx_inst.prescale_reg [18:6], rval = 13'0000000000000).
Setting constant 0-bit at position 0 on $auto$ff.cc:266:slice$1258 ($adffe) from module ice40hx8k.

17.29.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ice40hx8k..
Removed 0 unused cells and 2 unused wires.
<suppressed ~1 debug messages>

17.29.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module ice40hx8k.

17.29.16. Rerunning OPT passes. (Maybe there is more to do..)

17.29.17. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \ice40hx8k..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~24 debug messages>

17.29.18. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \ice40hx8k.
    Consolidated identical input bits for $mux cell $flatten\top_inst.\U1.\seq_div.$procmux$960:
      Old ports: A={ \top_inst.U1.seq_div.dividend 7'0000000 }, B={ $flatten\top_inst.\U1.\seq_div.$3\next_r[23:0] [23:8] \top_inst.U1.seq_div.R [6:1] 1'0 }, Y=\top_inst.U1.seq_div.next_r [23:1]
      New ports: A={ \top_inst.U1.seq_div.dividend 6'000000 }, B={ $flatten\top_inst.\U1.\seq_div.$3\next_r[23:0] [23:8] \top_inst.U1.seq_div.R [6:1] }, Y=\top_inst.U1.seq_div.next_r [23:2]
      New connections: \top_inst.U1.seq_div.next_r [1] = 1'0
  Optimizing cells in module \ice40hx8k.
Performed a total of 1 changes.

17.29.19. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ice40hx8k'.
Removed a total of 0 cells.

17.29.20. Executing OPT_DFF pass (perform DFF optimizations).

17.29.21. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ice40hx8k..

17.29.22. Executing OPT_EXPR pass (perform const folding).
Optimizing module ice40hx8k.

17.29.23. Rerunning OPT passes. (Maybe there is more to do..)

17.29.24. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \ice40hx8k..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~24 debug messages>

17.29.25. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \ice40hx8k.
Performed a total of 0 changes.

17.29.26. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ice40hx8k'.
Removed a total of 0 cells.

17.29.27. Executing OPT_DFF pass (perform DFF optimizations).
Setting constant 0-bit at position 0 on $auto$ff.cc:266:slice$1545 ($adffe) from module ice40hx8k.

17.29.28. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ice40hx8k..

17.29.29. Executing OPT_EXPR pass (perform const folding).
Optimizing module ice40hx8k.

17.29.30. Rerunning OPT passes. (Maybe there is more to do..)

17.29.31. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \ice40hx8k..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~24 debug messages>

17.29.32. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \ice40hx8k.
    Consolidated identical input bits for $mux cell $flatten\top_inst.\U1.\seq_div.$procmux$960:
      Old ports: A={ \top_inst.U1.seq_div.dividend 6'000000 }, B={ $flatten\top_inst.\U1.\seq_div.$3\next_r[23:0] [23:8] \top_inst.U1.seq_div.R [6:2] 1'0 }, Y=\top_inst.U1.seq_div.next_r [23:2]
      New ports: A={ \top_inst.U1.seq_div.dividend 5'00000 }, B={ $flatten\top_inst.\U1.\seq_div.$3\next_r[23:0] [23:8] \top_inst.U1.seq_div.R [6:2] }, Y=\top_inst.U1.seq_div.next_r [23:3]
      New connections: \top_inst.U1.seq_div.next_r [2] = 1'0
  Optimizing cells in module \ice40hx8k.
Performed a total of 1 changes.

17.29.33. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ice40hx8k'.
Removed a total of 0 cells.

17.29.34. Executing OPT_DFF pass (perform DFF optimizations).

17.29.35. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ice40hx8k..

17.29.36. Executing OPT_EXPR pass (perform const folding).
Optimizing module ice40hx8k.

17.29.37. Rerunning OPT passes. (Maybe there is more to do..)

17.29.38. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \ice40hx8k..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~24 debug messages>

17.29.39. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \ice40hx8k.
Performed a total of 0 changes.

17.29.40. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ice40hx8k'.
Removed a total of 0 cells.

17.29.41. Executing OPT_DFF pass (perform DFF optimizations).
Setting constant 0-bit at position 0 on $auto$ff.cc:266:slice$1546 ($adffe) from module ice40hx8k.

17.29.42. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ice40hx8k..

17.29.43. Executing OPT_EXPR pass (perform const folding).
Optimizing module ice40hx8k.

17.29.44. Rerunning OPT passes. (Maybe there is more to do..)

17.29.45. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \ice40hx8k..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~24 debug messages>

17.29.46. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \ice40hx8k.
    Consolidated identical input bits for $mux cell $flatten\top_inst.\U1.\seq_div.$procmux$960:
      Old ports: A={ \top_inst.U1.seq_div.dividend 5'00000 }, B={ $flatten\top_inst.\U1.\seq_div.$3\next_r[23:0] [23:8] \top_inst.U1.seq_div.R [6:3] 1'0 }, Y=\top_inst.U1.seq_div.next_r [23:3]
      New ports: A={ \top_inst.U1.seq_div.dividend 4'0000 }, B={ $flatten\top_inst.\U1.\seq_div.$3\next_r[23:0] [23:8] \top_inst.U1.seq_div.R [6:3] }, Y=\top_inst.U1.seq_div.next_r [23:4]
      New connections: \top_inst.U1.seq_div.next_r [3] = 1'0
  Optimizing cells in module \ice40hx8k.
Performed a total of 1 changes.

17.29.47. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ice40hx8k'.
Removed a total of 0 cells.

17.29.48. Executing OPT_DFF pass (perform DFF optimizations).

17.29.49. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ice40hx8k..

17.29.50. Executing OPT_EXPR pass (perform const folding).
Optimizing module ice40hx8k.

17.29.51. Rerunning OPT passes. (Maybe there is more to do..)

17.29.52. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \ice40hx8k..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~24 debug messages>

17.29.53. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \ice40hx8k.
Performed a total of 0 changes.

17.29.54. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ice40hx8k'.
Removed a total of 0 cells.

17.29.55. Executing OPT_DFF pass (perform DFF optimizations).
Setting constant 0-bit at position 0 on $auto$ff.cc:266:slice$1547 ($adffe) from module ice40hx8k.

17.29.56. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ice40hx8k..

17.29.57. Executing OPT_EXPR pass (perform const folding).
Optimizing module ice40hx8k.

17.29.58. Rerunning OPT passes. (Maybe there is more to do..)

17.29.59. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \ice40hx8k..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~24 debug messages>

17.29.60. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \ice40hx8k.
    Consolidated identical input bits for $mux cell $flatten\top_inst.\U1.\seq_div.$procmux$960:
      Old ports: A={ \top_inst.U1.seq_div.dividend 4'0000 }, B={ $flatten\top_inst.\U1.\seq_div.$3\next_r[23:0] [23:8] \top_inst.U1.seq_div.R [6:4] 1'0 }, Y=\top_inst.U1.seq_div.next_r [23:4]
      New ports: A={ \top_inst.U1.seq_div.dividend 3'000 }, B={ $flatten\top_inst.\U1.\seq_div.$3\next_r[23:0] [23:8] \top_inst.U1.seq_div.R [6:4] }, Y=\top_inst.U1.seq_div.next_r [23:5]
      New connections: \top_inst.U1.seq_div.next_r [4] = 1'0
  Optimizing cells in module \ice40hx8k.
Performed a total of 1 changes.

17.29.61. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ice40hx8k'.
Removed a total of 0 cells.

17.29.62. Executing OPT_DFF pass (perform DFF optimizations).

17.29.63. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ice40hx8k..

17.29.64. Executing OPT_EXPR pass (perform const folding).
Optimizing module ice40hx8k.

17.29.65. Rerunning OPT passes. (Maybe there is more to do..)

17.29.66. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \ice40hx8k..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~24 debug messages>

17.29.67. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \ice40hx8k.
Performed a total of 0 changes.

17.29.68. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ice40hx8k'.
Removed a total of 0 cells.

17.29.69. Executing OPT_DFF pass (perform DFF optimizations).
Setting constant 0-bit at position 0 on $auto$ff.cc:266:slice$1548 ($adffe) from module ice40hx8k.

17.29.70. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ice40hx8k..

17.29.71. Executing OPT_EXPR pass (perform const folding).
Optimizing module ice40hx8k.

17.29.72. Rerunning OPT passes. (Maybe there is more to do..)

17.29.73. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \ice40hx8k..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~24 debug messages>

17.29.74. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \ice40hx8k.
    Consolidated identical input bits for $mux cell $flatten\top_inst.\U1.\seq_div.$procmux$960:
      Old ports: A={ \top_inst.U1.seq_div.dividend 3'000 }, B={ $flatten\top_inst.\U1.\seq_div.$3\next_r[23:0] [23:8] \top_inst.U1.seq_div.R [6:5] 1'0 }, Y=\top_inst.U1.seq_div.next_r [23:5]
      New ports: A={ \top_inst.U1.seq_div.dividend 2'00 }, B={ $flatten\top_inst.\U1.\seq_div.$3\next_r[23:0] [23:8] \top_inst.U1.seq_div.R [6:5] }, Y=\top_inst.U1.seq_div.next_r [23:6]
      New connections: \top_inst.U1.seq_div.next_r [5] = 1'0
  Optimizing cells in module \ice40hx8k.
Performed a total of 1 changes.

17.29.75. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ice40hx8k'.
Removed a total of 0 cells.

17.29.76. Executing OPT_DFF pass (perform DFF optimizations).

17.29.77. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ice40hx8k..

17.29.78. Executing OPT_EXPR pass (perform const folding).
Optimizing module ice40hx8k.

17.29.79. Rerunning OPT passes. (Maybe there is more to do..)

17.29.80. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \ice40hx8k..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~24 debug messages>

17.29.81. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \ice40hx8k.
Performed a total of 0 changes.

17.29.82. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ice40hx8k'.
Removed a total of 0 cells.

17.29.83. Executing OPT_DFF pass (perform DFF optimizations).
Setting constant 0-bit at position 0 on $auto$ff.cc:266:slice$1549 ($adffe) from module ice40hx8k.

17.29.84. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ice40hx8k..

17.29.85. Executing OPT_EXPR pass (perform const folding).
Optimizing module ice40hx8k.

17.29.86. Rerunning OPT passes. (Maybe there is more to do..)

17.29.87. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \ice40hx8k..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~24 debug messages>

17.29.88. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \ice40hx8k.
    Consolidated identical input bits for $mux cell $flatten\top_inst.\U1.\seq_div.$procmux$960:
      Old ports: A={ \top_inst.U1.seq_div.dividend 2'00 }, B={ $flatten\top_inst.\U1.\seq_div.$3\next_r[23:0] [23:8] \top_inst.U1.seq_div.R [6] 1'0 }, Y=\top_inst.U1.seq_div.next_r [23:6]
      New ports: A={ \top_inst.U1.seq_div.dividend 1'0 }, B={ $flatten\top_inst.\U1.\seq_div.$3\next_r[23:0] [23:8] \top_inst.U1.seq_div.R [6] }, Y=\top_inst.U1.seq_div.next_r [23:7]
      New connections: \top_inst.U1.seq_div.next_r [6] = 1'0
  Optimizing cells in module \ice40hx8k.
Performed a total of 1 changes.

17.29.89. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ice40hx8k'.
Removed a total of 0 cells.

17.29.90. Executing OPT_DFF pass (perform DFF optimizations).

17.29.91. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ice40hx8k..

17.29.92. Executing OPT_EXPR pass (perform const folding).
Optimizing module ice40hx8k.

17.29.93. Rerunning OPT passes. (Maybe there is more to do..)

17.29.94. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \ice40hx8k..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~24 debug messages>

17.29.95. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \ice40hx8k.
Performed a total of 0 changes.

17.29.96. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ice40hx8k'.
Removed a total of 0 cells.

17.29.97. Executing OPT_DFF pass (perform DFF optimizations).
Setting constant 0-bit at position 0 on $auto$ff.cc:266:slice$1550 ($adffe) from module ice40hx8k.

17.29.98. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ice40hx8k..

17.29.99. Executing OPT_EXPR pass (perform const folding).
Optimizing module ice40hx8k.

17.29.100. Rerunning OPT passes. (Maybe there is more to do..)

17.29.101. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \ice40hx8k..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~24 debug messages>

17.29.102. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \ice40hx8k.
    Consolidated identical input bits for $mux cell $flatten\top_inst.\U1.\seq_div.$procmux$960:
      Old ports: A={ \top_inst.U1.seq_div.dividend 1'0 }, B={ $flatten\top_inst.\U1.\seq_div.$3\next_r[23:0] [23:8] 1'0 }, Y=\top_inst.U1.seq_div.next_r [23:7]
      New ports: A=\top_inst.U1.seq_div.dividend, B=$flatten\top_inst.\U1.\seq_div.$3\next_r[23:0] [23:8], Y=\top_inst.U1.seq_div.next_r [23:8]
      New connections: \top_inst.U1.seq_div.next_r [7] = 1'0
  Optimizing cells in module \ice40hx8k.
Performed a total of 1 changes.

17.29.103. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ice40hx8k'.
Removed a total of 0 cells.

17.29.104. Executing OPT_DFF pass (perform DFF optimizations).

17.29.105. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ice40hx8k..

17.29.106. Executing OPT_EXPR pass (perform const folding).
Optimizing module ice40hx8k.

17.29.107. Rerunning OPT passes. (Maybe there is more to do..)

17.29.108. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \ice40hx8k..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~24 debug messages>

17.29.109. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \ice40hx8k.
Performed a total of 0 changes.

17.29.110. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ice40hx8k'.
Removed a total of 0 cells.

17.29.111. Executing OPT_DFF pass (perform DFF optimizations).
Setting constant 0-bit at position 0 on $auto$ff.cc:266:slice$1551 ($adffe) from module ice40hx8k.

17.29.112. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ice40hx8k..

17.29.113. Executing OPT_EXPR pass (perform const folding).
Optimizing module ice40hx8k.
<suppressed ~1 debug messages>

17.29.114. Rerunning OPT passes. (Maybe there is more to do..)

17.29.115. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \ice40hx8k..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~24 debug messages>

17.29.116. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \ice40hx8k.
Performed a total of 0 changes.

17.29.117. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ice40hx8k'.
Removed a total of 0 cells.

17.29.118. Executing OPT_DFF pass (perform DFF optimizations).

17.29.119. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ice40hx8k..
Removed 0 unused cells and 1 unused wires.
<suppressed ~1 debug messages>

17.29.120. Executing OPT_EXPR pass (perform const folding).
Optimizing module ice40hx8k.

17.29.121. Rerunning OPT passes. (Maybe there is more to do..)

17.29.122. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \ice40hx8k..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~24 debug messages>

17.29.123. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \ice40hx8k.
Performed a total of 0 changes.

17.29.124. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ice40hx8k'.
Removed a total of 0 cells.

17.29.125. Executing OPT_DFF pass (perform DFF optimizations).

17.29.126. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ice40hx8k..

17.29.127. Executing OPT_EXPR pass (perform const folding).
Optimizing module ice40hx8k.

17.29.128. Finished OPT passes. (There is nothing left to do.)

17.30. Executing ICE40_WRAPCARRY pass (wrap carries).

17.31. Executing TECHMAP pass (map to technology primitives).

17.31.1. Executing Verilog-2005 frontend: /home/shay/a/ece270/bin/../share/yosys/techmap.v
Parsing Verilog input from `/home/shay/a/ece270/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

17.31.2. Executing Verilog-2005 frontend: /home/shay/a/ece270/bin/../share/yosys/ice40/arith_map.v
Parsing Verilog input from `/home/shay/a/ece270/bin/../share/yosys/ice40/arith_map.v' to AST representation.
Generating RTLIL representation for module `\_80_ice40_alu'.
Successfully finished Verilog frontend.

17.31.3. Continuing TECHMAP pass.
Using extmapper simplemap for cells of type $mux.
Using extmapper simplemap for cells of type $dffe.
Using extmapper simplemap for cells of type $sdffce.
Using extmapper simplemap for cells of type $not.
Using extmapper simplemap for cells of type $lut.
Using extmapper simplemap for cells of type $logic_not.
Using template $paramod$3826c06832e910ed7e3a5e37dc9a6adea7917f5a\_80_ice40_alu for cells of type $alu.
Using extmapper simplemap for cells of type $eq.
Using extmapper simplemap for cells of type $reduce_or.
Using extmapper simplemap for cells of type $reduce_and.
Using extmapper simplemap for cells of type $adffe.
Using template $paramod$fc972a7a46956c1788f3cb5257b53c8f1df2d0cc\_90_alu for cells of type $alu.
Using extmapper simplemap for cells of type $or.
Using template $paramod$20b1d0597707d55efcb9664e40f63985956d7680\_80_ice40_alu for cells of type $alu.
Using extmapper simplemap for cells of type $reduce_bool.
Using extmapper simplemap for cells of type $ne.
Using template $paramod$8742280fdebca84e1c87f2a86ed84f62d558f4cc\_80_ice40_alu for cells of type $alu.
Using extmapper simplemap for cells of type $adff.
Using template $paramod$9398518f3a66906c93ac7eaad9a961f31111e0c1\_90_pmux for cells of type $pmux.
Using extmapper simplemap for cells of type $and.
Using template $paramod$4d45682f6d5f8751d24fc75184ef72226da353f7\_90_pmux for cells of type $pmux.
Using extmapper simplemap for cells of type $logic_or.
Using extmapper simplemap for cells of type $logic_and.
Using template $paramod$c3cd1564c35d873179656addd6052d7ea8b6d991\_80_ice40_alu for cells of type $alu.
Using template $paramod$5fb3cea3e36078ed44b85aadf768a6588af6651e\_80_ice40_alu for cells of type $alu.
Using template $paramod$2af30114e9bd4ccb04dad757b3f0a8f6bf0615b0\_80_ice40_alu for cells of type $alu.
Using template $paramod$521ce43182eecb9f60c72393a788160d2c356bf5\_90_pmux for cells of type $pmux.
Using template $paramod$645fe0cc96ae5edb83bff90cc2c78f4a20ca3e3c\_90_pmux for cells of type $pmux.
Using template $paramod$a1bc51c02ce12ac21eb18988e83292af48ed7d72\_80_ice40_alu for cells of type $alu.
Using template $paramod$6df0329addda9228fcc2546de2aaf14ad26c98e1\_80_ice40_alu for cells of type $alu.
Using template $paramod$97565c3687be688407d1272a293bd9d0ae6852dc\_90_pmux for cells of type $pmux.
Using template $paramod$c8f9642fe0e0f4527ea400b1bd678c474f53d556\_80_ice40_alu for cells of type $alu.
Using template $paramod$3ef7d3dd227da7627a99c5e5a6a4deb817573e39\_80_ice40_alu for cells of type $alu.
Using template $paramod$constmap:0926405b5b54609f48e76b9324b4f8bf7b09d41e$paramod$b5c0c851c47cd60343f9cd29f600668ee4a8a3fb\_90_shift_shiftx for cells of type $shift.
Using template $paramod$93b49458bab1c00eb32aff458c583f46ff61e60f\_80_ice40_alu for cells of type $alu.
Using extmapper simplemap for cells of type $xor.
Using extmapper simplemap for cells of type $pos.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000000001 for cells of type $lcu.
No more expansions possible.
<suppressed ~1100 debug messages>

17.32. Executing OPT pass (performing simple optimizations).

17.32.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module ice40hx8k.
<suppressed ~1124 debug messages>

17.32.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ice40hx8k'.
<suppressed ~558 debug messages>
Removed a total of 186 cells.

17.32.3. Executing OPT_DFF pass (perform DFF optimizations).

17.32.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ice40hx8k..
Removed 98 unused cells and 635 unused wires.
<suppressed ~99 debug messages>

17.32.5. Finished fast OPT passes.

17.33. Executing ICE40_OPT pass (performing simple optimizations).

17.33.1. Running ICE40 specific optimizations.
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) ice40hx8k.$auto$alumacc.cc:485:replace_alu$1289.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$1289.BB [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) ice40hx8k.$auto$alumacc.cc:485:replace_alu$1321.slice[0].carry: CO=\top_inst.U1.pwm.count [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) ice40hx8k.$auto$alumacc.cc:485:replace_alu$1347.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$1347.BB [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) ice40hx8k.$auto$alumacc.cc:485:replace_alu$1347.slice[10].carry: CO=$auto$alumacc.cc:485:replace_alu$1347.C [10]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) ice40hx8k.$auto$alumacc.cc:485:replace_alu$1347.slice[11].carry: CO=$auto$alumacc.cc:485:replace_alu$1347.C [11]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) ice40hx8k.$auto$alumacc.cc:485:replace_alu$1347.slice[12].carry: CO=$auto$alumacc.cc:485:replace_alu$1347.C [12]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) ice40hx8k.$auto$alumacc.cc:485:replace_alu$1347.slice[13].carry: CO=$auto$alumacc.cc:485:replace_alu$1347.C [13]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) ice40hx8k.$auto$alumacc.cc:485:replace_alu$1347.slice[14].carry: CO=$auto$alumacc.cc:485:replace_alu$1347.C [14]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) ice40hx8k.$auto$alumacc.cc:485:replace_alu$1347.slice[15].carry: CO=$auto$alumacc.cc:485:replace_alu$1347.C [15]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) ice40hx8k.$auto$alumacc.cc:485:replace_alu$1347.slice[16].carry: CO=$auto$alumacc.cc:485:replace_alu$1347.C [16]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) ice40hx8k.$auto$alumacc.cc:485:replace_alu$1347.slice[17].carry: CO=$auto$alumacc.cc:485:replace_alu$1347.C [17]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) ice40hx8k.$auto$alumacc.cc:485:replace_alu$1347.slice[18].carry: CO=$auto$alumacc.cc:485:replace_alu$1347.C [18]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) ice40hx8k.$auto$alumacc.cc:485:replace_alu$1347.slice[19].carry: CO=$auto$alumacc.cc:485:replace_alu$1347.C [19]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) ice40hx8k.$auto$alumacc.cc:485:replace_alu$1347.slice[20].carry: CO=$auto$alumacc.cc:485:replace_alu$1347.C [20]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) ice40hx8k.$auto$alumacc.cc:485:replace_alu$1347.slice[21].carry: CO=$auto$alumacc.cc:485:replace_alu$1347.C [21]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) ice40hx8k.$auto$alumacc.cc:485:replace_alu$1347.slice[22].carry: CO=$auto$alumacc.cc:485:replace_alu$1347.C [22]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) ice40hx8k.$auto$alumacc.cc:485:replace_alu$1347.slice[23].carry: CO=$auto$alumacc.cc:485:replace_alu$1347.C [23]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) ice40hx8k.$auto$alumacc.cc:485:replace_alu$1347.slice[24].carry: CO=$auto$alumacc.cc:485:replace_alu$1347.C [24]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) ice40hx8k.$auto$alumacc.cc:485:replace_alu$1347.slice[25].carry: CO=$auto$alumacc.cc:485:replace_alu$1347.C [25]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) ice40hx8k.$auto$alumacc.cc:485:replace_alu$1347.slice[26].carry: CO=$auto$alumacc.cc:485:replace_alu$1347.C [26]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) ice40hx8k.$auto$alumacc.cc:485:replace_alu$1347.slice[27].carry: CO=$auto$alumacc.cc:485:replace_alu$1347.C [27]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) ice40hx8k.$auto$alumacc.cc:485:replace_alu$1347.slice[28].carry: CO=$auto$alumacc.cc:485:replace_alu$1347.C [28]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) ice40hx8k.$auto$alumacc.cc:485:replace_alu$1347.slice[29].carry: CO=$auto$alumacc.cc:485:replace_alu$1347.C [29]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) ice40hx8k.$auto$alumacc.cc:485:replace_alu$1347.slice[30].carry: CO=$auto$alumacc.cc:485:replace_alu$1347.C [30]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) ice40hx8k.$auto$alumacc.cc:485:replace_alu$1347.slice[31].carry: CO=$auto$alumacc.cc:485:replace_alu$1347.C [31]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) ice40hx8k.$auto$alumacc.cc:485:replace_alu$1347.slice[4].carry: CO=$auto$alumacc.cc:485:replace_alu$1347.C [4]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) ice40hx8k.$auto$alumacc.cc:485:replace_alu$1347.slice[5].carry: CO=$auto$alumacc.cc:485:replace_alu$1347.C [5]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) ice40hx8k.$auto$alumacc.cc:485:replace_alu$1347.slice[6].carry: CO=$auto$alumacc.cc:485:replace_alu$1347.C [6]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) ice40hx8k.$auto$alumacc.cc:485:replace_alu$1347.slice[7].carry: CO=$auto$alumacc.cc:485:replace_alu$1347.C [7]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) ice40hx8k.$auto$alumacc.cc:485:replace_alu$1347.slice[8].carry: CO=$auto$alumacc.cc:485:replace_alu$1347.C [8]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) ice40hx8k.$auto$alumacc.cc:485:replace_alu$1347.slice[9].carry: CO=$auto$alumacc.cc:485:replace_alu$1347.C [9]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) ice40hx8k.$auto$alumacc.cc:485:replace_alu$1350.slice[0].carry: CO=\top_inst.U1.clk8.count [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) ice40hx8k.$auto$alumacc.cc:485:replace_alu$1353.slice[0].carry: CO=\top_inst.U1.clk_div.count [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) ice40hx8k.$auto$alumacc.cc:485:replace_alu$1356.slice[0].carry: CO=\top_inst.U1.osc.count [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) ice40hx8k.$auto$alumacc.cc:485:replace_alu$1359.slice[0].carry: CO=\top_inst.U1.pwm.count [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) ice40hx8k.$auto$alumacc.cc:485:replace_alu$1362.slice[0].carry: CO=\top_inst.U1.seq_div.count_div [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) ice40hx8k.$auto$alumacc.cc:485:replace_alu$1365.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$1365.BB [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) ice40hx8k.$auto$alumacc.cc:485:replace_alu$1371.slice[0].carry: CO=\uart_inst.uart_tx_inst.bit_cnt [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) ice40hx8k.$auto$alumacc.cc:485:replace_alu$1374.slice[0].carry: CO=\uart_inst.uart_tx_inst.prescale_reg [0]

17.33.2. Executing OPT_EXPR pass (perform const folding).
Optimizing module ice40hx8k.
<suppressed ~11 debug messages>

17.33.3. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ice40hx8k'.
<suppressed ~156 debug messages>
Removed a total of 52 cells.

17.33.4. Executing OPT_DFF pass (perform DFF optimizations).

17.33.5. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ice40hx8k..
Removed 2 unused cells and 28 unused wires.
<suppressed ~3 debug messages>

17.33.6. Rerunning OPT passes. (Removed registers in this run.)

17.33.7. Running ICE40 specific optimizations.

17.33.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module ice40hx8k.
<suppressed ~28 debug messages>

17.33.9. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ice40hx8k'.
Removed a total of 0 cells.

17.33.10. Executing OPT_DFF pass (perform DFF optimizations).

17.33.11. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ice40hx8k..
Removed 0 unused cells and 27 unused wires.
<suppressed ~1 debug messages>

17.33.12. Rerunning OPT passes. (Removed registers in this run.)

17.33.13. Running ICE40 specific optimizations.

17.33.14. Executing OPT_EXPR pass (perform const folding).
Optimizing module ice40hx8k.

17.33.15. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ice40hx8k'.
Removed a total of 0 cells.

17.33.16. Executing OPT_DFF pass (perform DFF optimizations).

17.33.17. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ice40hx8k..

17.33.18. Finished OPT passes. (There is nothing left to do.)

17.34. Executing DFFLEGALIZE pass (convert FFs to types supported by the target).

17.35. Executing TECHMAP pass (map to technology primitives).

17.35.1. Executing Verilog-2005 frontend: /home/shay/a/ece270/bin/../share/yosys/ice40/ff_map.v
Parsing Verilog input from `/home/shay/a/ece270/bin/../share/yosys/ice40/ff_map.v' to AST representation.
Generating RTLIL representation for module `\$_DFF_N_'.
Generating RTLIL representation for module `\$_DFF_P_'.
Generating RTLIL representation for module `\$_DFFE_NP_'.
Generating RTLIL representation for module `\$_DFFE_PP_'.
Generating RTLIL representation for module `\$_DFF_NP0_'.
Generating RTLIL representation for module `\$_DFF_NP1_'.
Generating RTLIL representation for module `\$_DFF_PP0_'.
Generating RTLIL representation for module `\$_DFF_PP1_'.
Generating RTLIL representation for module `\$_DFFE_NP0P_'.
Generating RTLIL representation for module `\$_DFFE_NP1P_'.
Generating RTLIL representation for module `\$_DFFE_PP0P_'.
Generating RTLIL representation for module `\$_DFFE_PP1P_'.
Generating RTLIL representation for module `\$_SDFF_NP0_'.
Generating RTLIL representation for module `\$_SDFF_NP1_'.
Generating RTLIL representation for module `\$_SDFF_PP0_'.
Generating RTLIL representation for module `\$_SDFF_PP1_'.
Generating RTLIL representation for module `\$_SDFFCE_NP0P_'.
Generating RTLIL representation for module `\$_SDFFCE_NP1P_'.
Generating RTLIL representation for module `\$_SDFFCE_PP0P_'.
Generating RTLIL representation for module `\$_SDFFCE_PP1P_'.
Successfully finished Verilog frontend.

17.35.2. Continuing TECHMAP pass.
Using template \$_DFF_PP0_ for cells of type $_DFF_PP0_.
Using template \$_DFFE_PP0P_ for cells of type $_DFFE_PP0P_.
Using template \$_DFF_PP1_ for cells of type $_DFF_PP1_.
Using template \$_DFFE_PP_ for cells of type $_DFFE_PP_.
Using template \$_SDFFCE_PP0P_ for cells of type $_SDFFCE_PP0P_.
Using template \$_SDFFCE_PP1P_ for cells of type $_SDFFCE_PP1P_.
No more expansions possible.
<suppressed ~217 debug messages>

17.36. Executing OPT_EXPR pass (perform const folding).
Optimizing module ice40hx8k.

17.37. Executing SIMPLEMAP pass (map simple cells to gate primitives).
Mapping ice40hx8k.$auto$alumacc.cc:485:replace_alu$1347.slice[0].carry ($lut).
Mapping ice40hx8k.$auto$alumacc.cc:485:replace_alu$1347.slice[10].carry ($lut).
Mapping ice40hx8k.$auto$alumacc.cc:485:replace_alu$1350.slice[0].carry ($lut).
Mapping ice40hx8k.$auto$alumacc.cc:485:replace_alu$1353.slice[0].carry ($lut).
Mapping ice40hx8k.$auto$alumacc.cc:485:replace_alu$1356.slice[0].carry ($lut).
Mapping ice40hx8k.$auto$alumacc.cc:485:replace_alu$1359.slice[0].carry ($lut).
Mapping ice40hx8k.$auto$alumacc.cc:485:replace_alu$1362.slice[0].carry ($lut).
Mapping ice40hx8k.$auto$alumacc.cc:485:replace_alu$1365.slice[0].carry ($lut).
Mapping ice40hx8k.$auto$alumacc.cc:485:replace_alu$1371.slice[0].carry ($lut).
Mapping ice40hx8k.$auto$alumacc.cc:485:replace_alu$1374.slice[0].carry ($lut).

17.38. Executing ICE40_OPT pass (performing simple optimizations).

17.38.1. Running ICE40 specific optimizations.

17.38.2. Executing OPT_EXPR pass (perform const folding).
Optimizing module ice40hx8k.
<suppressed ~241 debug messages>

17.38.3. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ice40hx8k'.
<suppressed ~126 debug messages>
Removed a total of 42 cells.

17.38.4. Executing OPT_DFF pass (perform DFF optimizations).

17.38.5. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ice40hx8k..
Removed 0 unused cells and 1140 unused wires.
<suppressed ~1 debug messages>

17.38.6. Rerunning OPT passes. (Removed registers in this run.)

17.38.7. Running ICE40 specific optimizations.

17.38.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module ice40hx8k.

17.38.9. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ice40hx8k'.
Removed a total of 0 cells.

17.38.10. Executing OPT_DFF pass (perform DFF optimizations).

17.38.11. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ice40hx8k..

17.38.12. Finished OPT passes. (There is nothing left to do.)

17.39. Executing TECHMAP pass (map to technology primitives).

17.39.1. Executing Verilog-2005 frontend: /home/shay/a/ece270/bin/../share/yosys/ice40/latches_map.v
Parsing Verilog input from `/home/shay/a/ece270/bin/../share/yosys/ice40/latches_map.v' to AST representation.
Generating RTLIL representation for module `\$_DLATCH_N_'.
Generating RTLIL representation for module `\$_DLATCH_P_'.
Successfully finished Verilog frontend.

17.39.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~4 debug messages>

17.40. Executing ABC pass (technology mapping using ABC).

17.40.1. Extracting gate netlist of module `\ice40hx8k' to `<abc-temp-dir>/input.blif'..
Extracted 801 gates and 1052 wires to a netlist network with 249 inputs and 215 outputs.

17.40.1.1. Executing ABC.
Running ABC command: "<yosys-exe-dir>/yosys-abc" -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_lut <abc-temp-dir>/lutdefs.txt 
ABC: + strash 
ABC: + &get -n 
ABC: + &fraig -x 
ABC: + &put 
ABC: + scorr 
ABC: Warning: The network is combinational (run "fraig" or "fraig_sweep").
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + dch -f 
ABC: + if 
ABC: + mfs2 
ABC: + lutpack -S 1 
ABC: + dress <abc-temp-dir>/input.blif 
ABC: Total number of equiv classes                =     249.
ABC: Participating nodes from both networks       =     596.
ABC: Participating nodes from the first network   =     266. (  76.00 % of nodes)
ABC: Participating nodes from the second network  =     330. (  94.29 % of nodes)
ABC: Node pairs (any polarity)                    =     266. (  76.00 % of names can be moved)
ABC: Node pairs (same polarity)                   =     246. (  70.29 % of names can be moved)
ABC: Total runtime =     0.10 sec
ABC: + write_blif <abc-temp-dir>/output.blif 

17.40.1.2. Re-integrating ABC results.
ABC RESULTS:              $lut cells:      349
ABC RESULTS:        internal signals:      588
ABC RESULTS:           input signals:      249
ABC RESULTS:          output signals:      215
Removing temp directory.

17.41. Executing ICE40_WRAPCARRY pass (wrap carries).

17.42. Executing TECHMAP pass (map to technology primitives).

17.42.1. Executing Verilog-2005 frontend: /home/shay/a/ece270/bin/../share/yosys/ice40/ff_map.v
Parsing Verilog input from `/home/shay/a/ece270/bin/../share/yosys/ice40/ff_map.v' to AST representation.
Generating RTLIL representation for module `\$_DFF_N_'.
Generating RTLIL representation for module `\$_DFF_P_'.
Generating RTLIL representation for module `\$_DFFE_NP_'.
Generating RTLIL representation for module `\$_DFFE_PP_'.
Generating RTLIL representation for module `\$_DFF_NP0_'.
Generating RTLIL representation for module `\$_DFF_NP1_'.
Generating RTLIL representation for module `\$_DFF_PP0_'.
Generating RTLIL representation for module `\$_DFF_PP1_'.
Generating RTLIL representation for module `\$_DFFE_NP0P_'.
Generating RTLIL representation for module `\$_DFFE_NP1P_'.
Generating RTLIL representation for module `\$_DFFE_PP0P_'.
Generating RTLIL representation for module `\$_DFFE_PP1P_'.
Generating RTLIL representation for module `\$_SDFF_NP0_'.
Generating RTLIL representation for module `\$_SDFF_NP1_'.
Generating RTLIL representation for module `\$_SDFF_PP0_'.
Generating RTLIL representation for module `\$_SDFF_PP1_'.
Generating RTLIL representation for module `\$_SDFFCE_NP0P_'.
Generating RTLIL representation for module `\$_SDFFCE_NP1P_'.
Generating RTLIL representation for module `\$_SDFFCE_PP0P_'.
Generating RTLIL representation for module `\$_SDFFCE_PP1P_'.
Successfully finished Verilog frontend.

17.42.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~22 debug messages>
Removed 73 unused cells and 736 unused wires.

17.43. Executing OPT_LUT pass (optimize LUTs).
Discovering LUTs.
Number of LUTs:      438
  1-LUT               71
  2-LUT               80
  3-LUT              161
  4-LUT              126
  with \SB_CARRY    (#0)   82
  with \SB_CARRY    (#1)   84

Eliminating LUTs.
Number of LUTs:      438
  1-LUT               71
  2-LUT               80
  3-LUT              161
  4-LUT              126
  with \SB_CARRY    (#0)   82
  with \SB_CARRY    (#1)   84

Combining LUTs.
Number of LUTs:      413
  1-LUT               70
  2-LUT               54
  3-LUT              141
  4-LUT              148
  with \SB_CARRY    (#0)   82
  with \SB_CARRY    (#1)   84

Eliminated 0 LUTs.
Combined 25 LUTs.
<suppressed ~2441 debug messages>

17.44. Executing TECHMAP pass (map to technology primitives).

17.44.1. Executing Verilog-2005 frontend: /home/shay/a/ece270/bin/../share/yosys/ice40/cells_map.v
Parsing Verilog input from `/home/shay/a/ece270/bin/../share/yosys/ice40/cells_map.v' to AST representation.
Generating RTLIL representation for module `\$lut'.
Successfully finished Verilog frontend.

17.44.2. Continuing TECHMAP pass.
Using template $paramod$fd904e9e35cfd343a9df248824bd3f1408724879\$lut for cells of type $lut.
Using template $paramod$571404c0889eaf57f492cb5e37f8acb5df5852f9\$lut for cells of type $lut.
Using template $paramod$11ec7271d8e6e5aeaace08c13e4c601f10e31038\$lut for cells of type $lut.
Using template $paramod$453111cff761ac57957f9972d987be765170f931\$lut for cells of type $lut.
Using template $paramod$658b9ed803f0d3d335616d3858b53e0a2522f1e8\$lut for cells of type $lut.
Using template $paramod$6d6beead1425af15cf78b27fd9b11b41b5d4bce8\$lut for cells of type $lut.
Using template $paramod$451540f0f4d6738aa7ad07d81c5f0cead4cc4a73\$lut for cells of type $lut.
Using template $paramod$64669a7e87c28e39425dffff48145545533b4971\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'01000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000010\LUT=4'0100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000010\LUT=4'0001 for cells of type $lut.
Using template $paramod$cd6c4b4da6d8737b72fd2dc8f5d83d8967445809\$lut for cells of type $lut.
Using template $paramod$965f8f2fa1a796a6c51222eabb50fbd26e97d98b\$lut for cells of type $lut.
Using template $paramod$8461cf8f35b1a92a9818e6c8caba55bd0f031348\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000010\LUT=4'1000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'00000111 for cells of type $lut.
Using template $paramod$7d791c2363f4f019348f93a148b2a44b4ba6b5b3\$lut for cells of type $lut.
Using template $paramod$5280a6fb15b184512b48cc6d199288a0bfdcb7a5\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'10110000 for cells of type $lut.
Using template $paramod$b297295e19b03521716155b85537bbe86d6a9ae6\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'00001011 for cells of type $lut.
Using template $paramod$a50be0e6fa3a01511bb234559cb74fb8bd3e2061\$lut for cells of type $lut.
Using template $paramod$06a49eeef9c9c0ca3eeb308c4b5ee09a412d6201\$lut for cells of type $lut.
Using template $paramod$6382f7860648fdb6f8a8dc690c25a62882cc501b\$lut for cells of type $lut.
Using template $paramod$41326ad8644342a66dfb051d050f2b6fbf15015b\$lut for cells of type $lut.
Using template $paramod$c24ed72ebb67e9ead6029e42e909ef7fc0abbb11\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'00001101 for cells of type $lut.
Using template $paramod$272652f6c6fbe9a75eff76e45cc7e2788835518b\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'10000000 for cells of type $lut.
Using template $paramod$415b9dd3a15783ae56c103f189fd8e182f997441\$lut for cells of type $lut.
Using template $paramod$199d4d00ba7d2595d4687ef8946b58074293d9f0\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'01100000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'11000101 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000001\LUT=2'01 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'10001111 for cells of type $lut.
Using template $paramod$ad3a97108c9f4d10f8acfa309b668b9455d3d733\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'01001011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'00000001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'01001111 for cells of type $lut.
Using template $paramod$3dac3077b74f27a9efa822cf00e7ed45fb866074\$lut for cells of type $lut.
Using template $paramod$12fb017f90e7463fe74789d2ec23494cce2be24a\$lut for cells of type $lut.
Using template $paramod$56b03bb16189d0df5732f97659a58f26b0c9c41a\$lut for cells of type $lut.
Using template $paramod$85b779ce5ab505dbf25e5e046fb43ca2b76b878b\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'11101011 for cells of type $lut.
Using template $paramod$5a621b016c894274d07edef48c49b401a15fd796\$lut for cells of type $lut.
Using template $paramod$54dc9aafe6e8a348026d60f9910d7f8d3f4d92e9\$lut for cells of type $lut.
Using template $paramod$688901ae8bff259b6d6e1f40e9eee2d362da7922\$lut for cells of type $lut.
Using template $paramod$6e238df02989b317f10820a22773676e71120644\$lut for cells of type $lut.
Using template $paramod$be10d0a69292c54616c3e710ac293a09428f6a8b\$lut for cells of type $lut.
Using template $paramod$4cf5305612d86489c1a6171729557670bf08582e\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'00010000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'11100001 for cells of type $lut.
Using template $paramod$ed00a508267158198462fdb57667dbc416221b4e\$lut for cells of type $lut.
Using template $paramod$7614968db5bb082ee538195c00594779836d04ec\$lut for cells of type $lut.
Using template $paramod$3baa7378a0a5597cc831cdcd7692b74095acd543\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000010\LUT=4'0110 for cells of type $lut.
Using template $paramod$f6718da5409ec8636fab31113c774a3123f56b0b\$lut for cells of type $lut.
Using template $paramod$7c0fa5d918a8d4c0225ab4aa53f9d539c6d5bbda\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'11010000 for cells of type $lut.
Using template $paramod$e8e5609695741cbc3de0a07fbcf5e3ace1c9afc6\$lut for cells of type $lut.
Using template $paramod$deb4f121bbf3d55ed9a98f692fd112e0918f51b5\$lut for cells of type $lut.
Using template $paramod$cb807c4e5b3fc400512485c285f594d5cbc6ceda\$lut for cells of type $lut.
Using template $paramod$53ce561f80f32d4298a3beadc88b6c5c78293221\$lut for cells of type $lut.
Using template $paramod$a59507d273cd827eb6c46c37820d50a1b717efdf\$lut for cells of type $lut.
Using template $paramod$179512a187da069f3b79ef6612a41e494e7d54b6\$lut for cells of type $lut.
Using template $paramod$e9c77024ca501b890c641f9c0b10e27242db8730\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000010\LUT=4'0111 for cells of type $lut.
Using template $paramod$2d07c1a6c53c7b878509360922c4fa5ebedc3011\$lut for cells of type $lut.
Using template $paramod$df196ed0a1da5c4a58c5e08a1dac304fd3fccaab\$lut for cells of type $lut.
Using template $paramod$052ca015f1400ebf950f85d5f181f7a5865c336c\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'10010000 for cells of type $lut.
Using template $paramod$6b0849254d6c87461fb93e37cc18f089f61eb912\$lut for cells of type $lut.
Using template $paramod$e49f6e3576ef1a6d2f58c54414dbb786af8cc869\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'11110100 for cells of type $lut.
Using template $paramod$1f7a849ccc24f2ac250381efb96d0abb38a28f29\$lut for cells of type $lut.
Using template $paramod$fabf1f27adead66f603436aa091302122e430ef0\$lut for cells of type $lut.
Using template $paramod$c82d7aa204724568255de10e493596086641f722\$lut for cells of type $lut.
Using template $paramod$fb5ee0bdef1c4e74aaf1fd8efae98b46a2f5e564\$lut for cells of type $lut.
Using template $paramod$fccccf8bb2add7667329c686feec7546eb9a3ae3\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'10101100 for cells of type $lut.
Using template $paramod$d7f4570f04f68175b1fa25c1bac92938027a2c96\$lut for cells of type $lut.
Using template $paramod$4282def8dbd6df3d1248ad282c629bee684502c2\$lut for cells of type $lut.
Using template $paramod$9d707d218adbd63b6f9a0c79d7ee037306fb6296\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'00001110 for cells of type $lut.
Using template $paramod$97e449d15b607612c49291044eca4e2c8b59088e\$lut for cells of type $lut.
Using template $paramod$0a94662b0161fc067fc2a1123fd5ac94da2ec1db\$lut for cells of type $lut.
Using template $paramod$ae9b8abdb4f811ce37985dd5106af9cd21223954\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'00011111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'11100000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'10110100 for cells of type $lut.
No more expansions possible.
<suppressed ~1586 debug messages>
Removed 0 unused cells and 872 unused wires.

17.45. Executing AUTONAME pass.
Renamed 14906 objects in module ice40hx8k (53 iterations).
<suppressed ~891 debug messages>

17.46. Executing HIERARCHY pass (managing design hierarchy).

17.46.1. Analyzing design hierarchy..
Top module:  \ice40hx8k

17.46.2. Analyzing design hierarchy..
Top module:  \ice40hx8k
Removed 0 unused modules.

17.47. Printing statistics.

=== ice40hx8k ===

   Number of wires:                271
   Number of wire bits:           1667
   Number of public wires:         271
   Number of public wire bits:    1667
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                756
     SB_CARRY                      147
     SB_DFFE                        14
     SB_DFFER                       69
     SB_DFFESR                      15
     SB_DFFESS                       4
     SB_DFFR                        92
     SB_DFFS                         1
     SB_LUT4                       413
     SB_PLL40_CORE                   1

17.48. Executing CHECK pass (checking for obvious problems).
Checking module ice40hx8k...
Found and reported 0 problems.

17.49. Executing JSON backend.

Warnings: 80 unique messages, 80 total
End of script. Logfile hash: 8077c93230, CPU: user 1.34s system 0.02s, MEM: 37.90 MB peak
Yosys 0.27 (git sha1 5f88c218b, gcc 11.3.0-1ubuntu1~22.04 -fPIC -O3)
Time spent: 24% 1x abc (0 sec), 15% 46x opt_expr (0 sec), ...
