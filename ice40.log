
 /----------------------------------------------------------------------------\
 |                                                                            |
 |  yosys -- Yosys Open SYnthesis Suite                                       |
 |                                                                            |
 |  Copyright (C) 2012 - 2020  Claire Xenia Wolf <claire@yosyshq.com>         |
 |                                                                            |
 |  Permission to use, copy, modify, and/or distribute this software for any  |
 |  purpose with or without fee is hereby granted, provided that the above    |
 |  copyright notice and this permission notice appear in all copies.         |
 |                                                                            |
 |  THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES  |
 |  WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF          |
 |  MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR   |
 |  ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES    |
 |  WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN     |
 |  ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF   |
 |  OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.            |
 |                                                                            |
 \----------------------------------------------------------------------------/

 Yosys 0.27 (git sha1 5f88c218b, gcc 11.3.0-1ubuntu1~22.04 -fPIC -O3)


-- Running command `read_verilog -sv -noblackbox ice40/ice40hx8k.sv source/top.sv  ice40/uart/uart.v ice40/uart/uart_tx.v ice40/uart/uart_rx.v; synth_ice40 -top ice40hx8k -json ./ice40/build/ice40.json' --

1. Executing Verilog-2005 frontend: ice40/ice40hx8k.sv
Parsing SystemVerilog input from `ice40/ice40hx8k.sv' to AST representation.
Generating RTLIL representation for module `\ice40hx8k'.
Generating RTLIL representation for module `\reset_on_start'.
Successfully finished Verilog frontend.

2. Executing Verilog-2005 frontend: source/top.sv
Parsing SystemVerilog input from `source/top.sv' to AST representation.
Generating RTLIL representation for module `\top'.
Generating RTLIL representation for module `\sound_series_fsm'.
Successfully finished Verilog frontend.

3. Executing Verilog-2005 frontend: ice40/uart/uart.v
Parsing SystemVerilog input from `ice40/uart/uart.v' to AST representation.
Generating RTLIL representation for module `\uart'.
Successfully finished Verilog frontend.

4. Executing Verilog-2005 frontend: ice40/uart/uart_tx.v
Parsing SystemVerilog input from `ice40/uart/uart_tx.v' to AST representation.
Generating RTLIL representation for module `\uart_tx'.
Successfully finished Verilog frontend.

5. Executing Verilog-2005 frontend: ice40/uart/uart_rx.v
Parsing SystemVerilog input from `ice40/uart/uart_rx.v' to AST representation.
Generating RTLIL representation for module `\uart_rx'.
Successfully finished Verilog frontend.

6. Executing SYNTH_ICE40 pass.

6.1. Executing Verilog-2005 frontend: /home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v
Parsing Verilog input from `/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v' to AST representation.
Generating RTLIL representation for module `\SB_IO'.
Generating RTLIL representation for module `\SB_GB_IO'.
Generating RTLIL representation for module `\SB_GB'.
Generating RTLIL representation for module `\SB_LUT4'.
Generating RTLIL representation for module `\SB_CARRY'.
Generating RTLIL representation for module `\SB_DFF'.
Generating RTLIL representation for module `\SB_DFFE'.
Generating RTLIL representation for module `\SB_DFFSR'.
Generating RTLIL representation for module `\SB_DFFR'.
Generating RTLIL representation for module `\SB_DFFSS'.
Generating RTLIL representation for module `\SB_DFFS'.
Generating RTLIL representation for module `\SB_DFFESR'.
Generating RTLIL representation for module `\SB_DFFER'.
Generating RTLIL representation for module `\SB_DFFESS'.
Generating RTLIL representation for module `\SB_DFFES'.
Generating RTLIL representation for module `\SB_DFFN'.
Generating RTLIL representation for module `\SB_DFFNE'.
Generating RTLIL representation for module `\SB_DFFNSR'.
Generating RTLIL representation for module `\SB_DFFNR'.
Generating RTLIL representation for module `\SB_DFFNSS'.
Generating RTLIL representation for module `\SB_DFFNS'.
Generating RTLIL representation for module `\SB_DFFNESR'.
Generating RTLIL representation for module `\SB_DFFNER'.
Generating RTLIL representation for module `\SB_DFFNESS'.
Generating RTLIL representation for module `\SB_DFFNES'.
Generating RTLIL representation for module `\SB_RAM40_4K'.
Generating RTLIL representation for module `\SB_RAM40_4KNR'.
Generating RTLIL representation for module `\SB_RAM40_4KNW'.
Generating RTLIL representation for module `\SB_RAM40_4KNRNW'.
Generating RTLIL representation for module `\ICESTORM_LC'.
Generating RTLIL representation for module `\SB_PLL40_CORE'.
Generating RTLIL representation for module `\SB_PLL40_PAD'.
Generating RTLIL representation for module `\SB_PLL40_2_PAD'.
Generating RTLIL representation for module `\SB_PLL40_2F_CORE'.
Generating RTLIL representation for module `\SB_PLL40_2F_PAD'.
Generating RTLIL representation for module `\SB_WARMBOOT'.
Generating RTLIL representation for module `\SB_SPRAM256KA'.
Generating RTLIL representation for module `\SB_HFOSC'.
Generating RTLIL representation for module `\SB_LFOSC'.
Generating RTLIL representation for module `\SB_RGBA_DRV'.
Generating RTLIL representation for module `\SB_LED_DRV_CUR'.
Generating RTLIL representation for module `\SB_RGB_DRV'.
Generating RTLIL representation for module `\SB_I2C'.
Generating RTLIL representation for module `\SB_SPI'.
Generating RTLIL representation for module `\SB_LEDDA_IP'.
Generating RTLIL representation for module `\SB_FILTER_50NS'.
Generating RTLIL representation for module `\SB_IO_I3C'.
Generating RTLIL representation for module `\SB_IO_OD'.
Generating RTLIL representation for module `\SB_MAC16'.
Generating RTLIL representation for module `\ICESTORM_RAM'.
Successfully finished Verilog frontend.

6.2. Executing HIERARCHY pass (managing design hierarchy).

6.2.1. Analyzing design hierarchy..
Top module:  \ice40hx8k
Used module:     \top
Used module:         \sound_series_fsm
Used module:     \reset_on_start
Used module:     \uart
Used module:         \uart_rx
Used module:         \uart_tx
Parameter \DATA_WIDTH = 8

6.2.2. Executing AST frontend in derive mode using pre-parsed AST for module `\uart_rx'.
Parameter \DATA_WIDTH = 8
Generating RTLIL representation for module `$paramod\uart_rx\DATA_WIDTH=s32'00000000000000000000000000001000'.
Parameter \DATA_WIDTH = 8

6.2.3. Executing AST frontend in derive mode using pre-parsed AST for module `\uart_tx'.
Parameter \DATA_WIDTH = 8
Generating RTLIL representation for module `$paramod\uart_tx\DATA_WIDTH=s32'00000000000000000000000000001000'.

6.2.4. Analyzing design hierarchy..
Top module:  \ice40hx8k
Used module:     \top
Used module:         \sound_series_fsm
Used module:     \reset_on_start
Used module:     \uart
Used module:         $paramod\uart_rx\DATA_WIDTH=s32'00000000000000000000000000001000
Used module:         $paramod\uart_tx\DATA_WIDTH=s32'00000000000000000000000000001000

6.2.5. Analyzing design hierarchy..
Top module:  \ice40hx8k
Used module:     \top
Used module:         \sound_series_fsm
Used module:     \reset_on_start
Used module:     \uart
Used module:         $paramod\uart_rx\DATA_WIDTH=s32'00000000000000000000000000001000
Used module:         $paramod\uart_tx\DATA_WIDTH=s32'00000000000000000000000000001000
Removing unused module `\uart_rx'.
Removing unused module `\uart_tx'.
Removed 2 unused modules.
Mapping positional arguments of cell ice40hx8k.top_inst (top).
Mapping positional arguments of cell ice40hx8k.ros (reset_on_start).
Warning: Resizing cell port ice40hx8k.uart_inst.prescale from 32 bits to 16 bits.
Warning: Resizing cell port ice40hx8k.uart_inst.rst from 32 bits to 1 bits.

6.3. Executing PROC pass (convert processes to netlists).

6.3.1. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

6.3.2. Executing PROC_RMDEAD pass (remove dead branches from decision trees).
Marked 1 switch rules as full_case in process $proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:1414$330 in module SB_DFFNES.
Marked 1 switch rules as full_case in process $proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:1353$323 in module SB_DFFNESS.
Marked 1 switch rules as full_case in process $proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:1273$319 in module SB_DFFNER.
Marked 1 switch rules as full_case in process $proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:1212$312 in module SB_DFFNESR.
Marked 1 switch rules as full_case in process $proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:1138$309 in module SB_DFFNS.
Marked 1 switch rules as full_case in process $proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:1088$306 in module SB_DFFNSS.
Marked 1 switch rules as full_case in process $proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:1017$303 in module SB_DFFNR.
Marked 1 switch rules as full_case in process $proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:967$300 in module SB_DFFNSR.
Marked 1 switch rules as full_case in process $proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:803$292 in module SB_DFFES.
Marked 1 switch rules as full_case in process $proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:742$285 in module SB_DFFESS.
Marked 1 switch rules as full_case in process $proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:662$281 in module SB_DFFER.
Marked 1 switch rules as full_case in process $proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:601$274 in module SB_DFFESR.
Marked 1 switch rules as full_case in process $proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:527$271 in module SB_DFFS.
Marked 1 switch rules as full_case in process $proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:477$268 in module SB_DFFSS.
Marked 1 switch rules as full_case in process $proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:406$265 in module SB_DFFR.
Marked 1 switch rules as full_case in process $proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:356$262 in module SB_DFFSR.
Marked 4 switch rules as full_case in process $proc$ice40/uart/uart_tx.v:78$498 in module $paramod\uart_tx\DATA_WIDTH=s32'00000000000000000000000000001000.
Marked 7 switch rules as full_case in process $proc$ice40/uart/uart_rx.v:86$470 in module $paramod\uart_rx\DATA_WIDTH=s32'00000000000000000000000000001000.
Marked 1 switch rules as full_case in process $proc$source/top.sv:81$40 in module sound_series_fsm.
Marked 1 switch rules as full_case in process $proc$source/top.sv:74$38 in module sound_series_fsm.
Removed 4 dead cases from process $proc$source/top.sv:0$25 in module sound_series_fsm.
Marked 4 switch rules as full_case in process $proc$source/top.sv:0$25 in module sound_series_fsm.
Marked 5 switch rules as full_case in process $proc$ice40/ice40hx8k.sv:131$16 in module reset_on_start.
Marked 1 switch rules as full_case in process $proc$ice40/ice40hx8k.sv:104$9 in module ice40hx8k.
Marked 1 switch rules as full_case in process $proc$ice40/ice40hx8k.sv:98$7 in module ice40hx8k.
Marked 1 switch rules as full_case in process $proc$ice40/ice40hx8k.sv:14$1 in module ice40hx8k.
Removed a total of 4 dead cases.

6.3.3. Executing PROC_PRUNE pass (remove redundant assignments in processes).
Removed 16 redundant assignments.
Promoted 44 assignments to connections.

6.3.4. Executing PROC_INIT pass (extract init attributes).
Found init rule in `\SB_DFFNES.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$333'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFNESS.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$329'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFNER.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$322'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFNESR.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$318'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFNS.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$311'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFNSS.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$308'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFNR.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$305'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFNSR.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$302'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFNE.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$299'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFN.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$297'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFES.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$295'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFESS.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$291'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFER.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$284'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFESR.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$280'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFS.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$273'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFSS.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$270'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFR.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$267'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFSR.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$264'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFE.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$261'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFF.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$259'.
  Set init value: \Q = 1'0
Found init rule in `$paramod\uart_tx\DATA_WIDTH=s32'00000000000000000000000000001000.$proc$ice40/uart/uart_tx.v:71$517'.
  Set init value: \bit_cnt = 4'0000
Found init rule in `$paramod\uart_tx\DATA_WIDTH=s32'00000000000000000000000000001000.$proc$ice40/uart/uart_tx.v:70$516'.
  Set init value: \prescale_reg = 19'0000000000000000000
Found init rule in `$paramod\uart_tx\DATA_WIDTH=s32'00000000000000000000000000001000.$proc$ice40/uart/uart_tx.v:69$515'.
  Set init value: \data_reg = 9'000000000
Found init rule in `$paramod\uart_tx\DATA_WIDTH=s32'00000000000000000000000000001000.$proc$ice40/uart/uart_tx.v:67$514'.
  Set init value: \busy_reg = 1'0
Found init rule in `$paramod\uart_tx\DATA_WIDTH=s32'00000000000000000000000000001000.$proc$ice40/uart/uart_tx.v:65$513'.
  Set init value: \txd_reg = 1'1
Found init rule in `$paramod\uart_tx\DATA_WIDTH=s32'00000000000000000000000000001000.$proc$ice40/uart/uart_tx.v:63$512'.
  Set init value: \input_axis_tready_reg = 1'0
Found init rule in `$paramod\uart_rx\DATA_WIDTH=s32'00000000000000000000000000001000.$proc$ice40/uart/uart_rx.v:77$497'.
  Set init value: \bit_cnt = 4'0000
Found init rule in `$paramod\uart_rx\DATA_WIDTH=s32'00000000000000000000000000001000.$proc$ice40/uart/uart_rx.v:76$496'.
  Set init value: \prescale_reg = 19'0000000000000000000
Found init rule in `$paramod\uart_rx\DATA_WIDTH=s32'00000000000000000000000000001000.$proc$ice40/uart/uart_rx.v:75$495'.
  Set init value: \data_reg = 8'00000000
Found init rule in `$paramod\uart_rx\DATA_WIDTH=s32'00000000000000000000000000001000.$proc$ice40/uart/uart_rx.v:73$494'.
  Set init value: \frame_error_reg = 1'0
Found init rule in `$paramod\uart_rx\DATA_WIDTH=s32'00000000000000000000000000001000.$proc$ice40/uart/uart_rx.v:72$493'.
  Set init value: \overrun_error_reg = 1'0
Found init rule in `$paramod\uart_rx\DATA_WIDTH=s32'00000000000000000000000000001000.$proc$ice40/uart/uart_rx.v:71$492'.
  Set init value: \busy_reg = 1'0
Found init rule in `$paramod\uart_rx\DATA_WIDTH=s32'00000000000000000000000000001000.$proc$ice40/uart/uart_rx.v:69$491'.
  Set init value: \rxd_reg = 1'1
Found init rule in `$paramod\uart_rx\DATA_WIDTH=s32'00000000000000000000000000001000.$proc$ice40/uart/uart_rx.v:67$490'.
  Set init value: \output_axis_tvalid_reg = 1'0
Found init rule in `$paramod\uart_rx\DATA_WIDTH=s32'00000000000000000000000000001000.$proc$ice40/uart/uart_rx.v:66$489'.
  Set init value: \output_axis_tdata_reg = 8'00000000
Found init rule in `\reset_on_start.$proc$ice40/ice40hx8k.sv:129$23'.
  Set init value: \startup = 3'000
Found init rule in `\ice40hx8k.$proc$ice40/ice40hx8k.sv:13$14'.
  Set init value: \hz100 = 1'0
Found init rule in `\ice40hx8k.$proc$ice40/ice40hx8k.sv:12$13'.
  Set init value: \ctr = 21'000000000000000000000

6.3.5. Executing PROC_ARST pass (detect async resets in processes).
Found async reset \S in `\SB_DFFNES.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:1414$330'.
Found async reset \R in `\SB_DFFNER.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:1273$319'.
Found async reset \S in `\SB_DFFNS.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:1138$309'.
Found async reset \R in `\SB_DFFNR.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:1017$303'.
Found async reset \S in `\SB_DFFES.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:803$292'.
Found async reset \R in `\SB_DFFER.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:662$281'.
Found async reset \S in `\SB_DFFS.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:527$271'.
Found async reset \R in `\SB_DFFR.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:406$265'.
Found async reset \n_rst in `\sound_series_fsm.$proc$source/top.sv:81$40'.
Found async reset \n_rst in `\sound_series_fsm.$proc$source/top.sv:74$38'.
Found async reset \manual in `\reset_on_start.$proc$ice40/ice40hx8k.sv:131$16'.
Found async reset \rxready in `\ice40hx8k.$proc$ice40/ice40hx8k.sv:104$9'.
Found async reset \txready in `\ice40hx8k.$proc$ice40/ice40hx8k.sv:98$7'.

6.3.6. Executing PROC_ROM pass (convert switches to ROMs).
Converted 1 switch.
<suppressed ~43 debug messages>

6.3.7. Executing PROC_MUX pass (convert decision trees to multiplexers).
Creating decoders for process `\SB_DFFNES.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$333'.
Creating decoders for process `\SB_DFFNES.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:1414$330'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFNESS.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$329'.
Creating decoders for process `\SB_DFFNESS.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:1353$323'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFNER.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$322'.
Creating decoders for process `\SB_DFFNER.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:1273$319'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFNESR.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$318'.
Creating decoders for process `\SB_DFFNESR.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:1212$312'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFNS.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$311'.
Creating decoders for process `\SB_DFFNS.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:1138$309'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFNSS.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$308'.
Creating decoders for process `\SB_DFFNSS.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:1088$306'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFNR.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$305'.
Creating decoders for process `\SB_DFFNR.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:1017$303'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFNSR.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$302'.
Creating decoders for process `\SB_DFFNSR.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:967$300'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFNE.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$299'.
Creating decoders for process `\SB_DFFNE.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:922$298'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFN.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$297'.
Creating decoders for process `\SB_DFFN.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:882$296'.
Creating decoders for process `\SB_DFFES.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$295'.
Creating decoders for process `\SB_DFFES.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:803$292'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFESS.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$291'.
Creating decoders for process `\SB_DFFESS.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:742$285'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFER.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$284'.
Creating decoders for process `\SB_DFFER.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:662$281'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFESR.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$280'.
Creating decoders for process `\SB_DFFESR.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:601$274'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFS.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$273'.
Creating decoders for process `\SB_DFFS.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:527$271'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFSS.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$270'.
Creating decoders for process `\SB_DFFSS.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:477$268'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFR.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$267'.
Creating decoders for process `\SB_DFFR.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:406$265'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFSR.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$264'.
Creating decoders for process `\SB_DFFSR.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:356$262'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFE.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$261'.
Creating decoders for process `\SB_DFFE.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:311$260'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFF.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$259'.
Creating decoders for process `\SB_DFF.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:271$258'.
Creating decoders for process `$paramod\uart_tx\DATA_WIDTH=s32'00000000000000000000000000001000.$proc$ice40/uart/uart_tx.v:71$517'.
Creating decoders for process `$paramod\uart_tx\DATA_WIDTH=s32'00000000000000000000000000001000.$proc$ice40/uart/uart_tx.v:70$516'.
Creating decoders for process `$paramod\uart_tx\DATA_WIDTH=s32'00000000000000000000000000001000.$proc$ice40/uart/uart_tx.v:69$515'.
Creating decoders for process `$paramod\uart_tx\DATA_WIDTH=s32'00000000000000000000000000001000.$proc$ice40/uart/uart_tx.v:67$514'.
Creating decoders for process `$paramod\uart_tx\DATA_WIDTH=s32'00000000000000000000000000001000.$proc$ice40/uart/uart_tx.v:65$513'.
Creating decoders for process `$paramod\uart_tx\DATA_WIDTH=s32'00000000000000000000000000001000.$proc$ice40/uart/uart_tx.v:63$512'.
Creating decoders for process `$paramod\uart_tx\DATA_WIDTH=s32'00000000000000000000000000001000.$proc$ice40/uart/uart_tx.v:78$498'.
     1/6: $0\data_reg[8:0]
     2/6: $0\prescale_reg[18:0]
     3/6: $0\txd_reg[0:0]
     4/6: $0\busy_reg[0:0]
     5/6: $0\bit_cnt[3:0]
     6/6: $0\input_axis_tready_reg[0:0]
Creating decoders for process `$paramod\uart_rx\DATA_WIDTH=s32'00000000000000000000000000001000.$proc$ice40/uart/uart_rx.v:77$497'.
Creating decoders for process `$paramod\uart_rx\DATA_WIDTH=s32'00000000000000000000000000001000.$proc$ice40/uart/uart_rx.v:76$496'.
Creating decoders for process `$paramod\uart_rx\DATA_WIDTH=s32'00000000000000000000000000001000.$proc$ice40/uart/uart_rx.v:75$495'.
Creating decoders for process `$paramod\uart_rx\DATA_WIDTH=s32'00000000000000000000000000001000.$proc$ice40/uart/uart_rx.v:73$494'.
Creating decoders for process `$paramod\uart_rx\DATA_WIDTH=s32'00000000000000000000000000001000.$proc$ice40/uart/uart_rx.v:72$493'.
Creating decoders for process `$paramod\uart_rx\DATA_WIDTH=s32'00000000000000000000000000001000.$proc$ice40/uart/uart_rx.v:71$492'.
Creating decoders for process `$paramod\uart_rx\DATA_WIDTH=s32'00000000000000000000000000001000.$proc$ice40/uart/uart_rx.v:69$491'.
Creating decoders for process `$paramod\uart_rx\DATA_WIDTH=s32'00000000000000000000000000001000.$proc$ice40/uart/uart_rx.v:67$490'.
Creating decoders for process `$paramod\uart_rx\DATA_WIDTH=s32'00000000000000000000000000001000.$proc$ice40/uart/uart_rx.v:66$489'.
Creating decoders for process `$paramod\uart_rx\DATA_WIDTH=s32'00000000000000000000000000001000.$proc$ice40/uart/uart_rx.v:86$470'.
     1/9: $0\frame_error_reg[0:0]
     2/9: $0\overrun_error_reg[0:0]
     3/9: $0\rxd_reg[0:0]
     4/9: $0\output_axis_tvalid_reg[0:0]
     5/9: $0\output_axis_tdata_reg[7:0]
     6/9: $0\bit_cnt[3:0]
     7/9: $0\prescale_reg[18:0]
     8/9: $0\data_reg[7:0]
     9/9: $0\busy_reg[0:0]
Creating decoders for process `\sound_series_fsm.$proc$source/top.sv:81$40'.
     1/1: $0\sound[0:0]
Creating decoders for process `\sound_series_fsm.$proc$source/top.sv:74$38'.
     1/1: $0\note[3:0]
Creating decoders for process `\sound_series_fsm.$proc$source/top.sv:0$25'.
     1/4: $1\note_out[3:0]
     2/4: $1\next_note[3:0]
     3/4: $1\s1_on[0:0]
     4/4: $1\next_sound[0:0]
Creating decoders for process `\reset_on_start.$proc$ice40/ice40hx8k.sv:129$23'.
Creating decoders for process `\reset_on_start.$proc$ice40/ice40hx8k.sv:131$16'.
     1/1: $0\startup[2:0]
Creating decoders for process `\ice40hx8k.$proc$ice40/ice40hx8k.sv:13$14'.
Creating decoders for process `\ice40hx8k.$proc$ice40/ice40hx8k.sv:12$13'.
Creating decoders for process `\ice40hx8k.$proc$ice40/ice40hx8k.sv:104$9'.
     1/1: $0\recv[0:0]
Creating decoders for process `\ice40hx8k.$proc$ice40/ice40hx8k.sv:98$7'.
     1/1: $0\xmit[0:0]
Creating decoders for process `\ice40hx8k.$proc$ice40/ice40hx8k.sv:14$1'.
     1/2: $0\ctr[20:0]
     2/2: $0\hz100[0:0]

6.3.8. Executing PROC_DLATCH pass (convert process syncs to latches).
No latch inferred for signal `\sound_series_fsm.\note_out' from process `\sound_series_fsm.$proc$source/top.sv:0$25'.
No latch inferred for signal `\sound_series_fsm.\next_note' from process `\sound_series_fsm.$proc$source/top.sv:0$25'.
No latch inferred for signal `\sound_series_fsm.\next_sound' from process `\sound_series_fsm.$proc$source/top.sv:0$25'.
No latch inferred for signal `\sound_series_fsm.\s1_on' from process `\sound_series_fsm.$proc$source/top.sv:0$25'.

6.3.9. Executing PROC_DFF pass (convert process syncs to FFs).
Creating register for signal `\SB_DFFNES.\Q' using process `\SB_DFFNES.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:1414$330'.
  created $adff cell `$procdff$843' with negative edge clock and positive level reset.
Creating register for signal `\SB_DFFNESS.\Q' using process `\SB_DFFNESS.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:1353$323'.
  created $dff cell `$procdff$844' with negative edge clock.
Creating register for signal `\SB_DFFNER.\Q' using process `\SB_DFFNER.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:1273$319'.
  created $adff cell `$procdff$845' with negative edge clock and positive level reset.
Creating register for signal `\SB_DFFNESR.\Q' using process `\SB_DFFNESR.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:1212$312'.
  created $dff cell `$procdff$846' with negative edge clock.
Creating register for signal `\SB_DFFNS.\Q' using process `\SB_DFFNS.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:1138$309'.
  created $adff cell `$procdff$847' with negative edge clock and positive level reset.
Creating register for signal `\SB_DFFNSS.\Q' using process `\SB_DFFNSS.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:1088$306'.
  created $dff cell `$procdff$848' with negative edge clock.
Creating register for signal `\SB_DFFNR.\Q' using process `\SB_DFFNR.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:1017$303'.
  created $adff cell `$procdff$849' with negative edge clock and positive level reset.
Creating register for signal `\SB_DFFNSR.\Q' using process `\SB_DFFNSR.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:967$300'.
  created $dff cell `$procdff$850' with negative edge clock.
Creating register for signal `\SB_DFFNE.\Q' using process `\SB_DFFNE.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:922$298'.
  created $dff cell `$procdff$851' with negative edge clock.
Creating register for signal `\SB_DFFN.\Q' using process `\SB_DFFN.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:882$296'.
  created $dff cell `$procdff$852' with negative edge clock.
Creating register for signal `\SB_DFFES.\Q' using process `\SB_DFFES.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:803$292'.
  created $adff cell `$procdff$853' with positive edge clock and positive level reset.
Creating register for signal `\SB_DFFESS.\Q' using process `\SB_DFFESS.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:742$285'.
  created $dff cell `$procdff$854' with positive edge clock.
Creating register for signal `\SB_DFFER.\Q' using process `\SB_DFFER.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:662$281'.
  created $adff cell `$procdff$855' with positive edge clock and positive level reset.
Creating register for signal `\SB_DFFESR.\Q' using process `\SB_DFFESR.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:601$274'.
  created $dff cell `$procdff$856' with positive edge clock.
Creating register for signal `\SB_DFFS.\Q' using process `\SB_DFFS.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:527$271'.
  created $adff cell `$procdff$857' with positive edge clock and positive level reset.
Creating register for signal `\SB_DFFSS.\Q' using process `\SB_DFFSS.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:477$268'.
  created $dff cell `$procdff$858' with positive edge clock.
Creating register for signal `\SB_DFFR.\Q' using process `\SB_DFFR.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:406$265'.
  created $adff cell `$procdff$859' with positive edge clock and positive level reset.
Creating register for signal `\SB_DFFSR.\Q' using process `\SB_DFFSR.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:356$262'.
  created $dff cell `$procdff$860' with positive edge clock.
Creating register for signal `\SB_DFFE.\Q' using process `\SB_DFFE.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:311$260'.
  created $dff cell `$procdff$861' with positive edge clock.
Creating register for signal `\SB_DFF.\Q' using process `\SB_DFF.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:271$258'.
  created $dff cell `$procdff$862' with positive edge clock.
Creating register for signal `$paramod\uart_tx\DATA_WIDTH=s32'00000000000000000000000000001000.\input_axis_tready_reg' using process `$paramod\uart_tx\DATA_WIDTH=s32'00000000000000000000000000001000.$proc$ice40/uart/uart_tx.v:78$498'.
  created $dff cell `$procdff$863' with positive edge clock.
Creating register for signal `$paramod\uart_tx\DATA_WIDTH=s32'00000000000000000000000000001000.\txd_reg' using process `$paramod\uart_tx\DATA_WIDTH=s32'00000000000000000000000000001000.$proc$ice40/uart/uart_tx.v:78$498'.
  created $dff cell `$procdff$864' with positive edge clock.
Creating register for signal `$paramod\uart_tx\DATA_WIDTH=s32'00000000000000000000000000001000.\busy_reg' using process `$paramod\uart_tx\DATA_WIDTH=s32'00000000000000000000000000001000.$proc$ice40/uart/uart_tx.v:78$498'.
  created $dff cell `$procdff$865' with positive edge clock.
Creating register for signal `$paramod\uart_tx\DATA_WIDTH=s32'00000000000000000000000000001000.\data_reg' using process `$paramod\uart_tx\DATA_WIDTH=s32'00000000000000000000000000001000.$proc$ice40/uart/uart_tx.v:78$498'.
  created $dff cell `$procdff$866' with positive edge clock.
Creating register for signal `$paramod\uart_tx\DATA_WIDTH=s32'00000000000000000000000000001000.\prescale_reg' using process `$paramod\uart_tx\DATA_WIDTH=s32'00000000000000000000000000001000.$proc$ice40/uart/uart_tx.v:78$498'.
  created $dff cell `$procdff$867' with positive edge clock.
Creating register for signal `$paramod\uart_tx\DATA_WIDTH=s32'00000000000000000000000000001000.\bit_cnt' using process `$paramod\uart_tx\DATA_WIDTH=s32'00000000000000000000000000001000.$proc$ice40/uart/uart_tx.v:78$498'.
  created $dff cell `$procdff$868' with positive edge clock.
Creating register for signal `$paramod\uart_rx\DATA_WIDTH=s32'00000000000000000000000000001000.\busy_reg' using process `$paramod\uart_rx\DATA_WIDTH=s32'00000000000000000000000000001000.$proc$ice40/uart/uart_rx.v:86$470'.
  created $dff cell `$procdff$869' with positive edge clock.
Creating register for signal `$paramod\uart_rx\DATA_WIDTH=s32'00000000000000000000000000001000.\data_reg' using process `$paramod\uart_rx\DATA_WIDTH=s32'00000000000000000000000000001000.$proc$ice40/uart/uart_rx.v:86$470'.
  created $dff cell `$procdff$870' with positive edge clock.
Creating register for signal `$paramod\uart_rx\DATA_WIDTH=s32'00000000000000000000000000001000.\prescale_reg' using process `$paramod\uart_rx\DATA_WIDTH=s32'00000000000000000000000000001000.$proc$ice40/uart/uart_rx.v:86$470'.
  created $dff cell `$procdff$871' with positive edge clock.
Creating register for signal `$paramod\uart_rx\DATA_WIDTH=s32'00000000000000000000000000001000.\bit_cnt' using process `$paramod\uart_rx\DATA_WIDTH=s32'00000000000000000000000000001000.$proc$ice40/uart/uart_rx.v:86$470'.
  created $dff cell `$procdff$872' with positive edge clock.
Creating register for signal `$paramod\uart_rx\DATA_WIDTH=s32'00000000000000000000000000001000.\output_axis_tdata_reg' using process `$paramod\uart_rx\DATA_WIDTH=s32'00000000000000000000000000001000.$proc$ice40/uart/uart_rx.v:86$470'.
  created $dff cell `$procdff$873' with positive edge clock.
Creating register for signal `$paramod\uart_rx\DATA_WIDTH=s32'00000000000000000000000000001000.\output_axis_tvalid_reg' using process `$paramod\uart_rx\DATA_WIDTH=s32'00000000000000000000000000001000.$proc$ice40/uart/uart_rx.v:86$470'.
  created $dff cell `$procdff$874' with positive edge clock.
Creating register for signal `$paramod\uart_rx\DATA_WIDTH=s32'00000000000000000000000000001000.\rxd_reg' using process `$paramod\uart_rx\DATA_WIDTH=s32'00000000000000000000000000001000.$proc$ice40/uart/uart_rx.v:86$470'.
  created $dff cell `$procdff$875' with positive edge clock.
Creating register for signal `$paramod\uart_rx\DATA_WIDTH=s32'00000000000000000000000000001000.\overrun_error_reg' using process `$paramod\uart_rx\DATA_WIDTH=s32'00000000000000000000000000001000.$proc$ice40/uart/uart_rx.v:86$470'.
  created $dff cell `$procdff$876' with positive edge clock.
Creating register for signal `$paramod\uart_rx\DATA_WIDTH=s32'00000000000000000000000000001000.\frame_error_reg' using process `$paramod\uart_rx\DATA_WIDTH=s32'00000000000000000000000000001000.$proc$ice40/uart/uart_rx.v:86$470'.
  created $dff cell `$procdff$877' with positive edge clock.
Creating register for signal `\sound_series_fsm.\sound' using process `\sound_series_fsm.$proc$source/top.sv:81$40'.
  created $adff cell `$procdff$878' with positive edge clock and negative level reset.
Creating register for signal `\sound_series_fsm.\note' using process `\sound_series_fsm.$proc$source/top.sv:74$38'.
  created $adff cell `$procdff$879' with positive edge clock and negative level reset.
Creating register for signal `\reset_on_start.\startup' using process `\reset_on_start.$proc$ice40/ice40hx8k.sv:131$16'.
  created $adff cell `$procdff$880' with positive edge clock and positive level reset.
Creating register for signal `\ice40hx8k.\recv' using process `\ice40hx8k.$proc$ice40/ice40hx8k.sv:104$9'.
  created $adff cell `$procdff$881' with positive edge clock and negative level reset.
Creating register for signal `\ice40hx8k.\xmit' using process `\ice40hx8k.$proc$ice40/ice40hx8k.sv:98$7'.
  created $adff cell `$procdff$882' with positive edge clock and negative level reset.
Creating register for signal `\ice40hx8k.\ctr' using process `\ice40hx8k.$proc$ice40/ice40hx8k.sv:14$1'.
  created $dff cell `$procdff$883' with positive edge clock.
Creating register for signal `\ice40hx8k.\hz100' using process `\ice40hx8k.$proc$ice40/ice40hx8k.sv:14$1'.
  created $dff cell `$procdff$884' with positive edge clock.

6.3.10. Executing PROC_MEMWR pass (convert process memory writes to cells).

6.3.11. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Removing empty process `SB_DFFNES.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$333'.
Found and cleaned up 1 empty switch in `\SB_DFFNES.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:1414$330'.
Removing empty process `SB_DFFNES.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:1414$330'.
Removing empty process `SB_DFFNESS.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$329'.
Found and cleaned up 2 empty switches in `\SB_DFFNESS.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:1353$323'.
Removing empty process `SB_DFFNESS.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:1353$323'.
Removing empty process `SB_DFFNER.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$322'.
Found and cleaned up 1 empty switch in `\SB_DFFNER.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:1273$319'.
Removing empty process `SB_DFFNER.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:1273$319'.
Removing empty process `SB_DFFNESR.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$318'.
Found and cleaned up 2 empty switches in `\SB_DFFNESR.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:1212$312'.
Removing empty process `SB_DFFNESR.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:1212$312'.
Removing empty process `SB_DFFNS.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$311'.
Removing empty process `SB_DFFNS.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:1138$309'.
Removing empty process `SB_DFFNSS.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$308'.
Found and cleaned up 1 empty switch in `\SB_DFFNSS.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:1088$306'.
Removing empty process `SB_DFFNSS.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:1088$306'.
Removing empty process `SB_DFFNR.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$305'.
Removing empty process `SB_DFFNR.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:1017$303'.
Removing empty process `SB_DFFNSR.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$302'.
Found and cleaned up 1 empty switch in `\SB_DFFNSR.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:967$300'.
Removing empty process `SB_DFFNSR.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:967$300'.
Removing empty process `SB_DFFNE.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$299'.
Found and cleaned up 1 empty switch in `\SB_DFFNE.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:922$298'.
Removing empty process `SB_DFFNE.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:922$298'.
Removing empty process `SB_DFFN.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$297'.
Removing empty process `SB_DFFN.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:882$296'.
Removing empty process `SB_DFFES.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$295'.
Found and cleaned up 1 empty switch in `\SB_DFFES.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:803$292'.
Removing empty process `SB_DFFES.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:803$292'.
Removing empty process `SB_DFFESS.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$291'.
Found and cleaned up 2 empty switches in `\SB_DFFESS.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:742$285'.
Removing empty process `SB_DFFESS.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:742$285'.
Removing empty process `SB_DFFER.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$284'.
Found and cleaned up 1 empty switch in `\SB_DFFER.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:662$281'.
Removing empty process `SB_DFFER.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:662$281'.
Removing empty process `SB_DFFESR.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$280'.
Found and cleaned up 2 empty switches in `\SB_DFFESR.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:601$274'.
Removing empty process `SB_DFFESR.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:601$274'.
Removing empty process `SB_DFFS.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$273'.
Removing empty process `SB_DFFS.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:527$271'.
Removing empty process `SB_DFFSS.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$270'.
Found and cleaned up 1 empty switch in `\SB_DFFSS.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:477$268'.
Removing empty process `SB_DFFSS.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:477$268'.
Removing empty process `SB_DFFR.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$267'.
Removing empty process `SB_DFFR.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:406$265'.
Removing empty process `SB_DFFSR.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$264'.
Found and cleaned up 1 empty switch in `\SB_DFFSR.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:356$262'.
Removing empty process `SB_DFFSR.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:356$262'.
Removing empty process `SB_DFFE.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$261'.
Found and cleaned up 1 empty switch in `\SB_DFFE.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:311$260'.
Removing empty process `SB_DFFE.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:311$260'.
Removing empty process `SB_DFF.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$259'.
Removing empty process `SB_DFF.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:271$258'.
Removing empty process `$paramod\uart_tx\DATA_WIDTH=s32'00000000000000000000000000001000.$proc$ice40/uart/uart_tx.v:71$517'.
Removing empty process `$paramod\uart_tx\DATA_WIDTH=s32'00000000000000000000000000001000.$proc$ice40/uart/uart_tx.v:70$516'.
Removing empty process `$paramod\uart_tx\DATA_WIDTH=s32'00000000000000000000000000001000.$proc$ice40/uart/uart_tx.v:69$515'.
Removing empty process `$paramod\uart_tx\DATA_WIDTH=s32'00000000000000000000000000001000.$proc$ice40/uart/uart_tx.v:67$514'.
Removing empty process `$paramod\uart_tx\DATA_WIDTH=s32'00000000000000000000000000001000.$proc$ice40/uart/uart_tx.v:65$513'.
Removing empty process `$paramod\uart_tx\DATA_WIDTH=s32'00000000000000000000000000001000.$proc$ice40/uart/uart_tx.v:63$512'.
Found and cleaned up 6 empty switches in `$paramod\uart_tx\DATA_WIDTH=s32'00000000000000000000000000001000.$proc$ice40/uart/uart_tx.v:78$498'.
Removing empty process `$paramod\uart_tx\DATA_WIDTH=s32'00000000000000000000000000001000.$proc$ice40/uart/uart_tx.v:78$498'.
Removing empty process `$paramod\uart_rx\DATA_WIDTH=s32'00000000000000000000000000001000.$proc$ice40/uart/uart_rx.v:77$497'.
Removing empty process `$paramod\uart_rx\DATA_WIDTH=s32'00000000000000000000000000001000.$proc$ice40/uart/uart_rx.v:76$496'.
Removing empty process `$paramod\uart_rx\DATA_WIDTH=s32'00000000000000000000000000001000.$proc$ice40/uart/uart_rx.v:75$495'.
Removing empty process `$paramod\uart_rx\DATA_WIDTH=s32'00000000000000000000000000001000.$proc$ice40/uart/uart_rx.v:73$494'.
Removing empty process `$paramod\uart_rx\DATA_WIDTH=s32'00000000000000000000000000001000.$proc$ice40/uart/uart_rx.v:72$493'.
Removing empty process `$paramod\uart_rx\DATA_WIDTH=s32'00000000000000000000000000001000.$proc$ice40/uart/uart_rx.v:71$492'.
Removing empty process `$paramod\uart_rx\DATA_WIDTH=s32'00000000000000000000000000001000.$proc$ice40/uart/uart_rx.v:69$491'.
Removing empty process `$paramod\uart_rx\DATA_WIDTH=s32'00000000000000000000000000001000.$proc$ice40/uart/uart_rx.v:67$490'.
Removing empty process `$paramod\uart_rx\DATA_WIDTH=s32'00000000000000000000000000001000.$proc$ice40/uart/uart_rx.v:66$489'.
Found and cleaned up 10 empty switches in `$paramod\uart_rx\DATA_WIDTH=s32'00000000000000000000000000001000.$proc$ice40/uart/uart_rx.v:86$470'.
Removing empty process `$paramod\uart_rx\DATA_WIDTH=s32'00000000000000000000000000001000.$proc$ice40/uart/uart_rx.v:86$470'.
Removing empty process `sound_series_fsm.$proc$source/top.sv:81$40'.
Removing empty process `sound_series_fsm.$proc$source/top.sv:74$38'.
Found and cleaned up 4 empty switches in `\sound_series_fsm.$proc$source/top.sv:0$25'.
Removing empty process `sound_series_fsm.$proc$source/top.sv:0$25'.
Removing empty process `reset_on_start.$proc$ice40/ice40hx8k.sv:129$23'.
Found and cleaned up 5 empty switches in `\reset_on_start.$proc$ice40/ice40hx8k.sv:131$16'.
Removing empty process `reset_on_start.$proc$ice40/ice40hx8k.sv:131$16'.
Removing empty process `ice40hx8k.$proc$ice40/ice40hx8k.sv:13$14'.
Removing empty process `ice40hx8k.$proc$ice40/ice40hx8k.sv:12$13'.
Removing empty process `ice40hx8k.$proc$ice40/ice40hx8k.sv:104$9'.
Removing empty process `ice40hx8k.$proc$ice40/ice40hx8k.sv:98$7'.
Found and cleaned up 1 empty switch in `\ice40hx8k.$proc$ice40/ice40hx8k.sv:14$1'.
Removing empty process `ice40hx8k.$proc$ice40/ice40hx8k.sv:14$1'.
Cleaned up 44 empty switches.

6.3.12. Executing OPT_EXPR pass (perform const folding).
Optimizing module $paramod\uart_tx\DATA_WIDTH=s32'00000000000000000000000000001000.
<suppressed ~4 debug messages>
Optimizing module $paramod\uart_rx\DATA_WIDTH=s32'00000000000000000000000000001000.
<suppressed ~9 debug messages>
Optimizing module uart.
Optimizing module sound_series_fsm.
<suppressed ~6 debug messages>
Optimizing module top.
Optimizing module reset_on_start.
<suppressed ~2 debug messages>
Optimizing module ice40hx8k.

6.4. Executing FLATTEN pass (flatten design).
Deleting now unused module $paramod\uart_tx\DATA_WIDTH=s32'00000000000000000000000000001000.
Deleting now unused module $paramod\uart_rx\DATA_WIDTH=s32'00000000000000000000000000001000.
Deleting now unused module uart.
Deleting now unused module sound_series_fsm.
Deleting now unused module top.
Deleting now unused module reset_on_start.
<suppressed ~6 debug messages>

6.5. Executing TRIBUF pass.

6.6. Executing DEMINOUT pass (demote inout ports to input or output).

6.7. Executing OPT_EXPR pass (perform const folding).
Optimizing module ice40hx8k.
<suppressed ~24 debug messages>

6.8. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ice40hx8k..
Removed 96 unused cells and 302 unused wires.
<suppressed ~138 debug messages>

6.9. Executing CHECK pass (checking for obvious problems).
Checking module ice40hx8k...
Warning: Wire ice40hx8k.\ss7 [7] is used but has no driver.
Warning: Wire ice40hx8k.\ss7 [6] is used but has no driver.
Warning: Wire ice40hx8k.\ss7 [5] is used but has no driver.
Warning: Wire ice40hx8k.\ss7 [4] is used but has no driver.
Warning: Wire ice40hx8k.\ss7 [3] is used but has no driver.
Warning: Wire ice40hx8k.\ss7 [2] is used but has no driver.
Warning: Wire ice40hx8k.\ss7 [1] is used but has no driver.
Warning: Wire ice40hx8k.\ss7 [0] is used but has no driver.
Warning: Wire ice40hx8k.\ss6 [7] is used but has no driver.
Warning: Wire ice40hx8k.\ss6 [6] is used but has no driver.
Warning: Wire ice40hx8k.\ss6 [5] is used but has no driver.
Warning: Wire ice40hx8k.\ss6 [4] is used but has no driver.
Warning: Wire ice40hx8k.\ss6 [3] is used but has no driver.
Warning: Wire ice40hx8k.\ss6 [2] is used but has no driver.
Warning: Wire ice40hx8k.\ss6 [1] is used but has no driver.
Warning: Wire ice40hx8k.\ss6 [0] is used but has no driver.
Warning: Wire ice40hx8k.\ss5 [7] is used but has no driver.
Warning: Wire ice40hx8k.\ss5 [6] is used but has no driver.
Warning: Wire ice40hx8k.\ss5 [5] is used but has no driver.
Warning: Wire ice40hx8k.\ss5 [4] is used but has no driver.
Warning: Wire ice40hx8k.\ss5 [3] is used but has no driver.
Warning: Wire ice40hx8k.\ss5 [2] is used but has no driver.
Warning: Wire ice40hx8k.\ss5 [1] is used but has no driver.
Warning: Wire ice40hx8k.\ss5 [0] is used but has no driver.
Warning: Wire ice40hx8k.\ss4 [7] is used but has no driver.
Warning: Wire ice40hx8k.\ss4 [6] is used but has no driver.
Warning: Wire ice40hx8k.\ss4 [5] is used but has no driver.
Warning: Wire ice40hx8k.\ss4 [4] is used but has no driver.
Warning: Wire ice40hx8k.\ss4 [3] is used but has no driver.
Warning: Wire ice40hx8k.\ss4 [2] is used but has no driver.
Warning: Wire ice40hx8k.\ss4 [1] is used but has no driver.
Warning: Wire ice40hx8k.\ss4 [0] is used but has no driver.
Warning: Wire ice40hx8k.\ss3 [7] is used but has no driver.
Warning: Wire ice40hx8k.\ss3 [6] is used but has no driver.
Warning: Wire ice40hx8k.\ss3 [5] is used but has no driver.
Warning: Wire ice40hx8k.\ss3 [4] is used but has no driver.
Warning: Wire ice40hx8k.\ss3 [3] is used but has no driver.
Warning: Wire ice40hx8k.\ss3 [2] is used but has no driver.
Warning: Wire ice40hx8k.\ss3 [1] is used but has no driver.
Warning: Wire ice40hx8k.\ss3 [0] is used but has no driver.
Warning: Wire ice40hx8k.\ss2 [7] is used but has no driver.
Warning: Wire ice40hx8k.\ss2 [6] is used but has no driver.
Warning: Wire ice40hx8k.\ss2 [5] is used but has no driver.
Warning: Wire ice40hx8k.\ss2 [4] is used but has no driver.
Warning: Wire ice40hx8k.\ss2 [3] is used but has no driver.
Warning: Wire ice40hx8k.\ss2 [2] is used but has no driver.
Warning: Wire ice40hx8k.\ss2 [1] is used but has no driver.
Warning: Wire ice40hx8k.\ss2 [0] is used but has no driver.
Warning: Wire ice40hx8k.\ss1 [7] is used but has no driver.
Warning: Wire ice40hx8k.\ss1 [6] is used but has no driver.
Warning: Wire ice40hx8k.\ss1 [5] is used but has no driver.
Warning: Wire ice40hx8k.\ss1 [4] is used but has no driver.
Warning: Wire ice40hx8k.\ss1 [3] is used but has no driver.
Warning: Wire ice40hx8k.\ss1 [2] is used but has no driver.
Warning: Wire ice40hx8k.\ss1 [1] is used but has no driver.
Warning: Wire ice40hx8k.\ss1 [0] is used but has no driver.
Warning: Wire ice40hx8k.\ss0 [7] is used but has no driver.
Warning: Wire ice40hx8k.\ss0 [6] is used but has no driver.
Warning: Wire ice40hx8k.\ss0 [5] is used but has no driver.
Warning: Wire ice40hx8k.\ss0 [4] is used but has no driver.
Warning: Wire ice40hx8k.\ss0 [3] is used but has no driver.
Warning: Wire ice40hx8k.\ss0 [2] is used but has no driver.
Warning: Wire ice40hx8k.\ss0 [1] is used but has no driver.
Warning: Wire ice40hx8k.\ss0 [0] is used but has no driver.
Warning: Wire ice40hx8k.\right [7] is used but has no driver.
Warning: Wire ice40hx8k.\right [6] is used but has no driver.
Warning: Wire ice40hx8k.\right [5] is used but has no driver.
Warning: Wire ice40hx8k.\right [4] is used but has no driver.
Warning: Wire ice40hx8k.\red is used but has no driver.
Warning: Wire ice40hx8k.\left [7] is used but has no driver.
Warning: Wire ice40hx8k.\left [6] is used but has no driver.
Warning: Wire ice40hx8k.\left [5] is used but has no driver.
Warning: Wire ice40hx8k.\left [4] is used but has no driver.
Warning: Wire ice40hx8k.\left [3] is used but has no driver.
Warning: Wire ice40hx8k.\left [2] is used but has no driver.
Warning: Wire ice40hx8k.\left [1] is used but has no driver.
Warning: Wire ice40hx8k.\left [0] is used but has no driver.
Warning: Wire ice40hx8k.\green is used but has no driver.
Warning: Wire ice40hx8k.\blue is used but has no driver.
Warning: Wire ice40hx8k.\txclk is used but has no driver.
Warning: Wire ice40hx8k.\uart_inst.uart_tx_inst.input_axis_tdata [7] is used but has no driver.
Warning: Wire ice40hx8k.\uart_inst.uart_tx_inst.input_axis_tdata [6] is used but has no driver.
Warning: Wire ice40hx8k.\uart_inst.uart_tx_inst.input_axis_tdata [5] is used but has no driver.
Warning: Wire ice40hx8k.\uart_inst.uart_tx_inst.input_axis_tdata [4] is used but has no driver.
Warning: Wire ice40hx8k.\uart_inst.uart_tx_inst.input_axis_tdata [3] is used but has no driver.
Warning: Wire ice40hx8k.\uart_inst.uart_tx_inst.input_axis_tdata [2] is used but has no driver.
Warning: Wire ice40hx8k.\uart_inst.uart_tx_inst.input_axis_tdata [1] is used but has no driver.
Warning: Wire ice40hx8k.\uart_inst.uart_tx_inst.input_axis_tdata [0] is used but has no driver.
Found and reported 88 problems.

6.10. Executing OPT pass (performing simple optimizations).

6.10.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module ice40hx8k.

6.10.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ice40hx8k'.
<suppressed ~3 debug messages>
Removed a total of 1 cells.

6.10.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \ice40hx8k..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~8 debug messages>

6.10.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \ice40hx8k.
Performed a total of 0 changes.

6.10.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ice40hx8k'.
Removed a total of 0 cells.

6.10.6. Executing OPT_DFF pass (perform DFF optimizations).

6.10.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ice40hx8k..
Removed 0 unused cells and 1 unused wires.
<suppressed ~1 debug messages>

6.10.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module ice40hx8k.

6.10.9. Rerunning OPT passes. (Maybe there is more to do..)

6.10.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \ice40hx8k..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~8 debug messages>

6.10.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \ice40hx8k.
Performed a total of 0 changes.

6.10.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ice40hx8k'.
Removed a total of 0 cells.

6.10.13. Executing OPT_DFF pass (perform DFF optimizations).

6.10.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ice40hx8k..

6.10.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module ice40hx8k.

6.10.16. Finished OPT passes. (There is nothing left to do.)

6.11. Executing FSM pass (extract and optimize FSM).

6.11.1. Executing FSM_DETECT pass (finding FSMs in design).
Not marking ice40hx8k.top_inst.u1.note as FSM state register:
    Users of register don't seem to benefit from recoding.
    Circuit seems to be self-resetting.

6.11.2. Executing FSM_EXTRACT pass (extracting FSM from design).

6.11.3. Executing FSM_OPT pass (simple optimizations of FSMs).

6.11.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ice40hx8k..

6.11.5. Executing FSM_OPT pass (simple optimizations of FSMs).

6.11.6. Executing FSM_RECODE pass (re-assigning FSM state encoding).

6.11.7. Executing FSM_INFO pass (dumping all available information on FSM cells).

6.11.8. Executing FSM_MAP pass (mapping FSMs to basic logic).

6.12. Executing OPT pass (performing simple optimizations).

6.12.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module ice40hx8k.

6.12.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ice40hx8k'.
Removed a total of 0 cells.

6.12.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \ice40hx8k..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~8 debug messages>

6.12.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \ice40hx8k.
Performed a total of 0 changes.

6.12.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ice40hx8k'.
Removed a total of 0 cells.

6.12.6. Executing OPT_DFF pass (perform DFF optimizations).
Adding EN signal on $flatten\uart_inst.\uart_tx_inst.$procdff$868 ($dff) from module ice40hx8k (D = $flatten\uart_inst.\uart_tx_inst.$procmux$631_Y, Q = \uart_inst.uart_tx_inst.bit_cnt).
Adding EN signal on $flatten\uart_inst.\uart_tx_inst.$procdff$867 ($dff) from module ice40hx8k (D = $flatten\uart_inst.\uart_tx_inst.$0\prescale_reg[18:0], Q = \uart_inst.uart_tx_inst.prescale_reg).
Adding EN signal on $flatten\uart_inst.\uart_tx_inst.$procdff$866 ($dff) from module ice40hx8k (D = $flatten\uart_inst.\uart_tx_inst.$procmux$572_Y, Q = \uart_inst.uart_tx_inst.data_reg).
Adding EN signal on $flatten\uart_inst.\uart_tx_inst.$procdff$864 ($dff) from module ice40hx8k (D = $flatten\uart_inst.\uart_tx_inst.$procmux$604_Y, Q = \uart_inst.uart_tx_inst.txd_reg).
Adding SRST signal on $flatten\uart_inst.\uart_tx_inst.$procdff$863 ($dff) from module ice40hx8k (D = $flatten\uart_inst.\uart_tx_inst.$procmux$642_Y, Q = \uart_inst.uart_tx_inst.input_axis_tready_reg, rval = 1'0).
Adding EN signal on $auto$ff.cc:266:slice$919 ($sdff) from module ice40hx8k (D = $flatten\uart_inst.\uart_tx_inst.$procmux$640_Y, Q = \uart_inst.uart_tx_inst.input_axis_tready_reg).

6.12.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ice40hx8k..
Removed 5 unused cells and 5 unused wires.
<suppressed ~6 debug messages>

6.12.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module ice40hx8k.
<suppressed ~4 debug messages>

6.12.9. Rerunning OPT passes. (Maybe there is more to do..)

6.12.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \ice40hx8k..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~8 debug messages>

6.12.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \ice40hx8k.
Performed a total of 0 changes.

6.12.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ice40hx8k'.
<suppressed ~18 debug messages>
Removed a total of 6 cells.

6.12.13. Executing OPT_DFF pass (perform DFF optimizations).

6.12.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ice40hx8k..
Removed 0 unused cells and 6 unused wires.
<suppressed ~1 debug messages>

6.12.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module ice40hx8k.

6.12.16. Rerunning OPT passes. (Maybe there is more to do..)

6.12.17. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \ice40hx8k..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~8 debug messages>

6.12.18. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \ice40hx8k.
Performed a total of 0 changes.

6.12.19. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ice40hx8k'.
Removed a total of 0 cells.

6.12.20. Executing OPT_DFF pass (perform DFF optimizations).

6.12.21. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ice40hx8k..

6.12.22. Executing OPT_EXPR pass (perform const folding).
Optimizing module ice40hx8k.

6.12.23. Finished OPT passes. (There is nothing left to do.)

6.13. Executing WREDUCE pass (reducing word size of cells).
Removed top 28 address bits (of 32) from memory init port ice40hx8k.$flatten\top_inst.\u1.$auto$mem.cc:319:emit$521 ($flatten\top_inst.\u1.$auto$proc_rom.cc:150:do_switch$519).
Removed top 31 bits (of 32) from port B of cell ice40hx8k.$flatten\uart_inst.\uart_tx_inst.$sub$ice40/uart/uart_tx.v:88$500 ($sub).
Removed top 13 bits (of 32) from port Y of cell ice40hx8k.$flatten\uart_inst.\uart_tx_inst.$sub$ice40/uart/uart_tx.v:88$500 ($sub).
Removed top 31 bits (of 32) from port B of cell ice40hx8k.$flatten\uart_inst.\uart_tx_inst.$gt$ice40/uart/uart_tx.v:102$505 ($gt).
Removed top 31 bits (of 32) from port B of cell ice40hx8k.$flatten\uart_inst.\uart_tx_inst.$sub$ice40/uart/uart_tx.v:103$506 ($sub).
Removed top 28 bits (of 32) from port Y of cell ice40hx8k.$flatten\uart_inst.\uart_tx_inst.$sub$ice40/uart/uart_tx.v:103$506 ($sub).
Removed top 3 bits (of 4) from port B of cell ice40hx8k.$flatten\uart_inst.\uart_tx_inst.$eq$ice40/uart/uart_tx.v:106$509 ($eq).
Removed top 31 bits (of 32) from port B of cell ice40hx8k.$flatten\uart_inst.\uart_tx_inst.$gt$ice40/uart/uart_tx.v:86$499 ($gt).
Removed top 31 bits (of 32) from mux cell ice40hx8k.$flatten\top_inst.\u1.$ternary$source/top.sv:37$27 ($mux).
Removed top 3 bits (of 4) from mux cell ice40hx8k.$flatten\top_inst.\u1.$ternary$source/top.sv:47$29 ($mux).
Removed top 2 bits (of 4) from mux cell ice40hx8k.$flatten\top_inst.\u1.$ternary$source/top.sv:48$30 ($mux).
Removed top 3 bits (of 4) from mux cell ice40hx8k.$flatten\top_inst.\u1.$ternary$source/top.sv:49$31 ($mux).
Removed top 1 bits (of 4) from mux cell ice40hx8k.$flatten\top_inst.\u1.$ternary$source/top.sv:50$32 ($mux).
Removed top 3 bits (of 4) from mux cell ice40hx8k.$flatten\top_inst.\u1.$ternary$source/top.sv:51$33 ($mux).
Removed top 2 bits (of 4) from mux cell ice40hx8k.$flatten\top_inst.\u1.$ternary$source/top.sv:52$34 ($mux).
Removed top 3 bits (of 4) from mux cell ice40hx8k.$flatten\top_inst.\u1.$ternary$source/top.sv:53$35 ($mux).
Removed top 1 bits (of 4) from port B of cell ice40hx8k.$flatten\top_inst.\u1.$procmux$809_CMP0 ($eq).
Removed top 1 bits (of 4) from port B of cell ice40hx8k.$flatten\top_inst.\u1.$procmux$810_CMP0 ($eq).
Removed top 1 bits (of 4) from port B of cell ice40hx8k.$flatten\top_inst.\u1.$procmux$811_CMP0 ($eq).
Removed top 1 bits (of 4) from port B of cell ice40hx8k.$flatten\top_inst.\u1.$procmux$812_CMP0 ($eq).
Removed top 2 bits (of 4) from port B of cell ice40hx8k.$flatten\top_inst.\u1.$procmux$813_CMP0 ($eq).
Removed top 2 bits (of 4) from port B of cell ice40hx8k.$flatten\top_inst.\u1.$procmux$814_CMP0 ($eq).
Removed top 3 bits (of 4) from port B of cell ice40hx8k.$flatten\top_inst.\u1.$procmux$815_CMP0 ($eq).
Removed top 31 bits (of 32) from mux cell ice40hx8k.$flatten\top_inst.\u1.$ternary$source/top.sv:36$26 ($mux).
Removed top 31 bits (of 32) from wire ice40hx8k.$flatten\top_inst.\u1.$ternary$source/top.sv:36$26_Y.
Removed top 31 bits (of 32) from wire ice40hx8k.$flatten\top_inst.\u1.$ternary$source/top.sv:37$27_Y.
Removed top 3 bits (of 4) from wire ice40hx8k.$flatten\top_inst.\u1.$ternary$source/top.sv:47$29_Y.
Removed top 2 bits (of 4) from wire ice40hx8k.$flatten\top_inst.\u1.$ternary$source/top.sv:48$30_Y.
Removed top 1 bits (of 4) from wire ice40hx8k.$flatten\top_inst.\u1.$ternary$source/top.sv:50$32_Y.
Removed top 3 bits (of 4) from wire ice40hx8k.$flatten\top_inst.\u1.$ternary$source/top.sv:51$33_Y.
Removed top 3 bits (of 4) from wire ice40hx8k.$flatten\top_inst.\u1.$ternary$source/top.sv:53$35_Y.
Removed top 28 bits (of 32) from wire ice40hx8k.$flatten\uart_inst.\uart_tx_inst.$sub$ice40/uart/uart_tx.v:103$506_Y.
Removed top 13 bits (of 32) from wire ice40hx8k.$flatten\uart_inst.\uart_tx_inst.$sub$ice40/uart/uart_tx.v:88$500_Y.

6.14. Executing PEEPOPT pass (run peephole optimizers).

6.15. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ice40hx8k..
Removed 0 unused cells and 9 unused wires.
<suppressed ~1 debug messages>

6.16. Executing SHARE pass (SAT-based resource sharing).

6.17. Executing TECHMAP pass (map to technology primitives).

6.17.1. Executing Verilog-2005 frontend: /home/shay/a/ece270/bin/../share/yosys/cmp2lut.v
Parsing Verilog input from `/home/shay/a/ece270/bin/../share/yosys/cmp2lut.v' to AST representation.
Generating RTLIL representation for module `\_90_lut_cmp_'.
Successfully finished Verilog frontend.

6.17.2. Continuing TECHMAP pass.
Using template $paramod$106e7676feb63f00b8f79ebab3ff16b0f4c109cb\_90_lut_cmp_ for cells of type $gt.
No more expansions possible.
<suppressed ~66 debug messages>

6.18. Executing OPT_EXPR pass (perform const folding).
Optimizing module ice40hx8k.

6.19. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ice40hx8k..
Removed 0 unused cells and 3 unused wires.
<suppressed ~1 debug messages>

6.20. Executing ALUMACC pass (create $alu and $macc cells).
Extracting $alu and $macc cells in module ice40hx8k:
  creating $macc model for $flatten\uart_inst.\uart_tx_inst.$sub$ice40/uart/uart_tx.v:103$506 ($sub).
  creating $macc model for $flatten\uart_inst.\uart_tx_inst.$sub$ice40/uart/uart_tx.v:88$500 ($sub).
  creating $alu model for $macc $flatten\uart_inst.\uart_tx_inst.$sub$ice40/uart/uart_tx.v:88$500.
  creating $alu model for $macc $flatten\uart_inst.\uart_tx_inst.$sub$ice40/uart/uart_tx.v:103$506.
  creating $alu model for $flatten\uart_inst.\uart_tx_inst.$gt$ice40/uart/uart_tx.v:86$499 ($gt): new $alu
  creating $alu cell for $flatten\uart_inst.\uart_tx_inst.$gt$ice40/uart/uart_tx.v:86$499: $auto$alumacc.cc:485:replace_alu$934
  creating $alu cell for $flatten\uart_inst.\uart_tx_inst.$sub$ice40/uart/uart_tx.v:103$506: $auto$alumacc.cc:485:replace_alu$939
  creating $alu cell for $flatten\uart_inst.\uart_tx_inst.$sub$ice40/uart/uart_tx.v:88$500: $auto$alumacc.cc:485:replace_alu$942
  created 3 $alu and 0 $macc cells.

6.21. Executing OPT pass (performing simple optimizations).

6.21.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module ice40hx8k.
<suppressed ~3 debug messages>

6.21.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ice40hx8k'.
Removed a total of 0 cells.

6.21.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \ice40hx8k..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~8 debug messages>

6.21.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \ice40hx8k.
Performed a total of 0 changes.

6.21.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ice40hx8k'.
<suppressed ~9 debug messages>
Removed a total of 3 cells.

6.21.6. Executing OPT_DFF pass (perform DFF optimizations).

6.21.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ice40hx8k..
Removed 0 unused cells and 5 unused wires.
<suppressed ~1 debug messages>

6.21.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module ice40hx8k.

6.21.9. Rerunning OPT passes. (Maybe there is more to do..)

6.21.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \ice40hx8k..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~8 debug messages>

6.21.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \ice40hx8k.
Performed a total of 0 changes.

6.21.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ice40hx8k'.
Removed a total of 0 cells.

6.21.13. Executing OPT_DFF pass (perform DFF optimizations).

6.21.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ice40hx8k..

6.21.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module ice40hx8k.

6.21.16. Finished OPT passes. (There is nothing left to do.)

6.22. Executing MEMORY pass.

6.22.1. Executing OPT_MEM pass (optimize memories).
Performed a total of 0 transformations.

6.22.2. Executing OPT_MEM_PRIORITY pass (removing unnecessary memory write priority relations).
Performed a total of 0 transformations.

6.22.3. Executing OPT_MEM_FEEDBACK pass (finding memory read-to-write feedback paths).

6.22.4. Executing MEMORY_BMUX2ROM pass (converting muxes to ROMs).

6.22.5. Executing MEMORY_DFF pass (merging $dff cells to $memrd).
Checking read port `$flatten\top_inst.\u1.$auto$proc_rom.cc:150:do_switch$519'[0] in module `\ice40hx8k': no output FF found.
Checking read port address `$flatten\top_inst.\u1.$auto$proc_rom.cc:150:do_switch$519'[0] in module `\ice40hx8k': address FF has async set and/or reset, not supported.

6.22.6. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ice40hx8k..

6.22.7. Executing MEMORY_SHARE pass (consolidating $memrd/$memwr cells).

6.22.8. Executing OPT_MEM_WIDEN pass (optimize memories where all ports are wide).
Performed a total of 0 transformations.

6.22.9. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ice40hx8k..

6.22.10. Executing MEMORY_COLLECT pass (generating $mem cells).

6.23. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ice40hx8k..

6.24. Executing MEMORY_LIBMAP pass (mapping memories to cells).
using FF mapping for memory ice40hx8k.$flatten\top_inst.\u1.$auto$proc_rom.cc:150:do_switch$519
<suppressed ~6 debug messages>

6.25. Executing TECHMAP pass (map to technology primitives).

6.25.1. Executing Verilog-2005 frontend: /home/shay/a/ece270/bin/../share/yosys/ice40/brams_map.v
Parsing Verilog input from `/home/shay/a/ece270/bin/../share/yosys/ice40/brams_map.v' to AST representation.
Generating RTLIL representation for module `\$__ICE40_RAM4K_'.
Successfully finished Verilog frontend.

6.25.2. Executing Verilog-2005 frontend: /home/shay/a/ece270/bin/../share/yosys/ice40/spram_map.v
Parsing Verilog input from `/home/shay/a/ece270/bin/../share/yosys/ice40/spram_map.v' to AST representation.
Generating RTLIL representation for module `\$__ICE40_SPRAM_'.
Successfully finished Verilog frontend.

6.25.3. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~4 debug messages>

6.26. Executing ICE40_BRAMINIT pass.

6.27. Executing OPT pass (performing simple optimizations).

6.27.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module ice40hx8k.
<suppressed ~52 debug messages>

6.27.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ice40hx8k'.
Removed a total of 0 cells.

6.27.3. Executing OPT_DFF pass (perform DFF optimizations).
Handling const CLK on $procdff$882 ($adff) from module ice40hx8k (removing D path).
Adding SRST signal on $auto$ff.cc:266:slice$910 ($dffe) from module ice40hx8k (D = $flatten\uart_inst.\uart_tx_inst.$procmux$599_Y, Q = \uart_inst.uart_tx_inst.txd_reg, rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$901 ($dffe) from module ice40hx8k (D = $flatten\uart_inst.\uart_tx_inst.$procmux$567_Y [8], Q = \uart_inst.uart_tx_inst.data_reg [8], rval = 1'1).
Adding SRST signal on $auto$ff.cc:266:slice$885 ($dffe) from module ice40hx8k (D = $flatten\uart_inst.\uart_tx_inst.$procmux$626_Y, Q = \uart_inst.uart_tx_inst.bit_cnt, rval = 4'1001).
Setting constant 0-bit at position 0 on $procdff$882 ($dlatch) from module ice40hx8k.

6.27.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ice40hx8k..
Removed 6 unused cells and 21 unused wires.
<suppressed ~12 debug messages>

6.27.5. Rerunning OPT passes. (Removed registers in this run.)

6.27.6. Executing OPT_EXPR pass (perform const folding).
Optimizing module ice40hx8k.
<suppressed ~1 debug messages>

6.27.7. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ice40hx8k'.
Removed a total of 0 cells.

6.27.8. Executing OPT_DFF pass (perform DFF optimizations).

6.27.9. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ice40hx8k..

6.27.10. Finished fast OPT passes.

6.28. Executing MEMORY_MAP pass (converting memories to logic and flip-flops).
Mapping memory $flatten\top_inst.\u1.$auto$proc_rom.cc:150:do_switch$519 in module \ice40hx8k:
  created 16 $dff cells and 0 static cells of width 4.
  read interface: 0 $dff and 15 $mux cells.
  write interface: 0 write mux blocks.

6.29. Executing OPT pass (performing simple optimizations).

6.29.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module ice40hx8k.
<suppressed ~4 debug messages>

6.29.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ice40hx8k'.
Removed a total of 0 cells.

6.29.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \ice40hx8k..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~6 debug messages>

6.29.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \ice40hx8k.
    Consolidated identical input bits for $mux cell $memory$flatten\top_inst.\u1.$auto$proc_rom.cc:150:do_switch$519$rdmux[0][3][2]$998:
      Old ports: A=4'0101, B=4'0111, Y=$memory$flatten\top_inst.\u1.$auto$proc_rom.cc:150:do_switch$519$rdmux[0][2][1]$a$984
      New ports: A=1'0, B=1'1, Y=$memory$flatten\top_inst.\u1.$auto$proc_rom.cc:150:do_switch$519$rdmux[0][2][1]$a$984 [1]
      New connections: { $memory$flatten\top_inst.\u1.$auto$proc_rom.cc:150:do_switch$519$rdmux[0][2][1]$a$984 [3:2] $memory$flatten\top_inst.\u1.$auto$proc_rom.cc:150:do_switch$519$rdmux[0][2][1]$a$984 [0] } = 3'011
    Consolidated identical input bits for $mux cell $memory$flatten\top_inst.\u1.$auto$proc_rom.cc:150:do_switch$519$rdmux[0][3][1]$995:
      Old ports: A=4'0010, B=4'0100, Y=$memory$flatten\top_inst.\u1.$auto$proc_rom.cc:150:do_switch$519$rdmux[0][2][0]$b$982
      New ports: A=2'01, B=2'10, Y=$memory$flatten\top_inst.\u1.$auto$proc_rom.cc:150:do_switch$519$rdmux[0][2][0]$b$982 [2:1]
      New connections: { $memory$flatten\top_inst.\u1.$auto$proc_rom.cc:150:do_switch$519$rdmux[0][2][0]$b$982 [3] $memory$flatten\top_inst.\u1.$auto$proc_rom.cc:150:do_switch$519$rdmux[0][2][0]$b$982 [0] } = 2'00
    Consolidated identical input bits for $mux cell $memory$flatten\top_inst.\u1.$auto$proc_rom.cc:150:do_switch$519$rdmux[0][3][0]$992:
      Old ports: A=4'1111, B=4'0000, Y=$memory$flatten\top_inst.\u1.$auto$proc_rom.cc:150:do_switch$519$rdmux[0][2][0]$a$981
      New ports: A=1'1, B=1'0, Y=$memory$flatten\top_inst.\u1.$auto$proc_rom.cc:150:do_switch$519$rdmux[0][2][0]$a$981 [0]
      New connections: $memory$flatten\top_inst.\u1.$auto$proc_rom.cc:150:do_switch$519$rdmux[0][2][0]$a$981 [3:1] = { $memory$flatten\top_inst.\u1.$auto$proc_rom.cc:150:do_switch$519$rdmux[0][2][0]$a$981 [0] $memory$flatten\top_inst.\u1.$auto$proc_rom.cc:150:do_switch$519$rdmux[0][2][0]$a$981 [0] $memory$flatten\top_inst.\u1.$auto$proc_rom.cc:150:do_switch$519$rdmux[0][2][0]$a$981 [0] }
    Consolidated identical input bits for $mux cell $memory$flatten\top_inst.\u1.$auto$proc_rom.cc:150:do_switch$519$rdmux[0][3][3]$1001:
      Old ports: A=4'1001, B=4'1011, Y=$memory$flatten\top_inst.\u1.$auto$proc_rom.cc:150:do_switch$519$rdmux[0][2][1]$b$985
      New ports: A=1'0, B=1'1, Y=$memory$flatten\top_inst.\u1.$auto$proc_rom.cc:150:do_switch$519$rdmux[0][2][1]$b$985 [1]
      New connections: { $memory$flatten\top_inst.\u1.$auto$proc_rom.cc:150:do_switch$519$rdmux[0][2][1]$b$985 [3:2] $memory$flatten\top_inst.\u1.$auto$proc_rom.cc:150:do_switch$519$rdmux[0][2][1]$b$985 [0] } = 3'101
    Consolidated identical input bits for $mux cell $memory$flatten\top_inst.\u1.$auto$proc_rom.cc:150:do_switch$519$rdmux[0][3][4]$1004:
      Old ports: A=4'1100, B=4'0000, Y=$memory$flatten\top_inst.\u1.$auto$proc_rom.cc:150:do_switch$519$rdmux[0][2][2]$a$987
      New ports: A=1'1, B=1'0, Y=$memory$flatten\top_inst.\u1.$auto$proc_rom.cc:150:do_switch$519$rdmux[0][2][2]$a$987 [2]
      New connections: { $memory$flatten\top_inst.\u1.$auto$proc_rom.cc:150:do_switch$519$rdmux[0][2][2]$a$987 [3] $memory$flatten\top_inst.\u1.$auto$proc_rom.cc:150:do_switch$519$rdmux[0][2][2]$a$987 [1:0] } = { $memory$flatten\top_inst.\u1.$auto$proc_rom.cc:150:do_switch$519$rdmux[0][2][2]$a$987 [2] 2'00 }
    Consolidated identical input bits for $mux cell $flatten\top_inst.\u1.$ternary$source/top.sv:50$32:
      Old ports: A=3'011, B=3'100, Y=$auto$wreduce.cc:455:run$925 [2:0]
      New ports: A=2'01, B=2'10, Y={ $auto$wreduce.cc:455:run$925 [2] $auto$wreduce.cc:455:run$925 [0] }
      New connections: $auto$wreduce.cc:455:run$925 [1] = $auto$wreduce.cc:455:run$925 [0]
    Consolidated identical input bits for $mux cell $flatten\top_inst.\u1.$ternary$source/top.sv:54$36:
      Old ports: A=4'0111, B=4'1000, Y=$flatten\top_inst.\u1.$ternary$source/top.sv:54$36_Y
      New ports: A=2'01, B=2'10, Y={ $flatten\top_inst.\u1.$ternary$source/top.sv:54$36_Y [3] $flatten\top_inst.\u1.$ternary$source/top.sv:54$36_Y [0] }
      New connections: $flatten\top_inst.\u1.$ternary$source/top.sv:54$36_Y [2:1] = { $flatten\top_inst.\u1.$ternary$source/top.sv:54$36_Y [0] $flatten\top_inst.\u1.$ternary$source/top.sv:54$36_Y [0] }
    Consolidated identical input bits for $mux cell $flatten\top_inst.\u1.$ternary$source/top.sv:55$37:
      Old ports: A=4'1000, B=4'0000, Y=$flatten\top_inst.\u1.$ternary$source/top.sv:55$37_Y
      New ports: A=1'1, B=1'0, Y=$flatten\top_inst.\u1.$ternary$source/top.sv:55$37_Y [3]
      New connections: $flatten\top_inst.\u1.$ternary$source/top.sv:55$37_Y [2:0] = 3'000
    Consolidated identical input bits for $mux cell $flatten\uart_inst.\uart_tx_inst.$procmux$583:
      Old ports: A=19'0000000000000100000, B=19'0000000000000011111, Y=$flatten\uart_inst.\uart_tx_inst.$procmux$583_Y
      New ports: A=2'10, B=2'01, Y={ $flatten\uart_inst.\uart_tx_inst.$procmux$583_Y [5] $flatten\uart_inst.\uart_tx_inst.$procmux$583_Y [0] }
      New connections: { $flatten\uart_inst.\uart_tx_inst.$procmux$583_Y [18:6] $flatten\uart_inst.\uart_tx_inst.$procmux$583_Y [4:1] } = { 13'0000000000000 $flatten\uart_inst.\uart_tx_inst.$procmux$583_Y [0] $flatten\uart_inst.\uart_tx_inst.$procmux$583_Y [0] $flatten\uart_inst.\uart_tx_inst.$procmux$583_Y [0] $flatten\uart_inst.\uart_tx_inst.$procmux$583_Y [0] }
  Optimizing cells in module \ice40hx8k.
    Consolidated identical input bits for $mux cell $memory$flatten\top_inst.\u1.$auto$proc_rom.cc:150:do_switch$519$rdmux[0][2][2]$986:
      Old ports: A=$memory$flatten\top_inst.\u1.$auto$proc_rom.cc:150:do_switch$519$rdmux[0][2][2]$a$987, B=4'0000, Y=$memory$flatten\top_inst.\u1.$auto$proc_rom.cc:150:do_switch$519$rdmux[0][1][1]$a$978
      New ports: A=$memory$flatten\top_inst.\u1.$auto$proc_rom.cc:150:do_switch$519$rdmux[0][2][2]$a$987 [2], B=1'0, Y=$memory$flatten\top_inst.\u1.$auto$proc_rom.cc:150:do_switch$519$rdmux[0][1][1]$a$978 [2]
      New connections: { $memory$flatten\top_inst.\u1.$auto$proc_rom.cc:150:do_switch$519$rdmux[0][1][1]$a$978 [3] $memory$flatten\top_inst.\u1.$auto$proc_rom.cc:150:do_switch$519$rdmux[0][1][1]$a$978 [1:0] } = { $memory$flatten\top_inst.\u1.$auto$proc_rom.cc:150:do_switch$519$rdmux[0][1][1]$a$978 [2] 2'00 }
    Consolidated identical input bits for $mux cell $memory$flatten\top_inst.\u1.$auto$proc_rom.cc:150:do_switch$519$rdmux[0][2][1]$983:
      Old ports: A=$memory$flatten\top_inst.\u1.$auto$proc_rom.cc:150:do_switch$519$rdmux[0][2][1]$a$984, B=$memory$flatten\top_inst.\u1.$auto$proc_rom.cc:150:do_switch$519$rdmux[0][2][1]$b$985, Y=$memory$flatten\top_inst.\u1.$auto$proc_rom.cc:150:do_switch$519$rdmux[0][1][0]$b$976
      New ports: A={ 2'01 $memory$flatten\top_inst.\u1.$auto$proc_rom.cc:150:do_switch$519$rdmux[0][2][1]$a$984 [1] }, B={ 2'10 $memory$flatten\top_inst.\u1.$auto$proc_rom.cc:150:do_switch$519$rdmux[0][2][1]$b$985 [1] }, Y=$memory$flatten\top_inst.\u1.$auto$proc_rom.cc:150:do_switch$519$rdmux[0][1][0]$b$976 [3:1]
      New connections: $memory$flatten\top_inst.\u1.$auto$proc_rom.cc:150:do_switch$519$rdmux[0][1][0]$b$976 [0] = 1'1
    Consolidated identical input bits for $mux cell $memory$flatten\top_inst.\u1.$auto$proc_rom.cc:150:do_switch$519$rdmux[0][2][0]$980:
      Old ports: A=$memory$flatten\top_inst.\u1.$auto$proc_rom.cc:150:do_switch$519$rdmux[0][2][0]$a$981, B=$memory$flatten\top_inst.\u1.$auto$proc_rom.cc:150:do_switch$519$rdmux[0][2][0]$b$982, Y=$memory$flatten\top_inst.\u1.$auto$proc_rom.cc:150:do_switch$519$rdmux[0][1][0]$a$975
      New ports: A={ $memory$flatten\top_inst.\u1.$auto$proc_rom.cc:150:do_switch$519$rdmux[0][2][0]$a$981 [0] $memory$flatten\top_inst.\u1.$auto$proc_rom.cc:150:do_switch$519$rdmux[0][2][0]$a$981 [0] $memory$flatten\top_inst.\u1.$auto$proc_rom.cc:150:do_switch$519$rdmux[0][2][0]$a$981 [0] }, B={ $memory$flatten\top_inst.\u1.$auto$proc_rom.cc:150:do_switch$519$rdmux[0][2][0]$b$982 [2:1] 1'0 }, Y=$memory$flatten\top_inst.\u1.$auto$proc_rom.cc:150:do_switch$519$rdmux[0][1][0]$a$975 [2:0]
      New connections: $memory$flatten\top_inst.\u1.$auto$proc_rom.cc:150:do_switch$519$rdmux[0][1][0]$a$975 [3] = $memory$flatten\top_inst.\u1.$auto$proc_rom.cc:150:do_switch$519$rdmux[0][1][0]$a$975 [0]
    Consolidated identical input bits for $mux cell $flatten\uart_inst.\uart_tx_inst.$procmux$588:
      Old ports: A=$flatten\uart_inst.\uart_tx_inst.$procmux$583_Y, B=19'0000000000000011111, Y=$flatten\uart_inst.\uart_tx_inst.$procmux$588_Y
      New ports: A={ $flatten\uart_inst.\uart_tx_inst.$procmux$583_Y [5] $flatten\uart_inst.\uart_tx_inst.$procmux$583_Y [0] }, B=2'01, Y={ $flatten\uart_inst.\uart_tx_inst.$procmux$588_Y [5] $flatten\uart_inst.\uart_tx_inst.$procmux$588_Y [0] }
      New connections: { $flatten\uart_inst.\uart_tx_inst.$procmux$588_Y [18:6] $flatten\uart_inst.\uart_tx_inst.$procmux$588_Y [4:1] } = { 13'0000000000000 $flatten\uart_inst.\uart_tx_inst.$procmux$588_Y [0] $flatten\uart_inst.\uart_tx_inst.$procmux$588_Y [0] $flatten\uart_inst.\uart_tx_inst.$procmux$588_Y [0] $flatten\uart_inst.\uart_tx_inst.$procmux$588_Y [0] }
  Optimizing cells in module \ice40hx8k.
    Consolidated identical input bits for $mux cell $memory$flatten\top_inst.\u1.$auto$proc_rom.cc:150:do_switch$519$rdmux[0][1][1]$977:
      Old ports: A=$memory$flatten\top_inst.\u1.$auto$proc_rom.cc:150:do_switch$519$rdmux[0][1][1]$a$978, B=4'0000, Y=$memory$flatten\top_inst.\u1.$auto$proc_rom.cc:150:do_switch$519$rdmux[0][0][0]$b$973
      New ports: A=$memory$flatten\top_inst.\u1.$auto$proc_rom.cc:150:do_switch$519$rdmux[0][1][1]$a$978 [2], B=1'0, Y=$memory$flatten\top_inst.\u1.$auto$proc_rom.cc:150:do_switch$519$rdmux[0][0][0]$b$973 [2]
      New connections: { $memory$flatten\top_inst.\u1.$auto$proc_rom.cc:150:do_switch$519$rdmux[0][0][0]$b$973 [3] $memory$flatten\top_inst.\u1.$auto$proc_rom.cc:150:do_switch$519$rdmux[0][0][0]$b$973 [1:0] } = { $memory$flatten\top_inst.\u1.$auto$proc_rom.cc:150:do_switch$519$rdmux[0][0][0]$b$973 [2] 2'00 }
  Optimizing cells in module \ice40hx8k.
Performed a total of 14 changes.

6.29.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ice40hx8k'.
<suppressed ~12 debug messages>
Removed a total of 4 cells.

6.29.6. Executing OPT_DFF pass (perform DFF optimizations).

6.29.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ice40hx8k..
Removed 0 unused cells and 24 unused wires.
<suppressed ~1 debug messages>

6.29.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module ice40hx8k.

6.29.9. Rerunning OPT passes. (Maybe there is more to do..)

6.29.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \ice40hx8k..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~7 debug messages>

6.29.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \ice40hx8k.
    Consolidated identical input bits for $mux cell $memory$flatten\top_inst.\u1.$auto$proc_rom.cc:150:do_switch$519$rdmux[0][2][1]$983:
      Old ports: A={ 2'01 $memory$flatten\top_inst.\u1.$auto$proc_rom.cc:150:do_switch$519$rdmux[0][2][1]$a$984 [1] }, B={ 2'10 $memory$flatten\top_inst.\u1.$auto$proc_rom.cc:150:do_switch$519$rdmux[0][2][1]$a$984 [1] }, Y=$memory$flatten\top_inst.\u1.$auto$proc_rom.cc:150:do_switch$519$rdmux[0][1][0]$b$976 [3:1]
      New ports: A=2'01, B=2'10, Y=$memory$flatten\top_inst.\u1.$auto$proc_rom.cc:150:do_switch$519$rdmux[0][1][0]$b$976 [3:2]
      New connections: $memory$flatten\top_inst.\u1.$auto$proc_rom.cc:150:do_switch$519$rdmux[0][1][0]$b$976 [1] = $memory$flatten\top_inst.\u1.$auto$proc_rom.cc:150:do_switch$519$rdmux[0][2][1]$a$984 [1]
  Optimizing cells in module \ice40hx8k.
Performed a total of 1 changes.

6.29.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ice40hx8k'.
Removed a total of 0 cells.

6.29.13. Executing OPT_DFF pass (perform DFF optimizations).
Adding SRST signal on $auto$ff.cc:266:slice$894 ($dffe) from module ice40hx8k (D = $auto$wreduce.cc:455:run$929 [18:6], Q = \uart_inst.uart_tx_inst.prescale_reg [18:6], rval = 13'0000000000000).

6.29.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ice40hx8k..
Removed 0 unused cells and 1 unused wires.
<suppressed ~1 debug messages>

6.29.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module ice40hx8k.

6.29.16. Rerunning OPT passes. (Maybe there is more to do..)

6.29.17. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \ice40hx8k..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~7 debug messages>

6.29.18. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \ice40hx8k.
Performed a total of 0 changes.

6.29.19. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ice40hx8k'.
Removed a total of 0 cells.

6.29.20. Executing OPT_DFF pass (perform DFF optimizations).

6.29.21. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ice40hx8k..

6.29.22. Executing OPT_EXPR pass (perform const folding).
Optimizing module ice40hx8k.

6.29.23. Finished OPT passes. (There is nothing left to do.)

6.30. Executing ICE40_WRAPCARRY pass (wrap carries).

6.31. Executing TECHMAP pass (map to technology primitives).

6.31.1. Executing Verilog-2005 frontend: /home/shay/a/ece270/bin/../share/yosys/techmap.v
Parsing Verilog input from `/home/shay/a/ece270/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

6.31.2. Executing Verilog-2005 frontend: /home/shay/a/ece270/bin/../share/yosys/ice40/arith_map.v
Parsing Verilog input from `/home/shay/a/ece270/bin/../share/yosys/ice40/arith_map.v' to AST representation.
Generating RTLIL representation for module `\_80_ice40_alu'.
Successfully finished Verilog frontend.

6.31.3. Continuing TECHMAP pass.
Using extmapper simplemap for cells of type $mux.
Using extmapper simplemap for cells of type $dffe.
Using extmapper simplemap for cells of type $reduce_bool.
Using extmapper simplemap for cells of type $reduce_and.
Using extmapper simplemap for cells of type $lut.
Using template $paramod$20b1d0597707d55efcb9664e40f63985956d7680\_80_ice40_alu for cells of type $alu.
Using extmapper simplemap for cells of type $logic_not.
Using template $paramod$3826c06832e910ed7e3a5e37dc9a6adea7917f5a\_80_ice40_alu for cells of type $alu.
Using extmapper simplemap for cells of type $sdffce.
Using extmapper simplemap for cells of type $eq.
Using template $paramod$8742280fdebca84e1c87f2a86ed84f62d558f4cc\_80_ice40_alu for cells of type $alu.
Using extmapper simplemap for cells of type $ne.
Using extmapper simplemap for cells of type $not.
Using extmapper simplemap for cells of type $adff.
Using template $paramod$4d45682f6d5f8751d24fc75184ef72226da353f7\_90_pmux for cells of type $pmux.
Using extmapper simplemap for cells of type $pos.
Using extmapper simplemap for cells of type $and.
Using extmapper simplemap for cells of type $xor.
Using extmapper simplemap for cells of type $reduce_or.
No more expansions possible.
<suppressed ~225 debug messages>

6.32. Executing OPT pass (performing simple optimizations).

6.32.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module ice40hx8k.
<suppressed ~217 debug messages>

6.32.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ice40hx8k'.
<suppressed ~150 debug messages>
Removed a total of 50 cells.

6.32.3. Executing OPT_DFF pass (perform DFF optimizations).

6.32.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ice40hx8k..
Removed 16 unused cells and 159 unused wires.
<suppressed ~17 debug messages>

6.32.5. Finished fast OPT passes.

6.33. Executing ICE40_OPT pass (performing simple optimizations).

6.33.1. Running ICE40 specific optimizations.
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) ice40hx8k.$auto$alumacc.cc:485:replace_alu$934.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$934.BB [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) ice40hx8k.$auto$alumacc.cc:485:replace_alu$939.slice[0].carry: CO=\uart_inst.uart_tx_inst.bit_cnt [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) ice40hx8k.$auto$alumacc.cc:485:replace_alu$942.slice[0].carry: CO=\uart_inst.uart_tx_inst.prescale_reg [0]

6.33.2. Executing OPT_EXPR pass (perform const folding).
Optimizing module ice40hx8k.
<suppressed ~9 debug messages>

6.33.3. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ice40hx8k'.
Removed a total of 0 cells.

6.33.4. Executing OPT_DFF pass (perform DFF optimizations).

6.33.5. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ice40hx8k..
Removed 1 unused cells and 1 unused wires.
<suppressed ~2 debug messages>

6.33.6. Rerunning OPT passes. (Removed registers in this run.)

6.33.7. Running ICE40 specific optimizations.

6.33.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module ice40hx8k.

6.33.9. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ice40hx8k'.
Removed a total of 0 cells.

6.33.10. Executing OPT_DFF pass (perform DFF optimizations).

6.33.11. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ice40hx8k..

6.33.12. Finished OPT passes. (There is nothing left to do.)

6.34. Executing DFFLEGALIZE pass (convert FFs to types supported by the target).

6.35. Executing TECHMAP pass (map to technology primitives).

6.35.1. Executing Verilog-2005 frontend: /home/shay/a/ece270/bin/../share/yosys/ice40/ff_map.v
Parsing Verilog input from `/home/shay/a/ece270/bin/../share/yosys/ice40/ff_map.v' to AST representation.
Generating RTLIL representation for module `\$_DFF_N_'.
Generating RTLIL representation for module `\$_DFF_P_'.
Generating RTLIL representation for module `\$_DFFE_NP_'.
Generating RTLIL representation for module `\$_DFFE_PP_'.
Generating RTLIL representation for module `\$_DFF_NP0_'.
Generating RTLIL representation for module `\$_DFF_NP1_'.
Generating RTLIL representation for module `\$_DFF_PP0_'.
Generating RTLIL representation for module `\$_DFF_PP1_'.
Generating RTLIL representation for module `\$_DFFE_NP0P_'.
Generating RTLIL representation for module `\$_DFFE_NP1P_'.
Generating RTLIL representation for module `\$_DFFE_PP0P_'.
Generating RTLIL representation for module `\$_DFFE_PP1P_'.
Generating RTLIL representation for module `\$_SDFF_NP0_'.
Generating RTLIL representation for module `\$_SDFF_NP1_'.
Generating RTLIL representation for module `\$_SDFF_PP0_'.
Generating RTLIL representation for module `\$_SDFF_PP1_'.
Generating RTLIL representation for module `\$_SDFFCE_NP0P_'.
Generating RTLIL representation for module `\$_SDFFCE_NP1P_'.
Generating RTLIL representation for module `\$_SDFFCE_PP0P_'.
Generating RTLIL representation for module `\$_SDFFCE_PP1P_'.
Successfully finished Verilog frontend.

6.35.2. Continuing TECHMAP pass.
Using template \$_DFFE_PP_ for cells of type $_DFFE_PP_.
Using template \$_SDFFCE_PP0P_ for cells of type $_SDFFCE_PP0P_.
Using template \$_SDFFCE_PP1P_ for cells of type $_SDFFCE_PP1P_.
Using template \$_DFF_PP0_ for cells of type $_DFF_PP0_.
No more expansions possible.
<suppressed ~60 debug messages>

6.36. Executing OPT_EXPR pass (perform const folding).
Optimizing module ice40hx8k.

6.37. Executing SIMPLEMAP pass (map simple cells to gate primitives).
Mapping ice40hx8k.$auto$alumacc.cc:485:replace_alu$939.slice[0].carry ($lut).
Mapping ice40hx8k.$auto$alumacc.cc:485:replace_alu$942.slice[0].carry ($lut).

6.38. Executing ICE40_OPT pass (performing simple optimizations).

6.38.1. Running ICE40 specific optimizations.

6.38.2. Executing OPT_EXPR pass (perform const folding).
Optimizing module ice40hx8k.
<suppressed ~34 debug messages>

6.38.3. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ice40hx8k'.
<suppressed ~30 debug messages>
Removed a total of 10 cells.

6.38.4. Executing OPT_DFF pass (perform DFF optimizations).

6.38.5. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ice40hx8k..
Removed 0 unused cells and 224 unused wires.
<suppressed ~1 debug messages>

6.38.6. Rerunning OPT passes. (Removed registers in this run.)

6.38.7. Running ICE40 specific optimizations.

6.38.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module ice40hx8k.

6.38.9. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ice40hx8k'.
Removed a total of 0 cells.

6.38.10. Executing OPT_DFF pass (perform DFF optimizations).

6.38.11. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ice40hx8k..

6.38.12. Finished OPT passes. (There is nothing left to do.)

6.39. Executing TECHMAP pass (map to technology primitives).

6.39.1. Executing Verilog-2005 frontend: /home/shay/a/ece270/bin/../share/yosys/ice40/latches_map.v
Parsing Verilog input from `/home/shay/a/ece270/bin/../share/yosys/ice40/latches_map.v' to AST representation.
Generating RTLIL representation for module `\$_DLATCH_N_'.
Generating RTLIL representation for module `\$_DLATCH_P_'.
Successfully finished Verilog frontend.

6.39.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~4 debug messages>

6.40. Executing ABC pass (technology mapping using ABC).

6.40.1. Extracting gate netlist of module `\ice40hx8k' to `<abc-temp-dir>/input.blif'..
Extracted 138 gates and 178 wires to a netlist network with 38 inputs and 41 outputs.

6.40.1.1. Executing ABC.
Running ABC command: "<yosys-exe-dir>/yosys-abc" -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_lut <abc-temp-dir>/lutdefs.txt 
ABC: + strash 
ABC: + &get -n 
ABC: + &fraig -x 
ABC: + &put 
ABC: + scorr 
ABC: Warning: The network is combinational (run "fraig" or "fraig_sweep").
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + dch -f 
ABC: + if 
ABC: + mfs2 
ABC: + lutpack -S 1 
ABC: + dress <abc-temp-dir>/input.blif 
ABC: Total number of equiv classes                =      45.
ABC: Participating nodes from both networks       =     101.
ABC: Participating nodes from the first network   =      44. (  89.80 % of nodes)
ABC: Participating nodes from the second network  =      57. ( 116.33 % of nodes)
ABC: Node pairs (any polarity)                    =      44. (  89.80 % of names can be moved)
ABC: Node pairs (same polarity)                   =      43. (  87.76 % of names can be moved)
ABC: Total runtime =     0.01 sec
ABC: + write_blif <abc-temp-dir>/output.blif 

6.40.1.2. Re-integrating ABC results.
ABC RESULTS:              $lut cells:       48
ABC RESULTS:        internal signals:       99
ABC RESULTS:           input signals:       38
ABC RESULTS:          output signals:       41
Removing temp directory.

6.41. Executing ICE40_WRAPCARRY pass (wrap carries).

6.42. Executing TECHMAP pass (map to technology primitives).

6.42.1. Executing Verilog-2005 frontend: /home/shay/a/ece270/bin/../share/yosys/ice40/ff_map.v
Parsing Verilog input from `/home/shay/a/ece270/bin/../share/yosys/ice40/ff_map.v' to AST representation.
Generating RTLIL representation for module `\$_DFF_N_'.
Generating RTLIL representation for module `\$_DFF_P_'.
Generating RTLIL representation for module `\$_DFFE_NP_'.
Generating RTLIL representation for module `\$_DFFE_PP_'.
Generating RTLIL representation for module `\$_DFF_NP0_'.
Generating RTLIL representation for module `\$_DFF_NP1_'.
Generating RTLIL representation for module `\$_DFF_PP0_'.
Generating RTLIL representation for module `\$_DFF_PP1_'.
Generating RTLIL representation for module `\$_DFFE_NP0P_'.
Generating RTLIL representation for module `\$_DFFE_NP1P_'.
Generating RTLIL representation for module `\$_DFFE_PP0P_'.
Generating RTLIL representation for module `\$_DFFE_PP1P_'.
Generating RTLIL representation for module `\$_SDFF_NP0_'.
Generating RTLIL representation for module `\$_SDFF_NP1_'.
Generating RTLIL representation for module `\$_SDFF_PP0_'.
Generating RTLIL representation for module `\$_SDFF_PP1_'.
Generating RTLIL representation for module `\$_SDFFCE_NP0P_'.
Generating RTLIL representation for module `\$_SDFFCE_NP1P_'.
Generating RTLIL representation for module `\$_SDFFCE_PP0P_'.
Generating RTLIL representation for module `\$_SDFFCE_PP1P_'.
Successfully finished Verilog frontend.

6.42.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~22 debug messages>
Removed 20 unused cells and 132 unused wires.

6.43. Executing OPT_LUT pass (optimize LUTs).
Discovering LUTs.
Number of LUTs:       69
  1-LUT               21
  2-LUT               10
  3-LUT               30
  4-LUT                8
  with \SB_CARRY    (#0)   19
  with \SB_CARRY    (#1)   19

Eliminating LUTs.
Number of LUTs:       69
  1-LUT               21
  2-LUT               10
  3-LUT               30
  4-LUT                8
  with \SB_CARRY    (#0)   19
  with \SB_CARRY    (#1)   19

Combining LUTs.
Number of LUTs:       69
  1-LUT               21
  2-LUT               10
  3-LUT               30
  4-LUT                8
  with \SB_CARRY    (#0)   19
  with \SB_CARRY    (#1)   19

Eliminated 0 LUTs.
Combined 0 LUTs.
<suppressed ~234 debug messages>

6.44. Executing TECHMAP pass (map to technology primitives).

6.44.1. Executing Verilog-2005 frontend: /home/shay/a/ece270/bin/../share/yosys/ice40/cells_map.v
Parsing Verilog input from `/home/shay/a/ece270/bin/../share/yosys/ice40/cells_map.v' to AST representation.
Generating RTLIL representation for module `\$lut'.
Successfully finished Verilog frontend.

6.44.2. Continuing TECHMAP pass.
Using template $paramod$89add7395f09a7f1d31ba23a20843f5b8e155407\$lut for cells of type $lut.
Using template $paramod$fd904e9e35cfd343a9df248824bd3f1408724879\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'00000001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000010\LUT=4'0001 for cells of type $lut.
Using template $paramod$d9df5a72bb7f41f6aa21e3d2b158aee882c25168\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'01110000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'11110100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000010\LUT=4'0100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000001\LUT=2'01 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000010\LUT=4'0111 for cells of type $lut.
Using template $paramod$7d45bd12c01d1778446c9474bd2c34ae7ad041ca\$lut for cells of type $lut.
Using template $paramod$34a82a10c52f3df22bd604b3c92ad54a39fd0235\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000010\LUT=4'1000 for cells of type $lut.
Using template $paramod$ecf9cac817e9cbb222dc9e58a122faf05f34c860\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'10010000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'11110001 for cells of type $lut.
Using template $paramod$71d951b20e73043168c1656217d126e617052faa\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'11101111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'01000001 for cells of type $lut.
Using template $paramod$7db80a93c7c798c00e91ddd3fe6394daec80a6c1\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000010\LUT=4'0110 for cells of type $lut.
Using template $paramod$2e6cd2e6fe1612f42e522efc831fb67bb95b3d76\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'00001110 for cells of type $lut.
No more expansions possible.
<suppressed ~371 debug messages>
Removed 0 unused cells and 139 unused wires.

6.45. Executing AUTONAME pass.
Renamed 1105 objects in module ice40hx8k (16 iterations).
<suppressed ~169 debug messages>

6.46. Executing HIERARCHY pass (managing design hierarchy).

6.46.1. Analyzing design hierarchy..
Top module:  \ice40hx8k

6.46.2. Analyzing design hierarchy..
Top module:  \ice40hx8k
Removed 0 unused modules.

6.47. Printing statistics.

=== ice40hx8k ===

   Number of wires:                 97
   Number of wire bits:            499
   Number of public wires:          97
   Number of public wire bits:     499
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                145
     SB_CARRY                       37
     SB_DFFE                        14
     SB_DFFESR                      15
     SB_DFFESS                       4
     SB_DFFR                         5
     SB_LUT4                        69
     SB_PLL40_CORE                   1

6.48. Executing CHECK pass (checking for obvious problems).
Checking module ice40hx8k...
Found and reported 0 problems.

6.49. Executing JSON backend.

Warnings: 90 unique messages, 90 total
End of script. Logfile hash: ca248744bc, CPU: user 0.44s system 0.00s, MEM: 27.57 MB peak
Yosys 0.27 (git sha1 5f88c218b, gcc 11.3.0-1ubuntu1~22.04 -fPIC -O3)
Time spent: 39% 17x read_verilog (0 sec), 18% 1x abc (0 sec), ...
