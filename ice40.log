
 /----------------------------------------------------------------------------\
 |                                                                            |
 |  yosys -- Yosys Open SYnthesis Suite                                       |
 |                                                                            |
 |  Copyright (C) 2012 - 2020  Claire Xenia Wolf <claire@yosyshq.com>         |
 |                                                                            |
 |  Permission to use, copy, modify, and/or distribute this software for any  |
 |  purpose with or without fee is hereby granted, provided that the above    |
 |  copyright notice and this permission notice appear in all copies.         |
 |                                                                            |
 |  THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES  |
 |  WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF          |
 |  MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR   |
 |  ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES    |
 |  WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN     |
 |  ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF   |
 |  OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.            |
 |                                                                            |
 \----------------------------------------------------------------------------/

 Yosys 0.27 (git sha1 5f88c218b, gcc 11.3.0-1ubuntu1~22.04 -fPIC -O3)


-- Running command `read_verilog -sv -noblackbox ice40/ice40hx8k.sv source/top.sv source/synth.sv source/clock_8Hz.sv source/clock_div.sv source/frequency_divider.sv source/keypad_encoder.sv source/mode_fsm.sv source/oscillator.sv source/pwm.sv source/sequential_div.sv source/sound_series_fsm.sv source/waveshaper.sv ice40/uart/uart.v ice40/uart/uart_tx.v ice40/uart/uart_rx.v; synth_ice40 -top ice40hx8k -json ./ice40/build/ice40.json' --

1. Executing Verilog-2005 frontend: ice40/ice40hx8k.sv
Parsing SystemVerilog input from `ice40/ice40hx8k.sv' to AST representation.
Generating RTLIL representation for module `\ice40hx8k'.
Generating RTLIL representation for module `\reset_on_start'.
Successfully finished Verilog frontend.

2. Executing Verilog-2005 frontend: source/top.sv
Parsing SystemVerilog input from `source/top.sv' to AST representation.
Generating RTLIL representation for module `\top'.
Successfully finished Verilog frontend.

3. Executing Verilog-2005 frontend: source/synth.sv
Parsing SystemVerilog input from `source/synth.sv' to AST representation.
Generating RTLIL representation for module `\synth'.
Successfully finished Verilog frontend.

4. Executing Verilog-2005 frontend: source/clock_8Hz.sv
Parsing SystemVerilog input from `source/clock_8Hz.sv' to AST representation.
Generating RTLIL representation for module `\clock_8Hz'.
Successfully finished Verilog frontend.

5. Executing Verilog-2005 frontend: source/clock_div.sv
Parsing SystemVerilog input from `source/clock_div.sv' to AST representation.
Generating RTLIL representation for module `\clock_div'.
Successfully finished Verilog frontend.

6. Executing Verilog-2005 frontend: source/frequency_divider.sv
Parsing SystemVerilog input from `source/frequency_divider.sv' to AST representation.
Generating RTLIL representation for module `\frequency_divider'.
Successfully finished Verilog frontend.

7. Executing Verilog-2005 frontend: source/keypad_encoder.sv
Parsing SystemVerilog input from `source/keypad_encoder.sv' to AST representation.
Generating RTLIL representation for module `\keypad_encoder'.
Successfully finished Verilog frontend.

8. Executing Verilog-2005 frontend: source/mode_fsm.sv
Parsing SystemVerilog input from `source/mode_fsm.sv' to AST representation.
Generating RTLIL representation for module `\mode_fsm'.
Successfully finished Verilog frontend.

9. Executing Verilog-2005 frontend: source/oscillator.sv
Parsing SystemVerilog input from `source/oscillator.sv' to AST representation.
Generating RTLIL representation for module `\oscillator'.
Successfully finished Verilog frontend.

10. Executing Verilog-2005 frontend: source/pwm.sv
Parsing SystemVerilog input from `source/pwm.sv' to AST representation.
Generating RTLIL representation for module `\pwm'.
Successfully finished Verilog frontend.

11. Executing Verilog-2005 frontend: source/sequential_div.sv
Parsing SystemVerilog input from `source/sequential_div.sv' to AST representation.
Generating RTLIL representation for module `\sequential_div'.
Successfully finished Verilog frontend.

12. Executing Verilog-2005 frontend: source/sound_series_fsm.sv
Parsing SystemVerilog input from `source/sound_series_fsm.sv' to AST representation.
Generating RTLIL representation for module `\sound_series_fsm'.
Successfully finished Verilog frontend.

13. Executing Verilog-2005 frontend: source/waveshaper.sv
Parsing SystemVerilog input from `source/waveshaper.sv' to AST representation.
Generating RTLIL representation for module `\waveshaper'.
Successfully finished Verilog frontend.

14. Executing Verilog-2005 frontend: ice40/uart/uart.v
Parsing SystemVerilog input from `ice40/uart/uart.v' to AST representation.
Generating RTLIL representation for module `\uart'.
Successfully finished Verilog frontend.

15. Executing Verilog-2005 frontend: ice40/uart/uart_tx.v
Parsing SystemVerilog input from `ice40/uart/uart_tx.v' to AST representation.
Generating RTLIL representation for module `\uart_tx'.
Successfully finished Verilog frontend.

16. Executing Verilog-2005 frontend: ice40/uart/uart_rx.v
Parsing SystemVerilog input from `ice40/uart/uart_rx.v' to AST representation.
Generating RTLIL representation for module `\uart_rx'.
Successfully finished Verilog frontend.

17. Executing SYNTH_ICE40 pass.

17.1. Executing Verilog-2005 frontend: /home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v
Parsing Verilog input from `/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v' to AST representation.
Generating RTLIL representation for module `\SB_IO'.
Generating RTLIL representation for module `\SB_GB_IO'.
Generating RTLIL representation for module `\SB_GB'.
Generating RTLIL representation for module `\SB_LUT4'.
Generating RTLIL representation for module `\SB_CARRY'.
Generating RTLIL representation for module `\SB_DFF'.
Generating RTLIL representation for module `\SB_DFFE'.
Generating RTLIL representation for module `\SB_DFFSR'.
Generating RTLIL representation for module `\SB_DFFR'.
Generating RTLIL representation for module `\SB_DFFSS'.
Generating RTLIL representation for module `\SB_DFFS'.
Generating RTLIL representation for module `\SB_DFFESR'.
Generating RTLIL representation for module `\SB_DFFER'.
Generating RTLIL representation for module `\SB_DFFESS'.
Generating RTLIL representation for module `\SB_DFFES'.
Generating RTLIL representation for module `\SB_DFFN'.
Generating RTLIL representation for module `\SB_DFFNE'.
Generating RTLIL representation for module `\SB_DFFNSR'.
Generating RTLIL representation for module `\SB_DFFNR'.
Generating RTLIL representation for module `\SB_DFFNSS'.
Generating RTLIL representation for module `\SB_DFFNS'.
Generating RTLIL representation for module `\SB_DFFNESR'.
Generating RTLIL representation for module `\SB_DFFNER'.
Generating RTLIL representation for module `\SB_DFFNESS'.
Generating RTLIL representation for module `\SB_DFFNES'.
Generating RTLIL representation for module `\SB_RAM40_4K'.
Generating RTLIL representation for module `\SB_RAM40_4KNR'.
Generating RTLIL representation for module `\SB_RAM40_4KNW'.
Generating RTLIL representation for module `\SB_RAM40_4KNRNW'.
Generating RTLIL representation for module `\ICESTORM_LC'.
Generating RTLIL representation for module `\SB_PLL40_CORE'.
Generating RTLIL representation for module `\SB_PLL40_PAD'.
Generating RTLIL representation for module `\SB_PLL40_2_PAD'.
Generating RTLIL representation for module `\SB_PLL40_2F_CORE'.
Generating RTLIL representation for module `\SB_PLL40_2F_PAD'.
Generating RTLIL representation for module `\SB_WARMBOOT'.
Generating RTLIL representation for module `\SB_SPRAM256KA'.
Generating RTLIL representation for module `\SB_HFOSC'.
Generating RTLIL representation for module `\SB_LFOSC'.
Generating RTLIL representation for module `\SB_RGBA_DRV'.
Generating RTLIL representation for module `\SB_LED_DRV_CUR'.
Generating RTLIL representation for module `\SB_RGB_DRV'.
Generating RTLIL representation for module `\SB_I2C'.
Generating RTLIL representation for module `\SB_SPI'.
Generating RTLIL representation for module `\SB_LEDDA_IP'.
Generating RTLIL representation for module `\SB_FILTER_50NS'.
Generating RTLIL representation for module `\SB_IO_I3C'.
Generating RTLIL representation for module `\SB_IO_OD'.
Generating RTLIL representation for module `\SB_MAC16'.
Generating RTLIL representation for module `\ICESTORM_RAM'.
Successfully finished Verilog frontend.

17.2. Executing HIERARCHY pass (managing design hierarchy).

17.2.1. Analyzing design hierarchy..
Top module:  \ice40hx8k
Used module:     \top
Used module:         \synth
Used module:             \clock_8Hz
Used module:             \pwm
Used module:             \waveshaper
Used module:             \mode_fsm
Used module:             \sequential_div
Used module:             \clock_div
Used module:             \oscillator
Used module:             \frequency_divider
Used module:             \sound_series_fsm
Used module:             \keypad_encoder
Used module:     \reset_on_start
Used module:     \uart
Used module:         \uart_rx
Used module:         \uart_tx
Parameter \DATA_WIDTH = 8

17.2.2. Executing AST frontend in derive mode using pre-parsed AST for module `\uart_rx'.
Parameter \DATA_WIDTH = 8
Generating RTLIL representation for module `$paramod\uart_rx\DATA_WIDTH=s32'00000000000000000000000000001000'.
Parameter \DATA_WIDTH = 8

17.2.3. Executing AST frontend in derive mode using pre-parsed AST for module `\uart_tx'.
Parameter \DATA_WIDTH = 8
Generating RTLIL representation for module `$paramod\uart_tx\DATA_WIDTH=s32'00000000000000000000000000001000'.

17.2.4. Analyzing design hierarchy..
Top module:  \ice40hx8k
Used module:     \top
Used module:         \synth
Used module:             \clock_8Hz
Used module:             \pwm
Used module:             \waveshaper
Used module:             \mode_fsm
Used module:             \sequential_div
Used module:             \clock_div
Used module:             \oscillator
Used module:             \frequency_divider
Used module:             \sound_series_fsm
Used module:             \keypad_encoder
Used module:     \reset_on_start
Used module:     \uart
Used module:         $paramod\uart_rx\DATA_WIDTH=s32'00000000000000000000000000001000
Used module:         $paramod\uart_tx\DATA_WIDTH=s32'00000000000000000000000000001000

17.2.5. Analyzing design hierarchy..
Top module:  \ice40hx8k
Used module:     \top
Used module:         \synth
Used module:             \clock_8Hz
Used module:             \pwm
Used module:             \waveshaper
Used module:             \mode_fsm
Used module:             \sequential_div
Used module:             \clock_div
Used module:             \oscillator
Used module:             \frequency_divider
Used module:             \sound_series_fsm
Used module:             \keypad_encoder
Used module:     \reset_on_start
Used module:     \uart
Used module:         $paramod\uart_rx\DATA_WIDTH=s32'00000000000000000000000000001000
Used module:         $paramod\uart_tx\DATA_WIDTH=s32'00000000000000000000000000001000
Removing unused module `\uart_rx'.
Removing unused module `\uart_tx'.
Removed 2 unused modules.
Mapping positional arguments of cell ice40hx8k.top_inst (top).
Mapping positional arguments of cell ice40hx8k.ros (reset_on_start).
Warning: Resizing cell port ice40hx8k.uart_inst.prescale from 32 bits to 16 bits.
Warning: Resizing cell port ice40hx8k.uart_inst.rst from 32 bits to 1 bits.

17.3. Executing PROC pass (convert processes to netlists).

17.3.1. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

17.3.2. Executing PROC_RMDEAD pass (remove dead branches from decision trees).
Marked 1 switch rules as full_case in process $proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:1414$445 in module SB_DFFNES.
Marked 1 switch rules as full_case in process $proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:1353$438 in module SB_DFFNESS.
Marked 1 switch rules as full_case in process $proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:1273$434 in module SB_DFFNER.
Marked 1 switch rules as full_case in process $proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:1212$427 in module SB_DFFNESR.
Marked 1 switch rules as full_case in process $proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:1138$424 in module SB_DFFNS.
Marked 1 switch rules as full_case in process $proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:1088$421 in module SB_DFFNSS.
Marked 1 switch rules as full_case in process $proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:1017$418 in module SB_DFFNR.
Marked 1 switch rules as full_case in process $proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:967$415 in module SB_DFFNSR.
Marked 1 switch rules as full_case in process $proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:803$407 in module SB_DFFES.
Marked 1 switch rules as full_case in process $proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:742$400 in module SB_DFFESS.
Marked 1 switch rules as full_case in process $proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:662$396 in module SB_DFFER.
Marked 1 switch rules as full_case in process $proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:601$389 in module SB_DFFESR.
Marked 1 switch rules as full_case in process $proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:527$386 in module SB_DFFS.
Marked 1 switch rules as full_case in process $proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:477$383 in module SB_DFFSS.
Marked 1 switch rules as full_case in process $proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:406$380 in module SB_DFFR.
Marked 1 switch rules as full_case in process $proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:356$377 in module SB_DFFSR.
Marked 4 switch rules as full_case in process $proc$ice40/uart/uart_tx.v:78$613 in module $paramod\uart_tx\DATA_WIDTH=s32'00000000000000000000000000001000.
Marked 7 switch rules as full_case in process $proc$ice40/uart/uart_rx.v:86$585 in module $paramod\uart_rx\DATA_WIDTH=s32'00000000000000000000000000001000.
Removed 1 dead cases from process $proc$source/waveshaper.sv:0$152 in module waveshaper.
Marked 1 switch rules as full_case in process $proc$source/waveshaper.sv:0$152 in module waveshaper.
Marked 6 switch rules as full_case in process $proc$source/sound_series_fsm.sv:0$144 in module sound_series_fsm.
Marked 1 switch rules as full_case in process $proc$source/sound_series_fsm.sv:75$142 in module sound_series_fsm.
Marked 1 switch rules as full_case in process $proc$source/sound_series_fsm.sv:43$134 in module sound_series_fsm.
Removed 2 dead cases from process $proc$source/sound_series_fsm.sv:0$127 in module sound_series_fsm.
Marked 3 switch rules as full_case in process $proc$source/sound_series_fsm.sv:0$127 in module sound_series_fsm.
Marked 1 switch rules as full_case in process $proc$source/sequential_div.sv:112$125 in module sequential_div.
Marked 3 switch rules as full_case in process $proc$source/sequential_div.sv:0$120 in module sequential_div.
Marked 1 switch rules as full_case in process $proc$source/sequential_div.sv:77$118 in module sequential_div.
Marked 1 switch rules as full_case in process $proc$source/sequential_div.sv:0$117 in module sequential_div.
Marked 1 switch rules as full_case in process $proc$source/sequential_div.sv:0$116 in module sequential_div.
Marked 1 switch rules as full_case in process $proc$source/sequential_div.sv:48$114 in module sequential_div.
Removed 1 dead cases from process $proc$source/sequential_div.sv:0$109 in module sequential_div.
Marked 4 switch rules as full_case in process $proc$source/sequential_div.sv:0$109 in module sequential_div.
Marked 1 switch rules as full_case in process $proc$source/sequential_div.sv:0$106 in module sequential_div.
Marked 1 switch rules as full_case in process $proc$source/sequential_div.sv:14$104 in module sequential_div.
Marked 3 switch rules as full_case in process $proc$source/pwm.sv:0$99 in module pwm.
Marked 1 switch rules as full_case in process $proc$source/pwm.sv:10$97 in module pwm.
Marked 2 switch rules as full_case in process $proc$source/oscillator.sv:0$93 in module oscillator.
Marked 1 switch rules as full_case in process $proc$source/oscillator.sv:5$91 in module oscillator.
Removed 1 dead cases from process $proc$source/mode_fsm.sv:0$86 in module mode_fsm.
Marked 1 switch rules as full_case in process $proc$source/mode_fsm.sv:0$86 in module mode_fsm.
Marked 1 switch rules as full_case in process $proc$source/mode_fsm.sv:9$84 in module mode_fsm.
Marked 1 switch rules as full_case in process $proc$source/keypad_encoder.sv:55$80 in module keypad_encoder.
Marked 1 switch rules as full_case in process $proc$source/keypad_encoder.sv:42$76 in module keypad_encoder.
Marked 1 switch rules as full_case in process $proc$source/keypad_encoder.sv:0$75 in module keypad_encoder.
Marked 1 switch rules as full_case in process $proc$source/keypad_encoder.sv:11$73 in module keypad_encoder.
Marked 1 switch rules as full_case in process $proc$source/frequency_divider.sv:0$71 in module frequency_divider.
Marked 1 switch rules as full_case in process $proc$source/frequency_divider.sv:0$70 in module frequency_divider.
Marked 1 switch rules as full_case in process $proc$source/frequency_divider.sv:0$69 in module frequency_divider.
Marked 5 switch rules as full_case in process $proc$source/frequency_divider.sv:0$55 in module frequency_divider.
Marked 2 switch rules as full_case in process $proc$source/clock_div.sv:0$51 in module clock_div.
Marked 1 switch rules as full_case in process $proc$source/clock_div.sv:10$49 in module clock_div.
Marked 2 switch rules as full_case in process $proc$source/clock_8Hz.sv:0$45 in module clock_8Hz.
Marked 1 switch rules as full_case in process $proc$source/clock_8Hz.sv:10$43 in module clock_8Hz.
Marked 5 switch rules as full_case in process $proc$ice40/ice40hx8k.sv:131$16 in module reset_on_start.
Marked 1 switch rules as full_case in process $proc$ice40/ice40hx8k.sv:104$9 in module ice40hx8k.
Marked 1 switch rules as full_case in process $proc$ice40/ice40hx8k.sv:98$7 in module ice40hx8k.
Marked 1 switch rules as full_case in process $proc$ice40/ice40hx8k.sv:14$1 in module ice40hx8k.
Removed a total of 5 dead cases.

17.3.3. Executing PROC_PRUNE pass (remove redundant assignments in processes).
Removed 33 redundant assignments.
Promoted 72 assignments to connections.

17.3.4. Executing PROC_INIT pass (extract init attributes).
Found init rule in `\SB_DFFNES.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$448'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFNESS.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$444'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFNER.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$437'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFNESR.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$433'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFNS.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$426'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFNSS.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$423'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFNR.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$420'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFNSR.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$417'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFNE.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$414'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFN.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$412'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFES.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$410'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFESS.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$406'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFER.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$399'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFESR.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$395'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFS.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$388'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFSS.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$385'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFR.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$382'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFSR.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$379'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFE.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$376'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFF.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$374'.
  Set init value: \Q = 1'0
Found init rule in `$paramod\uart_tx\DATA_WIDTH=s32'00000000000000000000000000001000.$proc$ice40/uart/uart_tx.v:71$632'.
  Set init value: \bit_cnt = 4'0000
Found init rule in `$paramod\uart_tx\DATA_WIDTH=s32'00000000000000000000000000001000.$proc$ice40/uart/uart_tx.v:70$631'.
  Set init value: \prescale_reg = 19'0000000000000000000
Found init rule in `$paramod\uart_tx\DATA_WIDTH=s32'00000000000000000000000000001000.$proc$ice40/uart/uart_tx.v:69$630'.
  Set init value: \data_reg = 9'000000000
Found init rule in `$paramod\uart_tx\DATA_WIDTH=s32'00000000000000000000000000001000.$proc$ice40/uart/uart_tx.v:67$629'.
  Set init value: \busy_reg = 1'0
Found init rule in `$paramod\uart_tx\DATA_WIDTH=s32'00000000000000000000000000001000.$proc$ice40/uart/uart_tx.v:65$628'.
  Set init value: \txd_reg = 1'1
Found init rule in `$paramod\uart_tx\DATA_WIDTH=s32'00000000000000000000000000001000.$proc$ice40/uart/uart_tx.v:63$627'.
  Set init value: \input_axis_tready_reg = 1'0
Found init rule in `$paramod\uart_rx\DATA_WIDTH=s32'00000000000000000000000000001000.$proc$ice40/uart/uart_rx.v:77$612'.
  Set init value: \bit_cnt = 4'0000
Found init rule in `$paramod\uart_rx\DATA_WIDTH=s32'00000000000000000000000000001000.$proc$ice40/uart/uart_rx.v:76$611'.
  Set init value: \prescale_reg = 19'0000000000000000000
Found init rule in `$paramod\uart_rx\DATA_WIDTH=s32'00000000000000000000000000001000.$proc$ice40/uart/uart_rx.v:75$610'.
  Set init value: \data_reg = 8'00000000
Found init rule in `$paramod\uart_rx\DATA_WIDTH=s32'00000000000000000000000000001000.$proc$ice40/uart/uart_rx.v:73$609'.
  Set init value: \frame_error_reg = 1'0
Found init rule in `$paramod\uart_rx\DATA_WIDTH=s32'00000000000000000000000000001000.$proc$ice40/uart/uart_rx.v:72$608'.
  Set init value: \overrun_error_reg = 1'0
Found init rule in `$paramod\uart_rx\DATA_WIDTH=s32'00000000000000000000000000001000.$proc$ice40/uart/uart_rx.v:71$607'.
  Set init value: \busy_reg = 1'0
Found init rule in `$paramod\uart_rx\DATA_WIDTH=s32'00000000000000000000000000001000.$proc$ice40/uart/uart_rx.v:69$606'.
  Set init value: \rxd_reg = 1'1
Found init rule in `$paramod\uart_rx\DATA_WIDTH=s32'00000000000000000000000000001000.$proc$ice40/uart/uart_rx.v:67$605'.
  Set init value: \output_axis_tvalid_reg = 1'0
Found init rule in `$paramod\uart_rx\DATA_WIDTH=s32'00000000000000000000000000001000.$proc$ice40/uart/uart_rx.v:66$604'.
  Set init value: \output_axis_tdata_reg = 8'00000000
Found init rule in `\reset_on_start.$proc$ice40/ice40hx8k.sv:129$23'.
  Set init value: \startup = 3'000
Found init rule in `\ice40hx8k.$proc$ice40/ice40hx8k.sv:13$14'.
  Set init value: \hz100 = 1'0
Found init rule in `\ice40hx8k.$proc$ice40/ice40hx8k.sv:12$13'.
  Set init value: \ctr = 21'000000000000000000000

17.3.5. Executing PROC_ARST pass (detect async resets in processes).
Found async reset \S in `\SB_DFFNES.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:1414$445'.
Found async reset \R in `\SB_DFFNER.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:1273$434'.
Found async reset \S in `\SB_DFFNS.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:1138$424'.
Found async reset \R in `\SB_DFFNR.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:1017$418'.
Found async reset \S in `\SB_DFFES.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:803$407'.
Found async reset \R in `\SB_DFFER.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:662$396'.
Found async reset \S in `\SB_DFFS.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:527$386'.
Found async reset \R in `\SB_DFFR.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:406$380'.
Found async reset \n_rst in `\sound_series_fsm.$proc$source/sound_series_fsm.sv:75$142'.
Found async reset \n_rst in `\sound_series_fsm.$proc$source/sound_series_fsm.sv:43$134'.
Found async reset \n_rst in `\sequential_div.$proc$source/sequential_div.sv:112$125'.
Found async reset \n_rst in `\sequential_div.$proc$source/sequential_div.sv:77$118'.
Found async reset \n_rst in `\sequential_div.$proc$source/sequential_div.sv:48$114'.
Found async reset \n_rst in `\sequential_div.$proc$source/sequential_div.sv:14$104'.
Found async reset \n_rst in `\pwm.$proc$source/pwm.sv:10$97'.
Found async reset \n_rst in `\oscillator.$proc$source/oscillator.sv:5$91'.
Found async reset \n_rst in `\mode_fsm.$proc$source/mode_fsm.sv:9$84'.
Found async reset \n_rst in `\keypad_encoder.$proc$source/keypad_encoder.sv:55$80'.
Found async reset \n_rst in `\keypad_encoder.$proc$source/keypad_encoder.sv:42$76'.
Found async reset \n_rst in `\keypad_encoder.$proc$source/keypad_encoder.sv:11$73'.
Found async reset \n_rst in `\clock_div.$proc$source/clock_div.sv:10$49'.
Found async reset \n_rst in `\clock_8Hz.$proc$source/clock_8Hz.sv:10$43'.
Found async reset \manual in `\reset_on_start.$proc$ice40/ice40hx8k.sv:131$16'.
Found async reset \rxready in `\ice40hx8k.$proc$ice40/ice40hx8k.sv:104$9'.
Found async reset \txready in `\ice40hx8k.$proc$ice40/ice40hx8k.sv:98$7'.

17.3.6. Executing PROC_ROM pass (convert switches to ROMs).
Converted 2 switches.
<suppressed ~77 debug messages>

17.3.7. Executing PROC_MUX pass (convert decision trees to multiplexers).
Creating decoders for process `\SB_DFFNES.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$448'.
Creating decoders for process `\SB_DFFNES.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:1414$445'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFNESS.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$444'.
Creating decoders for process `\SB_DFFNESS.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:1353$438'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFNER.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$437'.
Creating decoders for process `\SB_DFFNER.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:1273$434'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFNESR.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$433'.
Creating decoders for process `\SB_DFFNESR.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:1212$427'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFNS.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$426'.
Creating decoders for process `\SB_DFFNS.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:1138$424'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFNSS.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$423'.
Creating decoders for process `\SB_DFFNSS.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:1088$421'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFNR.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$420'.
Creating decoders for process `\SB_DFFNR.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:1017$418'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFNSR.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$417'.
Creating decoders for process `\SB_DFFNSR.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:967$415'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFNE.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$414'.
Creating decoders for process `\SB_DFFNE.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:922$413'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFN.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$412'.
Creating decoders for process `\SB_DFFN.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:882$411'.
Creating decoders for process `\SB_DFFES.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$410'.
Creating decoders for process `\SB_DFFES.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:803$407'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFESS.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$406'.
Creating decoders for process `\SB_DFFESS.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:742$400'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFER.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$399'.
Creating decoders for process `\SB_DFFER.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:662$396'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFESR.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$395'.
Creating decoders for process `\SB_DFFESR.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:601$389'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFS.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$388'.
Creating decoders for process `\SB_DFFS.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:527$386'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFSS.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$385'.
Creating decoders for process `\SB_DFFSS.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:477$383'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFR.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$382'.
Creating decoders for process `\SB_DFFR.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:406$380'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFSR.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$379'.
Creating decoders for process `\SB_DFFSR.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:356$377'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFE.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$376'.
Creating decoders for process `\SB_DFFE.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:311$375'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFF.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$374'.
Creating decoders for process `\SB_DFF.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:271$373'.
Creating decoders for process `$paramod\uart_tx\DATA_WIDTH=s32'00000000000000000000000000001000.$proc$ice40/uart/uart_tx.v:71$632'.
Creating decoders for process `$paramod\uart_tx\DATA_WIDTH=s32'00000000000000000000000000001000.$proc$ice40/uart/uart_tx.v:70$631'.
Creating decoders for process `$paramod\uart_tx\DATA_WIDTH=s32'00000000000000000000000000001000.$proc$ice40/uart/uart_tx.v:69$630'.
Creating decoders for process `$paramod\uart_tx\DATA_WIDTH=s32'00000000000000000000000000001000.$proc$ice40/uart/uart_tx.v:67$629'.
Creating decoders for process `$paramod\uart_tx\DATA_WIDTH=s32'00000000000000000000000000001000.$proc$ice40/uart/uart_tx.v:65$628'.
Creating decoders for process `$paramod\uart_tx\DATA_WIDTH=s32'00000000000000000000000000001000.$proc$ice40/uart/uart_tx.v:63$627'.
Creating decoders for process `$paramod\uart_tx\DATA_WIDTH=s32'00000000000000000000000000001000.$proc$ice40/uart/uart_tx.v:78$613'.
     1/6: $0\data_reg[8:0]
     2/6: $0\prescale_reg[18:0]
     3/6: $0\txd_reg[0:0]
     4/6: $0\busy_reg[0:0]
     5/6: $0\bit_cnt[3:0]
     6/6: $0\input_axis_tready_reg[0:0]
Creating decoders for process `$paramod\uart_rx\DATA_WIDTH=s32'00000000000000000000000000001000.$proc$ice40/uart/uart_rx.v:77$612'.
Creating decoders for process `$paramod\uart_rx\DATA_WIDTH=s32'00000000000000000000000000001000.$proc$ice40/uart/uart_rx.v:76$611'.
Creating decoders for process `$paramod\uart_rx\DATA_WIDTH=s32'00000000000000000000000000001000.$proc$ice40/uart/uart_rx.v:75$610'.
Creating decoders for process `$paramod\uart_rx\DATA_WIDTH=s32'00000000000000000000000000001000.$proc$ice40/uart/uart_rx.v:73$609'.
Creating decoders for process `$paramod\uart_rx\DATA_WIDTH=s32'00000000000000000000000000001000.$proc$ice40/uart/uart_rx.v:72$608'.
Creating decoders for process `$paramod\uart_rx\DATA_WIDTH=s32'00000000000000000000000000001000.$proc$ice40/uart/uart_rx.v:71$607'.
Creating decoders for process `$paramod\uart_rx\DATA_WIDTH=s32'00000000000000000000000000001000.$proc$ice40/uart/uart_rx.v:69$606'.
Creating decoders for process `$paramod\uart_rx\DATA_WIDTH=s32'00000000000000000000000000001000.$proc$ice40/uart/uart_rx.v:67$605'.
Creating decoders for process `$paramod\uart_rx\DATA_WIDTH=s32'00000000000000000000000000001000.$proc$ice40/uart/uart_rx.v:66$604'.
Creating decoders for process `$paramod\uart_rx\DATA_WIDTH=s32'00000000000000000000000000001000.$proc$ice40/uart/uart_rx.v:86$585'.
     1/9: $0\frame_error_reg[0:0]
     2/9: $0\overrun_error_reg[0:0]
     3/9: $0\rxd_reg[0:0]
     4/9: $0\output_axis_tvalid_reg[0:0]
     5/9: $0\output_axis_tdata_reg[7:0]
     6/9: $0\bit_cnt[3:0]
     7/9: $0\prescale_reg[18:0]
     8/9: $0\data_reg[7:0]
     9/9: $0\busy_reg[0:0]
Creating decoders for process `\waveshaper.$proc$source/waveshaper.sv:0$152'.
     1/1: $1\sample[7:0]
Creating decoders for process `\sound_series_fsm.$proc$source/sound_series_fsm.sv:0$144'.
     1/6: $6\next_count[8:0]
     2/6: $5\next_count[8:0]
     3/6: $4\next_count[8:0]
     4/6: $3\next_count[8:0]
     5/6: $2\next_count[8:0]
     6/6: $1\next_count[8:0]
Creating decoders for process `\sound_series_fsm.$proc$source/sound_series_fsm.sv:75$142'.
     1/1: $0\count[8:0]
Creating decoders for process `\sound_series_fsm.$proc$source/sound_series_fsm.sv:43$134'.
     1/1: $0\sound[1:0]
Creating decoders for process `\sound_series_fsm.$proc$source/sound_series_fsm.sv:0$127'.
     1/5: $2\s2_on[0:0]
     2/5: $2\s1_on[0:0]
     3/5: $1\s2_on[0:0]
     4/5: $1\s1_on[0:0]
     5/5: $1\next_sound[1:0]
Creating decoders for process `\sequential_div.$proc$source/sequential_div.sv:112$125'.
     1/3: $0\D[15:0]
     2/3: $0\Q[7:0]
     3/3: $0\R[23:0]
Creating decoders for process `\sequential_div.$proc$source/sequential_div.sv:0$120'.
     1/7: $3\next_q[7:0]
     2/7: $3\next_r[23:0]
     3/7: $2\next_q[7:0]
     4/7: $2\next_r[23:0]
     5/7: $1\next_d[15:0]
     6/7: $1\next_q[7:0]
     7/7: $1\next_r[23:0]
Creating decoders for process `\sequential_div.$proc$source/sequential_div.sv:77$118'.
     1/2: $0\q_out[7:0]
     2/2: $0\dividend[15:0]
Creating decoders for process `\sequential_div.$proc$source/sequential_div.sv:0$117'.
     1/1: $1\next_q_out[7:0]
Creating decoders for process `\sequential_div.$proc$source/sequential_div.sv:0$116'.
     1/1: $1\D_count[15:0]
Creating decoders for process `\sequential_div.$proc$source/sequential_div.sv:48$114'.
     1/1: $0\state[1:0]
Creating decoders for process `\sequential_div.$proc$source/sequential_div.sv:0$109'.
     1/4: $4\next_state[1:0]
     2/4: $3\next_state[1:0]
     3/4: $2\next_state[1:0]
     4/4: $1\next_state[1:0]
Creating decoders for process `\sequential_div.$proc$source/sequential_div.sv:0$106'.
     1/1: $1\next_count[2:0]
Creating decoders for process `\sequential_div.$proc$source/sequential_div.sv:14$104'.
     1/1: $0\count_div[2:0]
Creating decoders for process `\pwm.$proc$source/pwm.sv:0$99'.
     1/4: $2\pwm[0:0]
     2/4: $2\next_count[7:0]
     3/4: $1\pwm[0:0]
     4/4: $1\next_count[7:0]
Creating decoders for process `\pwm.$proc$source/pwm.sv:10$97'.
     1/2: $0\count[7:0]
     2/2: $0\pwm_o[0:0]
Creating decoders for process `\oscillator.$proc$source/oscillator.sv:0$93'.
     1/2: $2\next_count[15:0]
     2/2: $1\next_count[15:0]
Creating decoders for process `\oscillator.$proc$source/oscillator.sv:5$91'.
     1/1: $0\count[15:0]
Creating decoders for process `\mode_fsm.$proc$source/mode_fsm.sv:0$86'.
     1/1: $1\next_mode[1:0]
Creating decoders for process `\mode_fsm.$proc$source/mode_fsm.sv:9$84'.
     1/1: $0\mode[1:0]
Creating decoders for process `\keypad_encoder.$proc$source/keypad_encoder.sv:55$80'.
     1/1: $0\last_sk[0:0]
Creating decoders for process `\keypad_encoder.$proc$source/keypad_encoder.sv:42$76'.
     1/1: $0\last_mk[0:0]
Creating decoders for process `\keypad_encoder.$proc$source/keypad_encoder.sv:0$75'.
     1/1: $1\keycode[3:0]
Creating decoders for process `\keypad_encoder.$proc$source/keypad_encoder.sv:11$73'.
     1/2: $0\sync_out[14:0]
     2/2: $0\q[14:0]
Creating decoders for process `\frequency_divider.$proc$source/frequency_divider.sv:0$71'.
     1/1: $1\divider[15:0]
Creating decoders for process `\frequency_divider.$proc$source/frequency_divider.sv:0$70'.
     1/1: $1\LUT_12MHz[15:0]
Creating decoders for process `\frequency_divider.$proc$source/frequency_divider.sv:0$69'.
     1/1: $1\LUT_10MHz[15:0]
Creating decoders for process `\frequency_divider.$proc$source/frequency_divider.sv:0$55'.
     1/5: $5\intermediate[3:0]
     2/5: $4\intermediate[3:0]
     3/5: $3\intermediate[3:0]
     4/5: $2\intermediate[3:0]
     5/5: $1\intermediate[3:0]
Creating decoders for process `\clock_div.$proc$source/clock_div.sv:0$51'.
     1/4: $2\flag[0:0]
     2/4: $2\next_count[7:0]
     3/4: $1\next_count[7:0]
     4/4: $1\flag[0:0]
Creating decoders for process `\clock_div.$proc$source/clock_div.sv:10$49'.
     1/1: $0\count[7:0]
Creating decoders for process `\clock_8Hz.$proc$source/clock_8Hz.sv:0$45'.
     1/4: $2\flag[0:0]
     2/4: $2\next_count[20:0]
     3/4: $1\next_count[20:0]
     4/4: $1\flag[0:0]
Creating decoders for process `\clock_8Hz.$proc$source/clock_8Hz.sv:10$43'.
     1/1: $0\count[20:0]
Creating decoders for process `\top.$proc$source/top.sv:0$29'.
Creating decoders for process `\reset_on_start.$proc$ice40/ice40hx8k.sv:129$23'.
Creating decoders for process `\reset_on_start.$proc$ice40/ice40hx8k.sv:131$16'.
     1/1: $0\startup[2:0]
Creating decoders for process `\ice40hx8k.$proc$ice40/ice40hx8k.sv:13$14'.
Creating decoders for process `\ice40hx8k.$proc$ice40/ice40hx8k.sv:12$13'.
Creating decoders for process `\ice40hx8k.$proc$ice40/ice40hx8k.sv:104$9'.
     1/1: $0\recv[0:0]
Creating decoders for process `\ice40hx8k.$proc$ice40/ice40hx8k.sv:98$7'.
     1/1: $0\xmit[0:0]
Creating decoders for process `\ice40hx8k.$proc$ice40/ice40hx8k.sv:14$1'.
     1/2: $0\ctr[20:0]
     2/2: $0\hz100[0:0]

17.3.8. Executing PROC_DLATCH pass (convert process syncs to latches).
No latch inferred for signal `\waveshaper.\sample' from process `\waveshaper.$proc$source/waveshaper.sv:0$152'.
No latch inferred for signal `\sound_series_fsm.\next_count' from process `\sound_series_fsm.$proc$source/sound_series_fsm.sv:0$144'.
No latch inferred for signal `\sound_series_fsm.\next_sound' from process `\sound_series_fsm.$proc$source/sound_series_fsm.sv:0$127'.
No latch inferred for signal `\sound_series_fsm.\s1_on' from process `\sound_series_fsm.$proc$source/sound_series_fsm.sv:0$127'.
No latch inferred for signal `\sound_series_fsm.\s2_on' from process `\sound_series_fsm.$proc$source/sound_series_fsm.sv:0$127'.
No latch inferred for signal `\sequential_div.\next_r' from process `\sequential_div.$proc$source/sequential_div.sv:0$120'.
No latch inferred for signal `\sequential_div.\next_q' from process `\sequential_div.$proc$source/sequential_div.sv:0$120'.
No latch inferred for signal `\sequential_div.\next_d' from process `\sequential_div.$proc$source/sequential_div.sv:0$120'.
No latch inferred for signal `\sequential_div.\next_q_out' from process `\sequential_div.$proc$source/sequential_div.sv:0$117'.
No latch inferred for signal `\sequential_div.\D_count' from process `\sequential_div.$proc$source/sequential_div.sv:0$116'.
No latch inferred for signal `\sequential_div.\div' from process `\sequential_div.$proc$source/sequential_div.sv:0$109'.
No latch inferred for signal `\sequential_div.\done' from process `\sequential_div.$proc$source/sequential_div.sv:0$109'.
No latch inferred for signal `\sequential_div.\load' from process `\sequential_div.$proc$source/sequential_div.sv:0$109'.
No latch inferred for signal `\sequential_div.\next_state' from process `\sequential_div.$proc$source/sequential_div.sv:0$109'.
No latch inferred for signal `\sequential_div.\next_count' from process `\sequential_div.$proc$source/sequential_div.sv:0$106'.
No latch inferred for signal `\pwm.\pwm' from process `\pwm.$proc$source/pwm.sv:0$99'.
No latch inferred for signal `\pwm.\next_count' from process `\pwm.$proc$source/pwm.sv:0$99'.
No latch inferred for signal `\oscillator.\next_count' from process `\oscillator.$proc$source/oscillator.sv:0$93'.
No latch inferred for signal `\mode_fsm.\next_mode' from process `\mode_fsm.$proc$source/mode_fsm.sv:0$86'.
No latch inferred for signal `\keypad_encoder.\keycode' from process `\keypad_encoder.$proc$source/keypad_encoder.sv:0$75'.
No latch inferred for signal `\frequency_divider.\divider' from process `\frequency_divider.$proc$source/frequency_divider.sv:0$71'.
No latch inferred for signal `\frequency_divider.\LUT_12MHz' from process `\frequency_divider.$proc$source/frequency_divider.sv:0$70'.
No latch inferred for signal `\frequency_divider.\LUT_10MHz' from process `\frequency_divider.$proc$source/frequency_divider.sv:0$69'.
No latch inferred for signal `\frequency_divider.\intermediate' from process `\frequency_divider.$proc$source/frequency_divider.sv:0$55'.
No latch inferred for signal `\clock_div.\flag' from process `\clock_div.$proc$source/clock_div.sv:0$51'.
No latch inferred for signal `\clock_div.\next_count' from process `\clock_div.$proc$source/clock_div.sv:0$51'.
No latch inferred for signal `\clock_8Hz.\flag' from process `\clock_8Hz.$proc$source/clock_8Hz.sv:0$45'.
No latch inferred for signal `\clock_8Hz.\next_count' from process `\clock_8Hz.$proc$source/clock_8Hz.sv:0$45'.
No latch inferred for signal `\top.\note' from process `\top.$proc$source/top.sv:0$29'.
No latch inferred for signal `\top.$bitselwrite$mask$source/top.sv:29$24' from process `\top.$proc$source/top.sv:0$29'.
No latch inferred for signal `\top.$bitselwrite$data$source/top.sv:29$25' from process `\top.$proc$source/top.sv:0$29'.
No latch inferred for signal `\top.$bitselwrite$sel$source/top.sv:29$26' from process `\top.$proc$source/top.sv:0$29'.

17.3.9. Executing PROC_DFF pass (convert process syncs to FFs).
Creating register for signal `\SB_DFFNES.\Q' using process `\SB_DFFNES.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:1414$445'.
  created $adff cell `$procdff$1194' with negative edge clock and positive level reset.
Creating register for signal `\SB_DFFNESS.\Q' using process `\SB_DFFNESS.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:1353$438'.
  created $dff cell `$procdff$1195' with negative edge clock.
Creating register for signal `\SB_DFFNER.\Q' using process `\SB_DFFNER.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:1273$434'.
  created $adff cell `$procdff$1196' with negative edge clock and positive level reset.
Creating register for signal `\SB_DFFNESR.\Q' using process `\SB_DFFNESR.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:1212$427'.
  created $dff cell `$procdff$1197' with negative edge clock.
Creating register for signal `\SB_DFFNS.\Q' using process `\SB_DFFNS.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:1138$424'.
  created $adff cell `$procdff$1198' with negative edge clock and positive level reset.
Creating register for signal `\SB_DFFNSS.\Q' using process `\SB_DFFNSS.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:1088$421'.
  created $dff cell `$procdff$1199' with negative edge clock.
Creating register for signal `\SB_DFFNR.\Q' using process `\SB_DFFNR.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:1017$418'.
  created $adff cell `$procdff$1200' with negative edge clock and positive level reset.
Creating register for signal `\SB_DFFNSR.\Q' using process `\SB_DFFNSR.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:967$415'.
  created $dff cell `$procdff$1201' with negative edge clock.
Creating register for signal `\SB_DFFNE.\Q' using process `\SB_DFFNE.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:922$413'.
  created $dff cell `$procdff$1202' with negative edge clock.
Creating register for signal `\SB_DFFN.\Q' using process `\SB_DFFN.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:882$411'.
  created $dff cell `$procdff$1203' with negative edge clock.
Creating register for signal `\SB_DFFES.\Q' using process `\SB_DFFES.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:803$407'.
  created $adff cell `$procdff$1204' with positive edge clock and positive level reset.
Creating register for signal `\SB_DFFESS.\Q' using process `\SB_DFFESS.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:742$400'.
  created $dff cell `$procdff$1205' with positive edge clock.
Creating register for signal `\SB_DFFER.\Q' using process `\SB_DFFER.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:662$396'.
  created $adff cell `$procdff$1206' with positive edge clock and positive level reset.
Creating register for signal `\SB_DFFESR.\Q' using process `\SB_DFFESR.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:601$389'.
  created $dff cell `$procdff$1207' with positive edge clock.
Creating register for signal `\SB_DFFS.\Q' using process `\SB_DFFS.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:527$386'.
  created $adff cell `$procdff$1208' with positive edge clock and positive level reset.
Creating register for signal `\SB_DFFSS.\Q' using process `\SB_DFFSS.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:477$383'.
  created $dff cell `$procdff$1209' with positive edge clock.
Creating register for signal `\SB_DFFR.\Q' using process `\SB_DFFR.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:406$380'.
  created $adff cell `$procdff$1210' with positive edge clock and positive level reset.
Creating register for signal `\SB_DFFSR.\Q' using process `\SB_DFFSR.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:356$377'.
  created $dff cell `$procdff$1211' with positive edge clock.
Creating register for signal `\SB_DFFE.\Q' using process `\SB_DFFE.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:311$375'.
  created $dff cell `$procdff$1212' with positive edge clock.
Creating register for signal `\SB_DFF.\Q' using process `\SB_DFF.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:271$373'.
  created $dff cell `$procdff$1213' with positive edge clock.
Creating register for signal `$paramod\uart_tx\DATA_WIDTH=s32'00000000000000000000000000001000.\input_axis_tready_reg' using process `$paramod\uart_tx\DATA_WIDTH=s32'00000000000000000000000000001000.$proc$ice40/uart/uart_tx.v:78$613'.
  created $dff cell `$procdff$1214' with positive edge clock.
Creating register for signal `$paramod\uart_tx\DATA_WIDTH=s32'00000000000000000000000000001000.\txd_reg' using process `$paramod\uart_tx\DATA_WIDTH=s32'00000000000000000000000000001000.$proc$ice40/uart/uart_tx.v:78$613'.
  created $dff cell `$procdff$1215' with positive edge clock.
Creating register for signal `$paramod\uart_tx\DATA_WIDTH=s32'00000000000000000000000000001000.\busy_reg' using process `$paramod\uart_tx\DATA_WIDTH=s32'00000000000000000000000000001000.$proc$ice40/uart/uart_tx.v:78$613'.
  created $dff cell `$procdff$1216' with positive edge clock.
Creating register for signal `$paramod\uart_tx\DATA_WIDTH=s32'00000000000000000000000000001000.\data_reg' using process `$paramod\uart_tx\DATA_WIDTH=s32'00000000000000000000000000001000.$proc$ice40/uart/uart_tx.v:78$613'.
  created $dff cell `$procdff$1217' with positive edge clock.
Creating register for signal `$paramod\uart_tx\DATA_WIDTH=s32'00000000000000000000000000001000.\prescale_reg' using process `$paramod\uart_tx\DATA_WIDTH=s32'00000000000000000000000000001000.$proc$ice40/uart/uart_tx.v:78$613'.
  created $dff cell `$procdff$1218' with positive edge clock.
Creating register for signal `$paramod\uart_tx\DATA_WIDTH=s32'00000000000000000000000000001000.\bit_cnt' using process `$paramod\uart_tx\DATA_WIDTH=s32'00000000000000000000000000001000.$proc$ice40/uart/uart_tx.v:78$613'.
  created $dff cell `$procdff$1219' with positive edge clock.
Creating register for signal `$paramod\uart_rx\DATA_WIDTH=s32'00000000000000000000000000001000.\busy_reg' using process `$paramod\uart_rx\DATA_WIDTH=s32'00000000000000000000000000001000.$proc$ice40/uart/uart_rx.v:86$585'.
  created $dff cell `$procdff$1220' with positive edge clock.
Creating register for signal `$paramod\uart_rx\DATA_WIDTH=s32'00000000000000000000000000001000.\data_reg' using process `$paramod\uart_rx\DATA_WIDTH=s32'00000000000000000000000000001000.$proc$ice40/uart/uart_rx.v:86$585'.
  created $dff cell `$procdff$1221' with positive edge clock.
Creating register for signal `$paramod\uart_rx\DATA_WIDTH=s32'00000000000000000000000000001000.\prescale_reg' using process `$paramod\uart_rx\DATA_WIDTH=s32'00000000000000000000000000001000.$proc$ice40/uart/uart_rx.v:86$585'.
  created $dff cell `$procdff$1222' with positive edge clock.
Creating register for signal `$paramod\uart_rx\DATA_WIDTH=s32'00000000000000000000000000001000.\bit_cnt' using process `$paramod\uart_rx\DATA_WIDTH=s32'00000000000000000000000000001000.$proc$ice40/uart/uart_rx.v:86$585'.
  created $dff cell `$procdff$1223' with positive edge clock.
Creating register for signal `$paramod\uart_rx\DATA_WIDTH=s32'00000000000000000000000000001000.\output_axis_tdata_reg' using process `$paramod\uart_rx\DATA_WIDTH=s32'00000000000000000000000000001000.$proc$ice40/uart/uart_rx.v:86$585'.
  created $dff cell `$procdff$1224' with positive edge clock.
Creating register for signal `$paramod\uart_rx\DATA_WIDTH=s32'00000000000000000000000000001000.\output_axis_tvalid_reg' using process `$paramod\uart_rx\DATA_WIDTH=s32'00000000000000000000000000001000.$proc$ice40/uart/uart_rx.v:86$585'.
  created $dff cell `$procdff$1225' with positive edge clock.
Creating register for signal `$paramod\uart_rx\DATA_WIDTH=s32'00000000000000000000000000001000.\rxd_reg' using process `$paramod\uart_rx\DATA_WIDTH=s32'00000000000000000000000000001000.$proc$ice40/uart/uart_rx.v:86$585'.
  created $dff cell `$procdff$1226' with positive edge clock.
Creating register for signal `$paramod\uart_rx\DATA_WIDTH=s32'00000000000000000000000000001000.\overrun_error_reg' using process `$paramod\uart_rx\DATA_WIDTH=s32'00000000000000000000000000001000.$proc$ice40/uart/uart_rx.v:86$585'.
  created $dff cell `$procdff$1227' with positive edge clock.
Creating register for signal `$paramod\uart_rx\DATA_WIDTH=s32'00000000000000000000000000001000.\frame_error_reg' using process `$paramod\uart_rx\DATA_WIDTH=s32'00000000000000000000000000001000.$proc$ice40/uart/uart_rx.v:86$585'.
  created $dff cell `$procdff$1228' with positive edge clock.
Creating register for signal `\sound_series_fsm.\count' using process `\sound_series_fsm.$proc$source/sound_series_fsm.sv:75$142'.
  created $adff cell `$procdff$1229' with positive edge clock and negative level reset.
Creating register for signal `\sound_series_fsm.\sound' using process `\sound_series_fsm.$proc$source/sound_series_fsm.sv:43$134'.
  created $adff cell `$procdff$1230' with positive edge clock and negative level reset.
Creating register for signal `\sequential_div.\D' using process `\sequential_div.$proc$source/sequential_div.sv:112$125'.
  created $adff cell `$procdff$1231' with positive edge clock and negative level reset.
Creating register for signal `\sequential_div.\Q' using process `\sequential_div.$proc$source/sequential_div.sv:112$125'.
  created $adff cell `$procdff$1232' with positive edge clock and negative level reset.
Creating register for signal `\sequential_div.\R' using process `\sequential_div.$proc$source/sequential_div.sv:112$125'.
  created $adff cell `$procdff$1233' with positive edge clock and negative level reset.
Creating register for signal `\sequential_div.\q_out' using process `\sequential_div.$proc$source/sequential_div.sv:77$118'.
  created $adff cell `$procdff$1234' with positive edge clock and negative level reset.
Creating register for signal `\sequential_div.\dividend' using process `\sequential_div.$proc$source/sequential_div.sv:77$118'.
  created $adff cell `$procdff$1235' with positive edge clock and negative level reset.
Creating register for signal `\sequential_div.\state' using process `\sequential_div.$proc$source/sequential_div.sv:48$114'.
  created $adff cell `$procdff$1236' with positive edge clock and negative level reset.
Creating register for signal `\sequential_div.\count_div' using process `\sequential_div.$proc$source/sequential_div.sv:14$104'.
  created $adff cell `$procdff$1237' with positive edge clock and negative level reset.
Creating register for signal `\pwm.\pwm_o' using process `\pwm.$proc$source/pwm.sv:10$97'.
  created $adff cell `$procdff$1238' with positive edge clock and negative level reset.
Creating register for signal `\pwm.\count' using process `\pwm.$proc$source/pwm.sv:10$97'.
  created $adff cell `$procdff$1239' with positive edge clock and negative level reset.
Creating register for signal `\oscillator.\count' using process `\oscillator.$proc$source/oscillator.sv:5$91'.
  created $adff cell `$procdff$1240' with positive edge clock and negative level reset.
Creating register for signal `\mode_fsm.\mode' using process `\mode_fsm.$proc$source/mode_fsm.sv:9$84'.
  created $adff cell `$procdff$1241' with positive edge clock and negative level reset.
Creating register for signal `\keypad_encoder.\last_sk' using process `\keypad_encoder.$proc$source/keypad_encoder.sv:55$80'.
  created $adff cell `$procdff$1242' with positive edge clock and negative level reset.
Creating register for signal `\keypad_encoder.\last_mk' using process `\keypad_encoder.$proc$source/keypad_encoder.sv:42$76'.
  created $adff cell `$procdff$1243' with positive edge clock and negative level reset.
Creating register for signal `\keypad_encoder.\q' using process `\keypad_encoder.$proc$source/keypad_encoder.sv:11$73'.
  created $adff cell `$procdff$1244' with positive edge clock and negative level reset.
Creating register for signal `\keypad_encoder.\sync_out' using process `\keypad_encoder.$proc$source/keypad_encoder.sv:11$73'.
  created $adff cell `$procdff$1245' with positive edge clock and negative level reset.
Creating register for signal `\clock_div.\count' using process `\clock_div.$proc$source/clock_div.sv:10$49'.
  created $adff cell `$procdff$1246' with positive edge clock and negative level reset.
Creating register for signal `\clock_8Hz.\count' using process `\clock_8Hz.$proc$source/clock_8Hz.sv:10$43'.
  created $adff cell `$procdff$1247' with positive edge clock and negative level reset.
Creating register for signal `\reset_on_start.\startup' using process `\reset_on_start.$proc$ice40/ice40hx8k.sv:131$16'.
  created $adff cell `$procdff$1248' with positive edge clock and positive level reset.
Creating register for signal `\ice40hx8k.\recv' using process `\ice40hx8k.$proc$ice40/ice40hx8k.sv:104$9'.
  created $adff cell `$procdff$1249' with positive edge clock and negative level reset.
Creating register for signal `\ice40hx8k.\xmit' using process `\ice40hx8k.$proc$ice40/ice40hx8k.sv:98$7'.
  created $adff cell `$procdff$1250' with positive edge clock and negative level reset.
Creating register for signal `\ice40hx8k.\ctr' using process `\ice40hx8k.$proc$ice40/ice40hx8k.sv:14$1'.
  created $dff cell `$procdff$1251' with positive edge clock.
Creating register for signal `\ice40hx8k.\hz100' using process `\ice40hx8k.$proc$ice40/ice40hx8k.sv:14$1'.
  created $dff cell `$procdff$1252' with positive edge clock.

17.3.10. Executing PROC_MEMWR pass (convert process memory writes to cells).

17.3.11. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Removing empty process `SB_DFFNES.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$448'.
Found and cleaned up 1 empty switch in `\SB_DFFNES.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:1414$445'.
Removing empty process `SB_DFFNES.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:1414$445'.
Removing empty process `SB_DFFNESS.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$444'.
Found and cleaned up 2 empty switches in `\SB_DFFNESS.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:1353$438'.
Removing empty process `SB_DFFNESS.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:1353$438'.
Removing empty process `SB_DFFNER.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$437'.
Found and cleaned up 1 empty switch in `\SB_DFFNER.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:1273$434'.
Removing empty process `SB_DFFNER.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:1273$434'.
Removing empty process `SB_DFFNESR.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$433'.
Found and cleaned up 2 empty switches in `\SB_DFFNESR.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:1212$427'.
Removing empty process `SB_DFFNESR.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:1212$427'.
Removing empty process `SB_DFFNS.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$426'.
Removing empty process `SB_DFFNS.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:1138$424'.
Removing empty process `SB_DFFNSS.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$423'.
Found and cleaned up 1 empty switch in `\SB_DFFNSS.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:1088$421'.
Removing empty process `SB_DFFNSS.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:1088$421'.
Removing empty process `SB_DFFNR.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$420'.
Removing empty process `SB_DFFNR.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:1017$418'.
Removing empty process `SB_DFFNSR.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$417'.
Found and cleaned up 1 empty switch in `\SB_DFFNSR.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:967$415'.
Removing empty process `SB_DFFNSR.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:967$415'.
Removing empty process `SB_DFFNE.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$414'.
Found and cleaned up 1 empty switch in `\SB_DFFNE.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:922$413'.
Removing empty process `SB_DFFNE.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:922$413'.
Removing empty process `SB_DFFN.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$412'.
Removing empty process `SB_DFFN.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:882$411'.
Removing empty process `SB_DFFES.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$410'.
Found and cleaned up 1 empty switch in `\SB_DFFES.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:803$407'.
Removing empty process `SB_DFFES.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:803$407'.
Removing empty process `SB_DFFESS.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$406'.
Found and cleaned up 2 empty switches in `\SB_DFFESS.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:742$400'.
Removing empty process `SB_DFFESS.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:742$400'.
Removing empty process `SB_DFFER.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$399'.
Found and cleaned up 1 empty switch in `\SB_DFFER.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:662$396'.
Removing empty process `SB_DFFER.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:662$396'.
Removing empty process `SB_DFFESR.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$395'.
Found and cleaned up 2 empty switches in `\SB_DFFESR.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:601$389'.
Removing empty process `SB_DFFESR.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:601$389'.
Removing empty process `SB_DFFS.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$388'.
Removing empty process `SB_DFFS.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:527$386'.
Removing empty process `SB_DFFSS.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$385'.
Found and cleaned up 1 empty switch in `\SB_DFFSS.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:477$383'.
Removing empty process `SB_DFFSS.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:477$383'.
Removing empty process `SB_DFFR.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$382'.
Removing empty process `SB_DFFR.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:406$380'.
Removing empty process `SB_DFFSR.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$379'.
Found and cleaned up 1 empty switch in `\SB_DFFSR.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:356$377'.
Removing empty process `SB_DFFSR.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:356$377'.
Removing empty process `SB_DFFE.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$376'.
Found and cleaned up 1 empty switch in `\SB_DFFE.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:311$375'.
Removing empty process `SB_DFFE.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:311$375'.
Removing empty process `SB_DFF.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$374'.
Removing empty process `SB_DFF.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:271$373'.
Removing empty process `$paramod\uart_tx\DATA_WIDTH=s32'00000000000000000000000000001000.$proc$ice40/uart/uart_tx.v:71$632'.
Removing empty process `$paramod\uart_tx\DATA_WIDTH=s32'00000000000000000000000000001000.$proc$ice40/uart/uart_tx.v:70$631'.
Removing empty process `$paramod\uart_tx\DATA_WIDTH=s32'00000000000000000000000000001000.$proc$ice40/uart/uart_tx.v:69$630'.
Removing empty process `$paramod\uart_tx\DATA_WIDTH=s32'00000000000000000000000000001000.$proc$ice40/uart/uart_tx.v:67$629'.
Removing empty process `$paramod\uart_tx\DATA_WIDTH=s32'00000000000000000000000000001000.$proc$ice40/uart/uart_tx.v:65$628'.
Removing empty process `$paramod\uart_tx\DATA_WIDTH=s32'00000000000000000000000000001000.$proc$ice40/uart/uart_tx.v:63$627'.
Found and cleaned up 6 empty switches in `$paramod\uart_tx\DATA_WIDTH=s32'00000000000000000000000000001000.$proc$ice40/uart/uart_tx.v:78$613'.
Removing empty process `$paramod\uart_tx\DATA_WIDTH=s32'00000000000000000000000000001000.$proc$ice40/uart/uart_tx.v:78$613'.
Removing empty process `$paramod\uart_rx\DATA_WIDTH=s32'00000000000000000000000000001000.$proc$ice40/uart/uart_rx.v:77$612'.
Removing empty process `$paramod\uart_rx\DATA_WIDTH=s32'00000000000000000000000000001000.$proc$ice40/uart/uart_rx.v:76$611'.
Removing empty process `$paramod\uart_rx\DATA_WIDTH=s32'00000000000000000000000000001000.$proc$ice40/uart/uart_rx.v:75$610'.
Removing empty process `$paramod\uart_rx\DATA_WIDTH=s32'00000000000000000000000000001000.$proc$ice40/uart/uart_rx.v:73$609'.
Removing empty process `$paramod\uart_rx\DATA_WIDTH=s32'00000000000000000000000000001000.$proc$ice40/uart/uart_rx.v:72$608'.
Removing empty process `$paramod\uart_rx\DATA_WIDTH=s32'00000000000000000000000000001000.$proc$ice40/uart/uart_rx.v:71$607'.
Removing empty process `$paramod\uart_rx\DATA_WIDTH=s32'00000000000000000000000000001000.$proc$ice40/uart/uart_rx.v:69$606'.
Removing empty process `$paramod\uart_rx\DATA_WIDTH=s32'00000000000000000000000000001000.$proc$ice40/uart/uart_rx.v:67$605'.
Removing empty process `$paramod\uart_rx\DATA_WIDTH=s32'00000000000000000000000000001000.$proc$ice40/uart/uart_rx.v:66$604'.
Found and cleaned up 10 empty switches in `$paramod\uart_rx\DATA_WIDTH=s32'00000000000000000000000000001000.$proc$ice40/uart/uart_rx.v:86$585'.
Removing empty process `$paramod\uart_rx\DATA_WIDTH=s32'00000000000000000000000000001000.$proc$ice40/uart/uart_rx.v:86$585'.
Found and cleaned up 1 empty switch in `\waveshaper.$proc$source/waveshaper.sv:0$152'.
Removing empty process `waveshaper.$proc$source/waveshaper.sv:0$152'.
Found and cleaned up 6 empty switches in `\sound_series_fsm.$proc$source/sound_series_fsm.sv:0$144'.
Removing empty process `sound_series_fsm.$proc$source/sound_series_fsm.sv:0$144'.
Removing empty process `sound_series_fsm.$proc$source/sound_series_fsm.sv:75$142'.
Removing empty process `sound_series_fsm.$proc$source/sound_series_fsm.sv:43$134'.
Found and cleaned up 3 empty switches in `\sound_series_fsm.$proc$source/sound_series_fsm.sv:0$127'.
Removing empty process `sound_series_fsm.$proc$source/sound_series_fsm.sv:0$127'.
Removing empty process `sequential_div.$proc$source/sequential_div.sv:112$125'.
Found and cleaned up 3 empty switches in `\sequential_div.$proc$source/sequential_div.sv:0$120'.
Removing empty process `sequential_div.$proc$source/sequential_div.sv:0$120'.
Removing empty process `sequential_div.$proc$source/sequential_div.sv:77$118'.
Found and cleaned up 1 empty switch in `\sequential_div.$proc$source/sequential_div.sv:0$117'.
Removing empty process `sequential_div.$proc$source/sequential_div.sv:0$117'.
Found and cleaned up 1 empty switch in `\sequential_div.$proc$source/sequential_div.sv:0$116'.
Removing empty process `sequential_div.$proc$source/sequential_div.sv:0$116'.
Removing empty process `sequential_div.$proc$source/sequential_div.sv:48$114'.
Found and cleaned up 4 empty switches in `\sequential_div.$proc$source/sequential_div.sv:0$109'.
Removing empty process `sequential_div.$proc$source/sequential_div.sv:0$109'.
Found and cleaned up 1 empty switch in `\sequential_div.$proc$source/sequential_div.sv:0$106'.
Removing empty process `sequential_div.$proc$source/sequential_div.sv:0$106'.
Removing empty process `sequential_div.$proc$source/sequential_div.sv:14$104'.
Found and cleaned up 3 empty switches in `\pwm.$proc$source/pwm.sv:0$99'.
Removing empty process `pwm.$proc$source/pwm.sv:0$99'.
Removing empty process `pwm.$proc$source/pwm.sv:10$97'.
Found and cleaned up 2 empty switches in `\oscillator.$proc$source/oscillator.sv:0$93'.
Removing empty process `oscillator.$proc$source/oscillator.sv:0$93'.
Removing empty process `oscillator.$proc$source/oscillator.sv:5$91'.
Found and cleaned up 1 empty switch in `\mode_fsm.$proc$source/mode_fsm.sv:0$86'.
Removing empty process `mode_fsm.$proc$source/mode_fsm.sv:0$86'.
Removing empty process `mode_fsm.$proc$source/mode_fsm.sv:9$84'.
Removing empty process `keypad_encoder.$proc$source/keypad_encoder.sv:55$80'.
Removing empty process `keypad_encoder.$proc$source/keypad_encoder.sv:42$76'.
Found and cleaned up 1 empty switch in `\keypad_encoder.$proc$source/keypad_encoder.sv:0$75'.
Removing empty process `keypad_encoder.$proc$source/keypad_encoder.sv:0$75'.
Removing empty process `keypad_encoder.$proc$source/keypad_encoder.sv:11$73'.
Found and cleaned up 1 empty switch in `\frequency_divider.$proc$source/frequency_divider.sv:0$71'.
Removing empty process `frequency_divider.$proc$source/frequency_divider.sv:0$71'.
Found and cleaned up 1 empty switch in `\frequency_divider.$proc$source/frequency_divider.sv:0$70'.
Removing empty process `frequency_divider.$proc$source/frequency_divider.sv:0$70'.
Found and cleaned up 1 empty switch in `\frequency_divider.$proc$source/frequency_divider.sv:0$69'.
Removing empty process `frequency_divider.$proc$source/frequency_divider.sv:0$69'.
Found and cleaned up 5 empty switches in `\frequency_divider.$proc$source/frequency_divider.sv:0$55'.
Removing empty process `frequency_divider.$proc$source/frequency_divider.sv:0$55'.
Found and cleaned up 2 empty switches in `\clock_div.$proc$source/clock_div.sv:0$51'.
Removing empty process `clock_div.$proc$source/clock_div.sv:0$51'.
Removing empty process `clock_div.$proc$source/clock_div.sv:10$49'.
Found and cleaned up 2 empty switches in `\clock_8Hz.$proc$source/clock_8Hz.sv:0$45'.
Removing empty process `clock_8Hz.$proc$source/clock_8Hz.sv:0$45'.
Removing empty process `clock_8Hz.$proc$source/clock_8Hz.sv:10$43'.
Removing empty process `top.$proc$source/top.sv:0$29'.
Removing empty process `reset_on_start.$proc$ice40/ice40hx8k.sv:129$23'.
Found and cleaned up 5 empty switches in `\reset_on_start.$proc$ice40/ice40hx8k.sv:131$16'.
Removing empty process `reset_on_start.$proc$ice40/ice40hx8k.sv:131$16'.
Removing empty process `ice40hx8k.$proc$ice40/ice40hx8k.sv:13$14'.
Removing empty process `ice40hx8k.$proc$ice40/ice40hx8k.sv:12$13'.
Removing empty process `ice40hx8k.$proc$ice40/ice40hx8k.sv:104$9'.
Removing empty process `ice40hx8k.$proc$ice40/ice40hx8k.sv:98$7'.
Found and cleaned up 1 empty switch in `\ice40hx8k.$proc$ice40/ice40hx8k.sv:14$1'.
Removing empty process `ice40hx8k.$proc$ice40/ice40hx8k.sv:14$1'.
Cleaned up 79 empty switches.

17.3.12. Executing OPT_EXPR pass (perform const folding).
Optimizing module $paramod\uart_tx\DATA_WIDTH=s32'00000000000000000000000000001000.
<suppressed ~4 debug messages>
Optimizing module $paramod\uart_rx\DATA_WIDTH=s32'00000000000000000000000000001000.
<suppressed ~9 debug messages>
Optimizing module uart.
Optimizing module waveshaper.
<suppressed ~1 debug messages>
Optimizing module sound_series_fsm.
<suppressed ~4 debug messages>
Optimizing module sequential_div.
<suppressed ~5 debug messages>
Optimizing module pwm.
<suppressed ~2 debug messages>
Optimizing module oscillator.
<suppressed ~2 debug messages>
Optimizing module mode_fsm.
<suppressed ~2 debug messages>
Optimizing module keypad_encoder.
<suppressed ~3 debug messages>
Optimizing module frequency_divider.
<suppressed ~3 debug messages>
Optimizing module clock_div.
<suppressed ~2 debug messages>
Optimizing module clock_8Hz.
<suppressed ~2 debug messages>
Optimizing module synth.
Optimizing module top.
Optimizing module reset_on_start.
<suppressed ~2 debug messages>
Optimizing module ice40hx8k.

17.4. Executing FLATTEN pass (flatten design).
Deleting now unused module $paramod\uart_tx\DATA_WIDTH=s32'00000000000000000000000000001000.
Deleting now unused module $paramod\uart_rx\DATA_WIDTH=s32'00000000000000000000000000001000.
Deleting now unused module uart.
Deleting now unused module waveshaper.
Deleting now unused module sound_series_fsm.
Deleting now unused module sequential_div.
Deleting now unused module pwm.
Deleting now unused module oscillator.
Deleting now unused module mode_fsm.
Deleting now unused module keypad_encoder.
Deleting now unused module frequency_divider.
Deleting now unused module clock_div.
Deleting now unused module clock_8Hz.
Deleting now unused module synth.
Deleting now unused module top.
Deleting now unused module reset_on_start.
<suppressed ~16 debug messages>

17.5. Executing TRIBUF pass.

17.6. Executing DEMINOUT pass (demote inout ports to input or output).

17.7. Executing OPT_EXPR pass (perform const folding).
Optimizing module ice40hx8k.
<suppressed ~77 debug messages>

17.8. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ice40hx8k..
Removed 107 unused cells and 531 unused wires.
<suppressed ~160 debug messages>

17.9. Executing CHECK pass (checking for obvious problems).
Checking module ice40hx8k...
Warning: Wire ice40hx8k.\ss7 [7] is used but has no driver.
Warning: Wire ice40hx8k.\ss7 [6] is used but has no driver.
Warning: Wire ice40hx8k.\ss7 [5] is used but has no driver.
Warning: Wire ice40hx8k.\ss7 [4] is used but has no driver.
Warning: Wire ice40hx8k.\ss7 [3] is used but has no driver.
Warning: Wire ice40hx8k.\ss7 [2] is used but has no driver.
Warning: Wire ice40hx8k.\ss7 [1] is used but has no driver.
Warning: Wire ice40hx8k.\ss7 [0] is used but has no driver.
Warning: Wire ice40hx8k.\ss6 [7] is used but has no driver.
Warning: Wire ice40hx8k.\ss6 [6] is used but has no driver.
Warning: Wire ice40hx8k.\ss6 [5] is used but has no driver.
Warning: Wire ice40hx8k.\ss6 [4] is used but has no driver.
Warning: Wire ice40hx8k.\ss6 [3] is used but has no driver.
Warning: Wire ice40hx8k.\ss6 [2] is used but has no driver.
Warning: Wire ice40hx8k.\ss6 [1] is used but has no driver.
Warning: Wire ice40hx8k.\ss6 [0] is used but has no driver.
Warning: Wire ice40hx8k.\ss5 [7] is used but has no driver.
Warning: Wire ice40hx8k.\ss5 [6] is used but has no driver.
Warning: Wire ice40hx8k.\ss5 [5] is used but has no driver.
Warning: Wire ice40hx8k.\ss5 [4] is used but has no driver.
Warning: Wire ice40hx8k.\ss5 [3] is used but has no driver.
Warning: Wire ice40hx8k.\ss5 [2] is used but has no driver.
Warning: Wire ice40hx8k.\ss5 [1] is used but has no driver.
Warning: Wire ice40hx8k.\ss5 [0] is used but has no driver.
Warning: Wire ice40hx8k.\ss4 [7] is used but has no driver.
Warning: Wire ice40hx8k.\ss4 [6] is used but has no driver.
Warning: Wire ice40hx8k.\ss4 [5] is used but has no driver.
Warning: Wire ice40hx8k.\ss4 [4] is used but has no driver.
Warning: Wire ice40hx8k.\ss4 [3] is used but has no driver.
Warning: Wire ice40hx8k.\ss4 [2] is used but has no driver.
Warning: Wire ice40hx8k.\ss4 [1] is used but has no driver.
Warning: Wire ice40hx8k.\ss4 [0] is used but has no driver.
Warning: Wire ice40hx8k.\ss3 [7] is used but has no driver.
Warning: Wire ice40hx8k.\ss3 [6] is used but has no driver.
Warning: Wire ice40hx8k.\ss3 [5] is used but has no driver.
Warning: Wire ice40hx8k.\ss3 [4] is used but has no driver.
Warning: Wire ice40hx8k.\ss3 [3] is used but has no driver.
Warning: Wire ice40hx8k.\ss3 [2] is used but has no driver.
Warning: Wire ice40hx8k.\ss3 [1] is used but has no driver.
Warning: Wire ice40hx8k.\ss3 [0] is used but has no driver.
Warning: Wire ice40hx8k.\ss2 [7] is used but has no driver.
Warning: Wire ice40hx8k.\ss2 [6] is used but has no driver.
Warning: Wire ice40hx8k.\ss2 [5] is used but has no driver.
Warning: Wire ice40hx8k.\ss2 [4] is used but has no driver.
Warning: Wire ice40hx8k.\ss2 [3] is used but has no driver.
Warning: Wire ice40hx8k.\ss2 [2] is used but has no driver.
Warning: Wire ice40hx8k.\ss2 [1] is used but has no driver.
Warning: Wire ice40hx8k.\ss2 [0] is used but has no driver.
Warning: Wire ice40hx8k.\ss1 [7] is used but has no driver.
Warning: Wire ice40hx8k.\ss1 [6] is used but has no driver.
Warning: Wire ice40hx8k.\ss1 [5] is used but has no driver.
Warning: Wire ice40hx8k.\ss1 [4] is used but has no driver.
Warning: Wire ice40hx8k.\ss1 [3] is used but has no driver.
Warning: Wire ice40hx8k.\ss1 [2] is used but has no driver.
Warning: Wire ice40hx8k.\ss1 [1] is used but has no driver.
Warning: Wire ice40hx8k.\ss1 [0] is used but has no driver.
Warning: Wire ice40hx8k.\ss0 [7] is used but has no driver.
Warning: Wire ice40hx8k.\ss0 [6] is used but has no driver.
Warning: Wire ice40hx8k.\ss0 [5] is used but has no driver.
Warning: Wire ice40hx8k.\ss0 [4] is used but has no driver.
Warning: Wire ice40hx8k.\ss0 [3] is used but has no driver.
Warning: Wire ice40hx8k.\ss0 [2] is used but has no driver.
Warning: Wire ice40hx8k.\ss0 [1] is used but has no driver.
Warning: Wire ice40hx8k.\ss0 [0] is used but has no driver.
Warning: Wire ice40hx8k.\red is used but has no driver.
Warning: Wire ice40hx8k.\left [6] is used but has no driver.
Warning: Wire ice40hx8k.\left [5] is used but has no driver.
Warning: Wire ice40hx8k.\green is used but has no driver.
Warning: Wire ice40hx8k.\blue is used but has no driver.
Warning: Wire ice40hx8k.\txclk is used but has no driver.
Warning: Wire ice40hx8k.\uart_inst.uart_tx_inst.input_axis_tdata [7] is used but has no driver.
Warning: Wire ice40hx8k.\uart_inst.uart_tx_inst.input_axis_tdata [6] is used but has no driver.
Warning: Wire ice40hx8k.\uart_inst.uart_tx_inst.input_axis_tdata [5] is used but has no driver.
Warning: Wire ice40hx8k.\uart_inst.uart_tx_inst.input_axis_tdata [4] is used but has no driver.
Warning: Wire ice40hx8k.\uart_inst.uart_tx_inst.input_axis_tdata [3] is used but has no driver.
Warning: Wire ice40hx8k.\uart_inst.uart_tx_inst.input_axis_tdata [2] is used but has no driver.
Warning: Wire ice40hx8k.\uart_inst.uart_tx_inst.input_axis_tdata [1] is used but has no driver.
Warning: Wire ice40hx8k.\uart_inst.uart_tx_inst.input_axis_tdata [0] is used but has no driver.
Found and reported 78 problems.

17.10. Executing OPT pass (performing simple optimizations).

17.10.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module ice40hx8k.

17.10.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ice40hx8k'.
<suppressed ~51 debug messages>
Removed a total of 17 cells.

17.10.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \ice40hx8k..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
    dead port 2/2 on $mux $flatten\top_inst.\U1.\SS_FSM.$procmux$936.
    dead port 2/2 on $mux $flatten\top_inst.\U1.\SS_FSM.$procmux$942.
    dead port 1/2 on $mux $flatten\top_inst.\U1.\SS_FSM.$procmux$969.
    dead port 1/2 on $mux $flatten\top_inst.\U1.\SS_FSM.$procmux$974.
    dead port 1/2 on $mux $flatten\top_inst.\U1.\clk8.$procmux$1160.
    dead port 1/2 on $mux $flatten\top_inst.\U1.\clk8.$procmux$1166.
    dead port 1/2 on $mux $flatten\top_inst.\U1.\clk_div.$procmux$1142.
    dead port 1/2 on $mux $flatten\top_inst.\U1.\clk_div.$procmux$1148.
    dead port 2/2 on $mux $flatten\top_inst.\U1.\frqdiv.$procmux$1104.
    dead port 1/2 on $mux $flatten\top_inst.\U1.\frqdiv.$procmux$1107.
    dead port 1/2 on $mux $flatten\top_inst.\U1.\frqdiv.$procmux$1109.
    dead port 1/2 on $mux $flatten\top_inst.\U1.\frqdiv.$procmux$1116.
    dead port 1/2 on $mux $flatten\top_inst.\U1.\frqdiv.$procmux$1118.
    dead port 2/2 on $mux $flatten\top_inst.\U1.\frqdiv.$procmux$1125.
    dead port 1/2 on $mux $flatten\top_inst.\U1.\frqdiv.$procmux$1127.
    dead port 1/2 on $mux $flatten\top_inst.\U1.\frqdiv.$procmux$1133.
    dead port 1/2 on $mux $flatten\top_inst.\U1.\osc.$procmux$1069.
    dead port 1/2 on $mux $flatten\top_inst.\U1.\pwm.$procmux$1051.
    dead port 1/2 on $mux $flatten\top_inst.\U1.\pwm.$procmux$1057.
    dead port 2/2 on $mux $flatten\top_inst.\U1.\seq_div.$procmux$1023.
    dead port 2/2 on $mux $flatten\top_inst.\U1.\seq_div.$procmux$1029.
    dead port 2/2 on $mux $flatten\top_inst.\U1.\seq_div.$procmux$1037.
    dead port 2/2 on $mux $flatten\top_inst.\U1.\seq_div.$procmux$991.
    dead port 2/2 on $mux $flatten\top_inst.\U1.\seq_div.$procmux$997.
    dead port 2/2 on $mux $flatten\top_inst.\U1.\SS_FSM.$procmux$934.
Removed 25 multiplexer ports.
<suppressed ~28 debug messages>

17.10.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \ice40hx8k.
Performed a total of 0 changes.

17.10.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ice40hx8k'.
<suppressed ~3 debug messages>
Removed a total of 1 cells.

17.10.6. Executing OPT_DFF pass (perform DFF optimizations).

17.10.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ice40hx8k..
Removed 0 unused cells and 52 unused wires.
<suppressed ~10 debug messages>

17.10.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module ice40hx8k.

17.10.9. Rerunning OPT passes. (Maybe there is more to do..)

17.10.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \ice40hx8k..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~28 debug messages>

17.10.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \ice40hx8k.
    New ctrl vector for $pmux cell $flatten\top_inst.\U1.\seq_div.$procmux$1039: { \top_inst.U1.seq_div.load \top_inst.U1.seq_div.div $auto$opt_reduce.cc:134:opt_pmux$1254 }
  Optimizing cells in module \ice40hx8k.
Performed a total of 1 changes.

17.10.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ice40hx8k'.
Removed a total of 0 cells.

17.10.13. Executing OPT_DFF pass (perform DFF optimizations).

17.10.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ice40hx8k..

17.10.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module ice40hx8k.

17.10.16. Rerunning OPT passes. (Maybe there is more to do..)

17.10.17. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \ice40hx8k..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~28 debug messages>

17.10.18. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \ice40hx8k.
Performed a total of 0 changes.

17.10.19. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ice40hx8k'.
Removed a total of 0 cells.

17.10.20. Executing OPT_DFF pass (perform DFF optimizations).

17.10.21. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ice40hx8k..

17.10.22. Executing OPT_EXPR pass (perform const folding).
Optimizing module ice40hx8k.

17.10.23. Finished OPT passes. (There is nothing left to do.)

17.11. Executing FSM pass (extract and optimize FSM).

17.11.1. Executing FSM_DETECT pass (finding FSMs in design).
Not marking ice40hx8k.top_inst.U1.SS_FSM.sound as FSM state register:
    Circuit seems to be self-resetting.
Not marking ice40hx8k.top_inst.U1.mode_FSM.mode as FSM state register:
    Circuit seems to be self-resetting.
Not marking ice40hx8k.top_inst.U1.seq_div.state as FSM state register:
    Circuit seems to be self-resetting.

17.11.2. Executing FSM_EXTRACT pass (extracting FSM from design).

17.11.3. Executing FSM_OPT pass (simple optimizations of FSMs).

17.11.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ice40hx8k..

17.11.5. Executing FSM_OPT pass (simple optimizations of FSMs).

17.11.6. Executing FSM_RECODE pass (re-assigning FSM state encoding).

17.11.7. Executing FSM_INFO pass (dumping all available information on FSM cells).

17.11.8. Executing FSM_MAP pass (mapping FSMs to basic logic).

17.12. Executing OPT pass (performing simple optimizations).

17.12.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module ice40hx8k.

17.12.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ice40hx8k'.
Removed a total of 0 cells.

17.12.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \ice40hx8k..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~28 debug messages>

17.12.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \ice40hx8k.
Performed a total of 0 changes.

17.12.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ice40hx8k'.
Removed a total of 0 cells.

17.12.6. Executing OPT_DFF pass (perform DFF optimizations).
Adding EN signal on $flatten\uart_inst.\uart_tx_inst.$procdff$1219 ($dff) from module ice40hx8k (D = $flatten\uart_inst.\uart_tx_inst.$procmux$750_Y, Q = \uart_inst.uart_tx_inst.bit_cnt).
Adding EN signal on $flatten\uart_inst.\uart_tx_inst.$procdff$1218 ($dff) from module ice40hx8k (D = $flatten\uart_inst.\uart_tx_inst.$0\prescale_reg[18:0], Q = \uart_inst.uart_tx_inst.prescale_reg).
Adding EN signal on $flatten\uart_inst.\uart_tx_inst.$procdff$1217 ($dff) from module ice40hx8k (D = $flatten\uart_inst.\uart_tx_inst.$procmux$691_Y, Q = \uart_inst.uart_tx_inst.data_reg).
Adding EN signal on $flatten\uart_inst.\uart_tx_inst.$procdff$1215 ($dff) from module ice40hx8k (D = $flatten\uart_inst.\uart_tx_inst.$procmux$723_Y, Q = \uart_inst.uart_tx_inst.txd_reg).
Adding SRST signal on $flatten\uart_inst.\uart_tx_inst.$procdff$1214 ($dff) from module ice40hx8k (D = $flatten\uart_inst.\uart_tx_inst.$procmux$761_Y, Q = \uart_inst.uart_tx_inst.input_axis_tready_reg, rval = 1'0).
Adding EN signal on $auto$ff.cc:266:slice$1289 ($sdff) from module ice40hx8k (D = $flatten\uart_inst.\uart_tx_inst.$procmux$759_Y, Q = \uart_inst.uart_tx_inst.input_axis_tready_reg).
Adding EN signal on $flatten\top_inst.\U1.\seq_div.$procdff$1237 ($adff) from module ice40hx8k (D = $flatten\top_inst.\U1.\seq_div.$add$source/sequential_div.sv:23$108_Y [2:0], Q = \top_inst.U1.seq_div.count_div).
Adding EN signal on $flatten\top_inst.\U1.\seq_div.$procdff$1236 ($adff) from module ice40hx8k (D = \top_inst.U1.seq_div.next_state, Q = \top_inst.U1.seq_div.state).
Adding EN signal on $flatten\top_inst.\U1.\seq_div.$procdff$1235 ($adff) from module ice40hx8k (D = \top_inst.U1.osc.count, Q = \top_inst.U1.seq_div.dividend).
Adding EN signal on $flatten\top_inst.\U1.\seq_div.$procdff$1234 ($adff) from module ice40hx8k (D = \top_inst.U1.seq_div.Q, Q = \top_inst.U1.seq_div.q_out).
Adding EN signal on $flatten\top_inst.\U1.\seq_div.$procdff$1233 ($adff) from module ice40hx8k (D = \top_inst.U1.seq_div.next_r, Q = \top_inst.U1.seq_div.R).
Adding EN signal on $flatten\top_inst.\U1.\seq_div.$procdff$1232 ($adff) from module ice40hx8k (D = \top_inst.U1.seq_div.next_q, Q = \top_inst.U1.seq_div.Q).
Adding EN signal on $flatten\top_inst.\U1.\seq_div.$procdff$1231 ($adff) from module ice40hx8k (D = \top_inst.U1.osc.divider, Q = \top_inst.U1.seq_div.D).
Adding EN signal on $flatten\top_inst.\U1.\SS_FSM.$procdff$1229 ($adff) from module ice40hx8k (D = \top_inst.U1.SS_FSM.next_count, Q = \top_inst.U1.SS_FSM.count).

17.12.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ice40hx8k..
Removed 9 unused cells and 9 unused wires.
<suppressed ~14 debug messages>

17.12.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module ice40hx8k.
<suppressed ~6 debug messages>

17.12.9. Rerunning OPT passes. (Maybe there is more to do..)

17.12.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \ice40hx8k..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~24 debug messages>

17.12.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \ice40hx8k.
Performed a total of 0 changes.

17.12.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ice40hx8k'.
<suppressed ~21 debug messages>
Removed a total of 7 cells.

17.12.13. Executing OPT_DFF pass (perform DFF optimizations).

17.12.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ice40hx8k..
Removed 0 unused cells and 7 unused wires.
<suppressed ~1 debug messages>

17.12.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module ice40hx8k.

17.12.16. Rerunning OPT passes. (Maybe there is more to do..)

17.12.17. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \ice40hx8k..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~24 debug messages>

17.12.18. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \ice40hx8k.
Performed a total of 0 changes.

17.12.19. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ice40hx8k'.
Removed a total of 0 cells.

17.12.20. Executing OPT_DFF pass (perform DFF optimizations).

17.12.21. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ice40hx8k..

17.12.22. Executing OPT_EXPR pass (perform const folding).
Optimizing module ice40hx8k.

17.12.23. Finished OPT passes. (There is nothing left to do.)

17.13. Executing WREDUCE pass (reducing word size of cells).
Removed top 28 address bits (of 32) from memory init port ice40hx8k.$flatten\top_inst.\U1.\frqdiv.$auto$mem.cc:319:emit$636 ($flatten\top_inst.\U1.\frqdiv.$auto$proc_rom.cc:150:do_switch$634).
Removed top 31 bits (of 32) from port B of cell ice40hx8k.$flatten\uart_inst.\uart_tx_inst.$sub$ice40/uart/uart_tx.v:88$615 ($sub).
Removed top 13 bits (of 32) from port Y of cell ice40hx8k.$flatten\uart_inst.\uart_tx_inst.$sub$ice40/uart/uart_tx.v:88$615 ($sub).
Removed top 31 bits (of 32) from port B of cell ice40hx8k.$flatten\uart_inst.\uart_tx_inst.$gt$ice40/uart/uart_tx.v:102$620 ($gt).
Removed top 31 bits (of 32) from port B of cell ice40hx8k.$flatten\uart_inst.\uart_tx_inst.$sub$ice40/uart/uart_tx.v:103$621 ($sub).
Removed top 28 bits (of 32) from port Y of cell ice40hx8k.$flatten\uart_inst.\uart_tx_inst.$sub$ice40/uart/uart_tx.v:103$621 ($sub).
Removed top 3 bits (of 4) from port B of cell ice40hx8k.$flatten\uart_inst.\uart_tx_inst.$eq$ice40/uart/uart_tx.v:106$624 ($eq).
Removed top 31 bits (of 32) from port B of cell ice40hx8k.$flatten\uart_inst.\uart_tx_inst.$gt$ice40/uart/uart_tx.v:86$614 ($gt).
Removed top 1 bits (of 2) from port B of cell ice40hx8k.$auto$opt_dff.cc:195:make_patterns_logic$1310 ($ne).
Removed top 1 bits (of 2) from mux cell ice40hx8k.$flatten\top_inst.\U1.\SS_FSM.$ternary$source/sound_series_fsm.sv:20$128 ($mux).
Removed top 1 bits (of 10) from port A of cell ice40hx8k.$flatten\top_inst.\U1.\waveshaper.$sub$source/waveshaper.sv:12$151 ($sub).
Removed top 1 bits (of 10) from port B of cell ice40hx8k.$flatten\top_inst.\U1.\waveshaper.$sub$source/waveshaper.sv:12$151 ($sub).
Removed top 2 bits (of 10) from port Y of cell ice40hx8k.$flatten\top_inst.\U1.\waveshaper.$sub$source/waveshaper.sv:12$151 ($sub).
Removed top 1 bits (of 9) from port A of cell ice40hx8k.$flatten\top_inst.\U1.\waveshaper.$sub$source/waveshaper.sv:12$151 ($sub).
Removed top 1 bits (of 9) from port B of cell ice40hx8k.$flatten\top_inst.\U1.\waveshaper.$sub$source/waveshaper.sv:12$151 ($sub).
Removed top 31 bits (of 32) from port B of cell ice40hx8k.$flatten\top_inst.\U1.\SS_FSM.$sub$source/sound_series_fsm.sv:105$150 ($sub).
Removed top 23 bits (of 32) from port Y of cell ice40hx8k.$flatten\top_inst.\U1.\SS_FSM.$sub$source/sound_series_fsm.sv:105$150 ($sub).
Removed top 28 bits (of 32) from port B of cell ice40hx8k.$flatten\top_inst.\U1.\SS_FSM.$ge$source/sound_series_fsm.sv:101$148 ($ge).
Removed top 8 bits (of 9) from port B of cell ice40hx8k.$flatten\top_inst.\U1.\SS_FSM.$eq$source/sound_series_fsm.sv:101$147 ($eq).
Removed top 29 bits (of 32) from port B of cell ice40hx8k.$flatten\top_inst.\U1.\SS_FSM.$sub$source/sound_series_fsm.sv:0$139 ($sub).
Removed top 31 bits (of 32) from port B of cell ice40hx8k.$flatten\top_inst.\U1.\SS_FSM.$add$source/sound_series_fsm.sv:0$138 ($add).
Removed top 21 bits (of 32) from port A of cell ice40hx8k.$flatten\top_inst.\U1.\SS_FSM.$sub$source/sound_series_fsm.sv:70$137 ($sub).
Removed top 31 bits (of 32) from port B of cell ice40hx8k.$flatten\top_inst.\U1.\SS_FSM.$sub$source/sound_series_fsm.sv:70$137 ($sub).
Removed top 20 bits (of 32) from port Y of cell ice40hx8k.$flatten\top_inst.\U1.\SS_FSM.$sub$source/sound_series_fsm.sv:70$137 ($sub).
Removed top 1 bits (of 2) from port B of cell ice40hx8k.$flatten\top_inst.\U1.\SS_FSM.$eq$source/sound_series_fsm.sv:27$132 ($eq).
Removed top 1 bits (of 2) from mux cell ice40hx8k.$flatten\top_inst.\U1.\SS_FSM.$ternary$source/sound_series_fsm.sv:23$131 ($mux).
Removed top 1 bits (of 2) from mux cell ice40hx8k.$flatten\top_inst.\U1.\SS_FSM.$ternary$source/sound_series_fsm.sv:22$130 ($mux).
Removed top 1 bits (of 2) from mux cell ice40hx8k.$flatten\top_inst.\U1.\SS_FSM.$ternary$source/sound_series_fsm.sv:21$129 ($mux).
Removed top 31 bits (of 32) from port B of cell ice40hx8k.$flatten\top_inst.\U1.\osc.$add$source/oscillator.sv:17$96 ($add).
Removed top 16 bits (of 32) from port Y of cell ice40hx8k.$flatten\top_inst.\U1.\osc.$add$source/oscillator.sv:17$96 ($add).
Removed top 31 bits (of 32) from port B of cell ice40hx8k.$flatten\top_inst.\U1.\clk_div.$add$source/clock_div.sv:28$54 ($add).
Removed top 24 bits (of 32) from port Y of cell ice40hx8k.$flatten\top_inst.\U1.\clk_div.$add$source/clock_div.sv:28$54 ($add).
Removed top 7 bits (of 8) from mux cell ice40hx8k.$flatten\top_inst.\U1.\seq_div.$procmux$989 ($mux).
Removed top 1 bits (of 17) from port B of cell ice40hx8k.$flatten\top_inst.\U1.\seq_div.$ge$source/sequential_div.sv:101$121 ($ge).
Removed top 1 bits (of 2) from port B of cell ice40hx8k.$flatten\top_inst.\U1.\seq_div.$eq$source/sequential_div.sv:45$113 ($eq).
Removed top 31 bits (of 32) from port B of cell ice40hx8k.$flatten\top_inst.\U1.\seq_div.$add$source/sequential_div.sv:23$108 ($add).
Removed top 29 bits (of 32) from port Y of cell ice40hx8k.$flatten\top_inst.\U1.\seq_div.$add$source/sequential_div.sv:23$108 ($add).
Removed top 1 bits (of 2) from port B of cell ice40hx8k.$flatten\top_inst.\U1.\mode_FSM.$procmux$1077_CMP0 ($eq).
Removed top 1 bits (of 2) from mux cell ice40hx8k.$flatten\top_inst.\U1.\mode_FSM.$ternary$source/mode_fsm.sv:21$89 ($mux).
Removed top 1 bits (of 2) from mux cell ice40hx8k.$flatten\top_inst.\U1.\mode_FSM.$ternary$source/mode_fsm.sv:19$87 ($mux).
Removed top 24 bits (of 32) from mux cell ice40hx8k.$flatten\top_inst.\U1.\waveshaper.$ternary$source/waveshaper.sv:18$156 ($mux).
Removed top 24 bits (of 32) from port B of cell ice40hx8k.$flatten\top_inst.\U1.\waveshaper.$ge$source/waveshaper.sv:17$153 ($ge).
Removed top 31 bits (of 32) from port B of cell ice40hx8k.$flatten\top_inst.\U1.\pwm.$add$source/pwm.sv:26$102 ($add).
Removed top 24 bits (of 32) from port Y of cell ice40hx8k.$flatten\top_inst.\U1.\pwm.$add$source/pwm.sv:26$102 ($add).
Removed top 24 bits (of 32) from port B of cell ice40hx8k.$flatten\top_inst.\U1.\pwm.$ge$source/pwm.sv:22$101 ($ge).
Removed top 31 bits (of 32) from port B of cell ice40hx8k.$flatten\top_inst.\U1.\clk8.$add$source/clock_8Hz.sv:27$48 ($add).
Removed top 11 bits (of 32) from port Y of cell ice40hx8k.$flatten\top_inst.\U1.\clk8.$add$source/clock_8Hz.sv:27$48 ($add).
Removed top 27 bits (of 32) from port A of cell ice40hx8k.$flatten\top_inst.$neg$source/top.sv:0$34 ($neg).
Converting cell ice40hx8k.$flatten\top_inst.$neg$source/top.sv:0$34 ($neg) from signed to unsigned.
Removed top 1 bits (of 5) from port A of cell ice40hx8k.$flatten\top_inst.$neg$source/top.sv:0$34 ($neg).
Removed top 23 bits (of 32) from wire ice40hx8k.$flatten\top_inst.\U1.\SS_FSM.$sub$source/sound_series_fsm.sv:105$150_Y.
Removed top 1 bits (of 2) from wire ice40hx8k.$flatten\top_inst.\U1.\SS_FSM.$ternary$source/sound_series_fsm.sv:20$128_Y.
Removed top 1 bits (of 2) from wire ice40hx8k.$flatten\top_inst.\U1.\SS_FSM.$ternary$source/sound_series_fsm.sv:21$129_Y.
Removed top 1 bits (of 2) from wire ice40hx8k.$flatten\top_inst.\U1.\SS_FSM.$ternary$source/sound_series_fsm.sv:22$130_Y.
Removed top 1 bits (of 2) from wire ice40hx8k.$flatten\top_inst.\U1.\SS_FSM.$ternary$source/sound_series_fsm.sv:23$131_Y.
Removed top 11 bits (of 32) from wire ice40hx8k.$flatten\top_inst.\U1.\clk8.$add$source/clock_8Hz.sv:27$48_Y.
Removed top 24 bits (of 32) from wire ice40hx8k.$flatten\top_inst.\U1.\clk_div.$add$source/clock_div.sv:28$54_Y.
Removed top 16 bits (of 32) from wire ice40hx8k.$flatten\top_inst.\U1.\osc.$add$source/oscillator.sv:17$96_Y.
Removed top 29 bits (of 32) from wire ice40hx8k.$flatten\top_inst.\U1.\seq_div.$add$source/sequential_div.sv:23$108_Y.
Removed top 28 bits (of 32) from wire ice40hx8k.$flatten\uart_inst.\uart_tx_inst.$sub$ice40/uart/uart_tx.v:103$621_Y.
Removed top 13 bits (of 32) from wire ice40hx8k.$flatten\uart_inst.\uart_tx_inst.$sub$ice40/uart/uart_tx.v:88$615_Y.

17.14. Executing PEEPOPT pass (run peephole optimizers).

17.15. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ice40hx8k..
Removed 0 unused cells and 11 unused wires.
<suppressed ~1 debug messages>

17.16. Executing SHARE pass (SAT-based resource sharing).

17.17. Executing TECHMAP pass (map to technology primitives).

17.17.1. Executing Verilog-2005 frontend: /home/shay/a/ece270/bin/../share/yosys/cmp2lut.v
Parsing Verilog input from `/home/shay/a/ece270/bin/../share/yosys/cmp2lut.v' to AST representation.
Generating RTLIL representation for module `\_90_lut_cmp_'.
Successfully finished Verilog frontend.

17.17.2. Continuing TECHMAP pass.
Using template $paramod$106e7676feb63f00b8f79ebab3ff16b0f4c109cb\_90_lut_cmp_ for cells of type $gt.
No more expansions possible.
<suppressed ~222 debug messages>

17.18. Executing OPT_EXPR pass (perform const folding).
Optimizing module ice40hx8k.

17.19. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ice40hx8k..
Removed 0 unused cells and 3 unused wires.
<suppressed ~1 debug messages>

17.20. Executing ALUMACC pass (create $alu and $macc cells).
Extracting $alu and $macc cells in module ice40hx8k:
  creating $macc model for $flatten\top_inst.$neg$source/top.sv:0$34 ($neg).
  creating $macc model for $flatten\top_inst.\U1.\SS_FSM.$add$source/sound_series_fsm.sv:0$138 ($add).
  creating $macc model for $flatten\top_inst.\U1.\SS_FSM.$sub$source/sound_series_fsm.sv:0$139 ($sub).
  creating $macc model for $flatten\top_inst.\U1.\SS_FSM.$sub$source/sound_series_fsm.sv:105$150 ($sub).
  creating $macc model for $flatten\top_inst.\U1.\SS_FSM.$sub$source/sound_series_fsm.sv:70$137 ($sub).
  creating $macc model for $flatten\top_inst.\U1.\clk8.$add$source/clock_8Hz.sv:27$48 ($add).
  creating $macc model for $flatten\top_inst.\U1.\clk_div.$add$source/clock_div.sv:28$54 ($add).
  creating $macc model for $flatten\top_inst.\U1.\osc.$add$source/oscillator.sv:17$96 ($add).
  creating $macc model for $flatten\top_inst.\U1.\pwm.$add$source/pwm.sv:26$102 ($add).
  creating $macc model for $flatten\top_inst.\U1.\seq_div.$add$source/sequential_div.sv:23$108 ($add).
  creating $macc model for $flatten\top_inst.\U1.\seq_div.$sub$source/sequential_div.sv:102$123 ($sub).
  creating $macc model for $flatten\top_inst.\U1.\waveshaper.$sub$source/waveshaper.sv:12$151 ($sub).
  creating $macc model for $flatten\uart_inst.\uart_tx_inst.$sub$ice40/uart/uart_tx.v:103$621 ($sub).
  creating $macc model for $flatten\uart_inst.\uart_tx_inst.$sub$ice40/uart/uart_tx.v:88$615 ($sub).
  merging $macc model for $flatten\top_inst.\U1.\SS_FSM.$add$source/sound_series_fsm.sv:0$138 into $flatten\top_inst.\U1.\SS_FSM.$sub$source/sound_series_fsm.sv:0$139.
  creating $alu model for $macc $flatten\uart_inst.\uart_tx_inst.$sub$ice40/uart/uart_tx.v:103$621.
  creating $alu model for $macc $flatten\top_inst.\U1.\waveshaper.$sub$source/waveshaper.sv:12$151.
  creating $alu model for $macc $flatten\top_inst.\U1.\seq_div.$sub$source/sequential_div.sv:102$123.
  creating $alu model for $macc $flatten\top_inst.\U1.\seq_div.$add$source/sequential_div.sv:23$108.
  creating $alu model for $macc $flatten\top_inst.\U1.\pwm.$add$source/pwm.sv:26$102.
  creating $alu model for $macc $flatten\top_inst.\U1.\osc.$add$source/oscillator.sv:17$96.
  creating $alu model for $macc $flatten\top_inst.\U1.\clk_div.$add$source/clock_div.sv:28$54.
  creating $alu model for $macc $flatten\top_inst.\U1.\clk8.$add$source/clock_8Hz.sv:27$48.
  creating $alu model for $macc $flatten\top_inst.\U1.\SS_FSM.$sub$source/sound_series_fsm.sv:70$137.
  creating $alu model for $macc $flatten\top_inst.\U1.\SS_FSM.$sub$source/sound_series_fsm.sv:105$150.
  creating $alu model for $macc $flatten\uart_inst.\uart_tx_inst.$sub$ice40/uart/uart_tx.v:88$615.
  creating $alu model for $macc $flatten\top_inst.$neg$source/top.sv:0$34.
  creating $macc cell for $flatten\top_inst.\U1.\SS_FSM.$sub$source/sound_series_fsm.sv:0$139: $auto$alumacc.cc:365:replace_macc$1325
  creating $alu model for $flatten\top_inst.\U1.\SS_FSM.$ge$source/sound_series_fsm.sv:101$148 ($ge): new $alu
  creating $alu model for $flatten\top_inst.\U1.\osc.$ge$source/oscillator.sv:14$95 ($ge): new $alu
  creating $alu model for $flatten\top_inst.\U1.\pwm.$ge$source/pwm.sv:22$101 ($ge): new $alu
  creating $alu model for $flatten\top_inst.\U1.\pwm.$lt$source/pwm.sv:29$103 ($lt): new $alu
  creating $alu model for $flatten\top_inst.\U1.\seq_div.$ge$source/sequential_div.sv:101$121 ($ge): new $alu
  creating $alu model for $flatten\top_inst.\U1.\waveshaper.$ge$source/waveshaper.sv:17$153 ($ge): new $alu
  creating $alu model for $flatten\uart_inst.\uart_tx_inst.$gt$ice40/uart/uart_tx.v:86$614 ($gt): new $alu
  creating $alu cell for $flatten\uart_inst.\uart_tx_inst.$gt$ice40/uart/uart_tx.v:86$614: $auto$alumacc.cc:485:replace_alu$1333
  creating $alu cell for $flatten\top_inst.\U1.\waveshaper.$ge$source/waveshaper.sv:17$153: $auto$alumacc.cc:485:replace_alu$1338
  creating $alu cell for $flatten\top_inst.\U1.\seq_div.$ge$source/sequential_div.sv:101$121: $auto$alumacc.cc:485:replace_alu$1351
  creating $alu cell for $flatten\top_inst.\U1.\pwm.$lt$source/pwm.sv:29$103: $auto$alumacc.cc:485:replace_alu$1360
  creating $alu cell for $flatten\top_inst.\U1.\pwm.$ge$source/pwm.sv:22$101: $auto$alumacc.cc:485:replace_alu$1371
  creating $alu cell for $flatten\top_inst.\U1.\osc.$ge$source/oscillator.sv:14$95: $auto$alumacc.cc:485:replace_alu$1384
  creating $alu cell for $flatten\top_inst.\U1.\SS_FSM.$ge$source/sound_series_fsm.sv:101$148: $auto$alumacc.cc:485:replace_alu$1393
  creating $alu cell for $flatten\top_inst.$neg$source/top.sv:0$34: $auto$alumacc.cc:485:replace_alu$1402
  creating $alu cell for $flatten\uart_inst.\uart_tx_inst.$sub$ice40/uart/uart_tx.v:88$615: $auto$alumacc.cc:485:replace_alu$1405
  creating $alu cell for $flatten\top_inst.\U1.\SS_FSM.$sub$source/sound_series_fsm.sv:105$150: $auto$alumacc.cc:485:replace_alu$1408
  creating $alu cell for $flatten\top_inst.\U1.\SS_FSM.$sub$source/sound_series_fsm.sv:70$137: $auto$alumacc.cc:485:replace_alu$1411
  creating $alu cell for $flatten\top_inst.\U1.\clk8.$add$source/clock_8Hz.sv:27$48: $auto$alumacc.cc:485:replace_alu$1414
  creating $alu cell for $flatten\top_inst.\U1.\clk_div.$add$source/clock_div.sv:28$54: $auto$alumacc.cc:485:replace_alu$1417
  creating $alu cell for $flatten\top_inst.\U1.\osc.$add$source/oscillator.sv:17$96: $auto$alumacc.cc:485:replace_alu$1420
  creating $alu cell for $flatten\top_inst.\U1.\pwm.$add$source/pwm.sv:26$102: $auto$alumacc.cc:485:replace_alu$1423
  creating $alu cell for $flatten\top_inst.\U1.\seq_div.$add$source/sequential_div.sv:23$108: $auto$alumacc.cc:485:replace_alu$1426
  creating $alu cell for $flatten\top_inst.\U1.\seq_div.$sub$source/sequential_div.sv:102$123: $auto$alumacc.cc:485:replace_alu$1429
  creating $alu cell for $flatten\top_inst.\U1.\waveshaper.$sub$source/waveshaper.sv:12$151: $auto$alumacc.cc:485:replace_alu$1432
  creating $alu cell for $flatten\uart_inst.\uart_tx_inst.$sub$ice40/uart/uart_tx.v:103$621: $auto$alumacc.cc:485:replace_alu$1435
  created 19 $alu and 1 $macc cells.

17.21. Executing OPT pass (performing simple optimizations).

17.21.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module ice40hx8k.
<suppressed ~4 debug messages>

17.21.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ice40hx8k'.
Removed a total of 0 cells.

17.21.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \ice40hx8k..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~24 debug messages>

17.21.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \ice40hx8k.
Performed a total of 0 changes.

17.21.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ice40hx8k'.
<suppressed ~6 debug messages>
Removed a total of 2 cells.

17.21.6. Executing OPT_DFF pass (perform DFF optimizations).

17.21.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ice40hx8k..
Removed 2 unused cells and 12 unused wires.
<suppressed ~3 debug messages>

17.21.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module ice40hx8k.

17.21.9. Rerunning OPT passes. (Maybe there is more to do..)

17.21.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \ice40hx8k..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~24 debug messages>

17.21.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \ice40hx8k.
Performed a total of 0 changes.

17.21.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ice40hx8k'.
Removed a total of 0 cells.

17.21.13. Executing OPT_DFF pass (perform DFF optimizations).

17.21.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ice40hx8k..

17.21.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module ice40hx8k.

17.21.16. Finished OPT passes. (There is nothing left to do.)

17.22. Executing MEMORY pass.

17.22.1. Executing OPT_MEM pass (optimize memories).
Performed a total of 0 transformations.

17.22.2. Executing OPT_MEM_PRIORITY pass (removing unnecessary memory write priority relations).
Performed a total of 0 transformations.

17.22.3. Executing OPT_MEM_FEEDBACK pass (finding memory read-to-write feedback paths).

17.22.4. Executing MEMORY_BMUX2ROM pass (converting muxes to ROMs).

17.22.5. Executing MEMORY_DFF pass (merging $dff cells to $memrd).
Checking read port `$flatten\top_inst.\U1.\frqdiv.$auto$proc_rom.cc:150:do_switch$634'[0] in module `\ice40hx8k': no output FF found.
Checking read port address `$flatten\top_inst.\U1.\frqdiv.$auto$proc_rom.cc:150:do_switch$634'[0] in module `\ice40hx8k': no address FF found.

17.22.6. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ice40hx8k..

17.22.7. Executing MEMORY_SHARE pass (consolidating $memrd/$memwr cells).

17.22.8. Executing OPT_MEM_WIDEN pass (optimize memories where all ports are wide).
Performed a total of 0 transformations.

17.22.9. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ice40hx8k..

17.22.10. Executing MEMORY_COLLECT pass (generating $mem cells).

17.23. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ice40hx8k..

17.24. Executing MEMORY_LIBMAP pass (mapping memories to cells).
using FF mapping for memory ice40hx8k.$flatten\top_inst.\U1.\frqdiv.$auto$proc_rom.cc:150:do_switch$634
<suppressed ~6 debug messages>

17.25. Executing TECHMAP pass (map to technology primitives).

17.25.1. Executing Verilog-2005 frontend: /home/shay/a/ece270/bin/../share/yosys/ice40/brams_map.v
Parsing Verilog input from `/home/shay/a/ece270/bin/../share/yosys/ice40/brams_map.v' to AST representation.
Generating RTLIL representation for module `\$__ICE40_RAM4K_'.
Successfully finished Verilog frontend.

17.25.2. Executing Verilog-2005 frontend: /home/shay/a/ece270/bin/../share/yosys/ice40/spram_map.v
Parsing Verilog input from `/home/shay/a/ece270/bin/../share/yosys/ice40/spram_map.v' to AST representation.
Generating RTLIL representation for module `\$__ICE40_SPRAM_'.
Successfully finished Verilog frontend.

17.25.3. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~4 debug messages>

17.26. Executing ICE40_BRAMINIT pass.

17.27. Executing OPT pass (performing simple optimizations).

17.27.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module ice40hx8k.
<suppressed ~90 debug messages>

17.27.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ice40hx8k'.
<suppressed ~21 debug messages>
Removed a total of 7 cells.

17.27.3. Executing OPT_DFF pass (perform DFF optimizations).
Handling const CLK on $procdff$1250 ($adff) from module ice40hx8k (removing D path).
Adding SRST signal on $auto$ff.cc:266:slice$1280 ($dffe) from module ice40hx8k (D = $flatten\uart_inst.\uart_tx_inst.$procmux$718_Y, Q = \uart_inst.uart_tx_inst.txd_reg, rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$1271 ($dffe) from module ice40hx8k (D = $flatten\uart_inst.\uart_tx_inst.$procmux$686_Y [8], Q = \uart_inst.uart_tx_inst.data_reg [8], rval = 1'1).
Adding SRST signal on $auto$ff.cc:266:slice$1255 ($dffe) from module ice40hx8k (D = $flatten\uart_inst.\uart_tx_inst.$procmux$745_Y, Q = \uart_inst.uart_tx_inst.bit_cnt, rval = 4'1001).
Setting constant 0-bit at position 0 on $procdff$1250 ($dlatch) from module ice40hx8k.

17.27.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ice40hx8k..
Removed 14 unused cells and 60 unused wires.
<suppressed ~20 debug messages>

17.27.5. Rerunning OPT passes. (Removed registers in this run.)

17.27.6. Executing OPT_EXPR pass (perform const folding).
Optimizing module ice40hx8k.
<suppressed ~1 debug messages>

17.27.7. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ice40hx8k'.
Removed a total of 0 cells.

17.27.8. Executing OPT_DFF pass (perform DFF optimizations).

17.27.9. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ice40hx8k..

17.27.10. Finished fast OPT passes.

17.28. Executing MEMORY_MAP pass (converting memories to logic and flip-flops).
Mapping memory $flatten\top_inst.\U1.\frqdiv.$auto$proc_rom.cc:150:do_switch$634 in module \ice40hx8k:
  created 16 $dff cells and 0 static cells of width 16.
  read interface: 0 $dff and 15 $mux cells.
  write interface: 0 write mux blocks.

17.29. Executing OPT pass (performing simple optimizations).

17.29.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module ice40hx8k.
<suppressed ~1 debug messages>

17.29.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ice40hx8k'.
Removed a total of 0 cells.

17.29.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \ice40hx8k..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~22 debug messages>

17.29.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \ice40hx8k.
    Consolidated identical input bits for $mux cell $memory$flatten\top_inst.\U1.\frqdiv.$auto$proc_rom.cc:150:do_switch$634$rdmux[0][3][5]$1555:
      Old ports: A=16'0110010010001110, B=16'0101111011101010, Y=$memory$flatten\top_inst.\U1.\frqdiv.$auto$proc_rom.cc:150:do_switch$634$rdmux[0][2][2]$b$1536
      New ports: A=2'01, B=2'10, Y={ $memory$flatten\top_inst.\U1.\frqdiv.$auto$proc_rom.cc:150:do_switch$634$rdmux[0][2][2]$b$1536 [5] $memory$flatten\top_inst.\U1.\frqdiv.$auto$proc_rom.cc:150:do_switch$634$rdmux[0][2][2]$b$1536 [2] }
      New connections: { $memory$flatten\top_inst.\U1.\frqdiv.$auto$proc_rom.cc:150:do_switch$634$rdmux[0][2][2]$b$1536 [15:6] $memory$flatten\top_inst.\U1.\frqdiv.$auto$proc_rom.cc:150:do_switch$634$rdmux[0][2][2]$b$1536 [4:3] $memory$flatten\top_inst.\U1.\frqdiv.$auto$proc_rom.cc:150:do_switch$634$rdmux[0][2][2]$b$1536 [1:0] } = { 2'01 $memory$flatten\top_inst.\U1.\frqdiv.$auto$proc_rom.cc:150:do_switch$634$rdmux[0][2][2]$b$1536 [2] $memory$flatten\top_inst.\U1.\frqdiv.$auto$proc_rom.cc:150:do_switch$634$rdmux[0][2][2]$b$1536 [5] $memory$flatten\top_inst.\U1.\frqdiv.$auto$proc_rom.cc:150:do_switch$634$rdmux[0][2][2]$b$1536 [5] 1'1 $memory$flatten\top_inst.\U1.\frqdiv.$auto$proc_rom.cc:150:do_switch$634$rdmux[0][2][2]$b$1536 [5] 2'01 $memory$flatten\top_inst.\U1.\frqdiv.$auto$proc_rom.cc:150:do_switch$634$rdmux[0][2][2]$b$1536 [5] 4'0110 }
    Consolidated identical input bits for $mux cell $memory$flatten\top_inst.\U1.\frqdiv.$auto$proc_rom.cc:150:do_switch$634$rdmux[0][3][4]$1552:
      Old ports: A=16'0111000011011111, B=16'0110101010001000, Y=$memory$flatten\top_inst.\U1.\frqdiv.$auto$proc_rom.cc:150:do_switch$634$rdmux[0][2][2]$a$1535
      New ports: A=2'01, B=2'10, Y={ $memory$flatten\top_inst.\U1.\frqdiv.$auto$proc_rom.cc:150:do_switch$634$rdmux[0][2][2]$a$1535 [9] $memory$flatten\top_inst.\U1.\frqdiv.$auto$proc_rom.cc:150:do_switch$634$rdmux[0][2][2]$a$1535 [0] }
      New connections: { $memory$flatten\top_inst.\U1.\frqdiv.$auto$proc_rom.cc:150:do_switch$634$rdmux[0][2][2]$a$1535 [15:10] $memory$flatten\top_inst.\U1.\frqdiv.$auto$proc_rom.cc:150:do_switch$634$rdmux[0][2][2]$a$1535 [8:1] } = { 3'011 $memory$flatten\top_inst.\U1.\frqdiv.$auto$proc_rom.cc:150:do_switch$634$rdmux[0][2][2]$a$1535 [0] $memory$flatten\top_inst.\U1.\frqdiv.$auto$proc_rom.cc:150:do_switch$634$rdmux[0][2][2]$a$1535 [9] 3'001 $memory$flatten\top_inst.\U1.\frqdiv.$auto$proc_rom.cc:150:do_switch$634$rdmux[0][2][2]$a$1535 [0] 1'0 $memory$flatten\top_inst.\U1.\frqdiv.$auto$proc_rom.cc:150:do_switch$634$rdmux[0][2][2]$a$1535 [0] 1'1 $memory$flatten\top_inst.\U1.\frqdiv.$auto$proc_rom.cc:150:do_switch$634$rdmux[0][2][2]$a$1535 [0] $memory$flatten\top_inst.\U1.\frqdiv.$auto$proc_rom.cc:150:do_switch$634$rdmux[0][2][2]$a$1535 [0] }
    Consolidated identical input bits for $mux cell $memory$flatten\top_inst.\U1.\frqdiv.$auto$proc_rom.cc:150:do_switch$634$rdmux[0][3][3]$1549:
      Old ports: A=16'0111111010110000, B=16'0111011110010101, Y=$memory$flatten\top_inst.\U1.\frqdiv.$auto$proc_rom.cc:150:do_switch$634$rdmux[0][2][1]$b$1533
      New ports: A=2'10, B=2'01, Y={ $memory$flatten\top_inst.\U1.\frqdiv.$auto$proc_rom.cc:150:do_switch$634$rdmux[0][2][1]$b$1533 [5] $memory$flatten\top_inst.\U1.\frqdiv.$auto$proc_rom.cc:150:do_switch$634$rdmux[0][2][1]$b$1533 [0] }
      New connections: { $memory$flatten\top_inst.\U1.\frqdiv.$auto$proc_rom.cc:150:do_switch$634$rdmux[0][2][1]$b$1533 [15:6] $memory$flatten\top_inst.\U1.\frqdiv.$auto$proc_rom.cc:150:do_switch$634$rdmux[0][2][1]$b$1533 [4:1] } = { 4'0111 $memory$flatten\top_inst.\U1.\frqdiv.$auto$proc_rom.cc:150:do_switch$634$rdmux[0][2][1]$b$1533 [5] 2'11 $memory$flatten\top_inst.\U1.\frqdiv.$auto$proc_rom.cc:150:do_switch$634$rdmux[0][2][1]$b$1533 [0] 4'1010 $memory$flatten\top_inst.\U1.\frqdiv.$auto$proc_rom.cc:150:do_switch$634$rdmux[0][2][1]$b$1533 [0] 1'0 }
    Consolidated identical input bits for $mux cell $memory$flatten\top_inst.\U1.\frqdiv.$auto$proc_rom.cc:150:do_switch$634$rdmux[0][3][2]$1546:
      Old ports: A=16'1000111000110100, B=16'1000011000111010, Y=$memory$flatten\top_inst.\U1.\frqdiv.$auto$proc_rom.cc:150:do_switch$634$rdmux[0][2][1]$a$1532
      New ports: A=2'10, B=2'01, Y=$memory$flatten\top_inst.\U1.\frqdiv.$auto$proc_rom.cc:150:do_switch$634$rdmux[0][2][1]$a$1532 [2:1]
      New connections: { $memory$flatten\top_inst.\U1.\frqdiv.$auto$proc_rom.cc:150:do_switch$634$rdmux[0][2][1]$a$1532 [15:3] $memory$flatten\top_inst.\U1.\frqdiv.$auto$proc_rom.cc:150:do_switch$634$rdmux[0][2][1]$a$1532 [0] } = { 4'1000 $memory$flatten\top_inst.\U1.\frqdiv.$auto$proc_rom.cc:150:do_switch$634$rdmux[0][2][1]$a$1532 [2] 7'1100011 $memory$flatten\top_inst.\U1.\frqdiv.$auto$proc_rom.cc:150:do_switch$634$rdmux[0][2][1]$a$1532 [1] 1'0 }
    Consolidated identical input bits for $mux cell $memory$flatten\top_inst.\U1.\frqdiv.$auto$proc_rom.cc:150:do_switch$634$rdmux[0][3][1]$1543:
      Old ports: A=16'1001111110011110, B=16'1001011010101001, Y=$memory$flatten\top_inst.\U1.\frqdiv.$auto$proc_rom.cc:150:do_switch$634$rdmux[0][2][0]$b$1530
      New ports: A=2'10, B=2'01, Y=$memory$flatten\top_inst.\U1.\frqdiv.$auto$proc_rom.cc:150:do_switch$634$rdmux[0][2][0]$b$1530 [1:0]
      New connections: $memory$flatten\top_inst.\U1.\frqdiv.$auto$proc_rom.cc:150:do_switch$634$rdmux[0][2][0]$b$1530 [15:2] = { 4'1001 $memory$flatten\top_inst.\U1.\frqdiv.$auto$proc_rom.cc:150:do_switch$634$rdmux[0][2][0]$b$1530 [1] 2'11 $memory$flatten\top_inst.\U1.\frqdiv.$auto$proc_rom.cc:150:do_switch$634$rdmux[0][2][0]$b$1530 [1] 2'10 $memory$flatten\top_inst.\U1.\frqdiv.$auto$proc_rom.cc:150:do_switch$634$rdmux[0][2][0]$b$1530 [0] $memory$flatten\top_inst.\U1.\frqdiv.$auto$proc_rom.cc:150:do_switch$634$rdmux[0][2][0]$b$1530 [1] 1'1 $memory$flatten\top_inst.\U1.\frqdiv.$auto$proc_rom.cc:150:do_switch$634$rdmux[0][2][0]$b$1530 [1] }
    Consolidated identical input bits for $mux cell $memory$flatten\top_inst.\U1.\frqdiv.$auto$proc_rom.cc:150:do_switch$634$rdmux[0][3][0]$1540:
      Old ports: A=16'1011001100101100, B=16'1010100100011100, Y=$memory$flatten\top_inst.\U1.\frqdiv.$auto$proc_rom.cc:150:do_switch$634$rdmux[0][2][0]$a$1529
      New ports: A=2'10, B=2'01, Y=$memory$flatten\top_inst.\U1.\frqdiv.$auto$proc_rom.cc:150:do_switch$634$rdmux[0][2][0]$a$1529 [5:4]
      New connections: { $memory$flatten\top_inst.\U1.\frqdiv.$auto$proc_rom.cc:150:do_switch$634$rdmux[0][2][0]$a$1529 [15:6] $memory$flatten\top_inst.\U1.\frqdiv.$auto$proc_rom.cc:150:do_switch$634$rdmux[0][2][0]$a$1529 [3:0] } = { 3'101 $memory$flatten\top_inst.\U1.\frqdiv.$auto$proc_rom.cc:150:do_switch$634$rdmux[0][2][0]$a$1529 [5:4] 1'0 $memory$flatten\top_inst.\U1.\frqdiv.$auto$proc_rom.cc:150:do_switch$634$rdmux[0][2][0]$a$1529 [5] 7'1001100 }
    Consolidated identical input bits for $mux cell $memory$flatten\top_inst.\U1.\frqdiv.$auto$proc_rom.cc:150:do_switch$634$rdmux[0][3][6]$1558:
      Old ports: A=16'0101100110010101, B=16'0000000000000001, Y=$memory$flatten\top_inst.\U1.\frqdiv.$auto$proc_rom.cc:150:do_switch$634$rdmux[0][2][3]$a$1538
      New ports: A=1'1, B=1'0, Y=$memory$flatten\top_inst.\U1.\frqdiv.$auto$proc_rom.cc:150:do_switch$634$rdmux[0][2][3]$a$1538 [2]
      New connections: { $memory$flatten\top_inst.\U1.\frqdiv.$auto$proc_rom.cc:150:do_switch$634$rdmux[0][2][3]$a$1538 [15:3] $memory$flatten\top_inst.\U1.\frqdiv.$auto$proc_rom.cc:150:do_switch$634$rdmux[0][2][3]$a$1538 [1:0] } = { 1'0 $memory$flatten\top_inst.\U1.\frqdiv.$auto$proc_rom.cc:150:do_switch$634$rdmux[0][2][3]$a$1538 [2] 1'0 $memory$flatten\top_inst.\U1.\frqdiv.$auto$proc_rom.cc:150:do_switch$634$rdmux[0][2][3]$a$1538 [2] $memory$flatten\top_inst.\U1.\frqdiv.$auto$proc_rom.cc:150:do_switch$634$rdmux[0][2][3]$a$1538 [2] 2'00 $memory$flatten\top_inst.\U1.\frqdiv.$auto$proc_rom.cc:150:do_switch$634$rdmux[0][2][3]$a$1538 [2] $memory$flatten\top_inst.\U1.\frqdiv.$auto$proc_rom.cc:150:do_switch$634$rdmux[0][2][3]$a$1538 [2] 2'00 $memory$flatten\top_inst.\U1.\frqdiv.$auto$proc_rom.cc:150:do_switch$634$rdmux[0][2][3]$a$1538 [2] 3'001 }
    Consolidated identical input bits for $mux cell $flatten\top_inst.\U1.\mode_FSM.$ternary$source/mode_fsm.sv:20$88:
      Old ports: A=2'01, B=2'11, Y=$flatten\top_inst.\U1.\mode_FSM.$ternary$source/mode_fsm.sv:20$88_Y
      New ports: A=1'0, B=1'1, Y=$flatten\top_inst.\U1.\mode_FSM.$ternary$source/mode_fsm.sv:20$88_Y [1]
      New connections: $flatten\top_inst.\U1.\mode_FSM.$ternary$source/mode_fsm.sv:20$88_Y [0] = 1'1
    Consolidated identical input bits for $mux cell $flatten\top_inst.\U1.\mode_FSM.$ternary$source/mode_fsm.sv:22$90:
      Old ports: A=2'10, B=2'00, Y=$flatten\top_inst.\U1.\mode_FSM.$ternary$source/mode_fsm.sv:22$90_Y
      New ports: A=1'1, B=1'0, Y=$flatten\top_inst.\U1.\mode_FSM.$ternary$source/mode_fsm.sv:22$90_Y [1]
      New connections: $flatten\top_inst.\U1.\mode_FSM.$ternary$source/mode_fsm.sv:22$90_Y [0] = 1'0
    Consolidated identical input bits for $mux cell $flatten\top_inst.\U1.\seq_div.$procmux$995:
      Old ports: A={ \top_inst.U1.seq_div.R [22:0] 1'0 }, B={ $flatten\top_inst.\U1.\seq_div.$sub$source/sequential_div.sv:102$123_Y [23:8] \top_inst.U1.seq_div.R [6:0] 1'0 }, Y=$flatten\top_inst.\U1.\seq_div.$3\next_r[23:0]
      New ports: A=\top_inst.U1.seq_div.R [22:7], B=$flatten\top_inst.\U1.\seq_div.$sub$source/sequential_div.sv:102$123_Y [23:8], Y=$flatten\top_inst.\U1.\seq_div.$3\next_r[23:0] [23:8]
      New connections: $flatten\top_inst.\U1.\seq_div.$3\next_r[23:0] [7:0] = { \top_inst.U1.seq_div.R [6:0] 1'0 }
    Consolidated identical input bits for $mux cell $flatten\top_inst.\U1.\waveshaper.$ternary$source/waveshaper.sv:17$154:
      Old ports: A={ \top_inst.U1.seq_div.q_out [6:0] 1'0 }, B={ \top_inst.U1.waveshaper.int_2 [7:1] 1'0 }, Y=$flatten\top_inst.\U1.\waveshaper.$ternary$source/waveshaper.sv:17$154_Y
      New ports: A=\top_inst.U1.seq_div.q_out [6:0], B=\top_inst.U1.waveshaper.int_2 [7:1], Y=$flatten\top_inst.\U1.\waveshaper.$ternary$source/waveshaper.sv:17$154_Y [7:1]
      New connections: $flatten\top_inst.\U1.\waveshaper.$ternary$source/waveshaper.sv:17$154_Y [0] = 1'0
    Consolidated identical input bits for $mux cell $flatten\top_inst.\U1.\waveshaper.$ternary$source/waveshaper.sv:18$156:
      Old ports: A=8'00000000, B=8'11111111, Y=$flatten\top_inst.\U1.\waveshaper.$ternary$source/waveshaper.sv:18$156_Y [7:0]
      New ports: A=1'0, B=1'1, Y=$flatten\top_inst.\U1.\waveshaper.$ternary$source/waveshaper.sv:18$156_Y [0]
      New connections: $flatten\top_inst.\U1.\waveshaper.$ternary$source/waveshaper.sv:18$156_Y [7:1] = { $flatten\top_inst.\U1.\waveshaper.$ternary$source/waveshaper.sv:18$156_Y [0] $flatten\top_inst.\U1.\waveshaper.$ternary$source/waveshaper.sv:18$156_Y [0] $flatten\top_inst.\U1.\waveshaper.$ternary$source/waveshaper.sv:18$156_Y [0] $flatten\top_inst.\U1.\waveshaper.$ternary$source/waveshaper.sv:18$156_Y [0] $flatten\top_inst.\U1.\waveshaper.$ternary$source/waveshaper.sv:18$156_Y [0] $flatten\top_inst.\U1.\waveshaper.$ternary$source/waveshaper.sv:18$156_Y [0] $flatten\top_inst.\U1.\waveshaper.$ternary$source/waveshaper.sv:18$156_Y [0] }
    Consolidated identical input bits for $mux cell $flatten\uart_inst.\uart_tx_inst.$procmux$702:
      Old ports: A=19'0000000000000100000, B=19'0000000000000011111, Y=$flatten\uart_inst.\uart_tx_inst.$procmux$702_Y
      New ports: A=2'10, B=2'01, Y={ $flatten\uart_inst.\uart_tx_inst.$procmux$702_Y [5] $flatten\uart_inst.\uart_tx_inst.$procmux$702_Y [0] }
      New connections: { $flatten\uart_inst.\uart_tx_inst.$procmux$702_Y [18:6] $flatten\uart_inst.\uart_tx_inst.$procmux$702_Y [4:1] } = { 13'0000000000000 $flatten\uart_inst.\uart_tx_inst.$procmux$702_Y [0] $flatten\uart_inst.\uart_tx_inst.$procmux$702_Y [0] $flatten\uart_inst.\uart_tx_inst.$procmux$702_Y [0] $flatten\uart_inst.\uart_tx_inst.$procmux$702_Y [0] }
  Optimizing cells in module \ice40hx8k.
    Consolidated identical input bits for $mux cell $memory$flatten\top_inst.\U1.\frqdiv.$auto$proc_rom.cc:150:do_switch$634$rdmux[0][2][3]$1537:
      Old ports: A=$memory$flatten\top_inst.\U1.\frqdiv.$auto$proc_rom.cc:150:do_switch$634$rdmux[0][2][3]$a$1538, B=16'0000000000000001, Y=$memory$flatten\top_inst.\U1.\frqdiv.$auto$proc_rom.cc:150:do_switch$634$rdmux[0][1][1]$b$1527
      New ports: A=$memory$flatten\top_inst.\U1.\frqdiv.$auto$proc_rom.cc:150:do_switch$634$rdmux[0][2][3]$a$1538 [2], B=1'0, Y=$memory$flatten\top_inst.\U1.\frqdiv.$auto$proc_rom.cc:150:do_switch$634$rdmux[0][1][1]$b$1527 [2]
      New connections: { $memory$flatten\top_inst.\U1.\frqdiv.$auto$proc_rom.cc:150:do_switch$634$rdmux[0][1][1]$b$1527 [15:3] $memory$flatten\top_inst.\U1.\frqdiv.$auto$proc_rom.cc:150:do_switch$634$rdmux[0][1][1]$b$1527 [1:0] } = { 1'0 $memory$flatten\top_inst.\U1.\frqdiv.$auto$proc_rom.cc:150:do_switch$634$rdmux[0][1][1]$b$1527 [2] 1'0 $memory$flatten\top_inst.\U1.\frqdiv.$auto$proc_rom.cc:150:do_switch$634$rdmux[0][1][1]$b$1527 [2] $memory$flatten\top_inst.\U1.\frqdiv.$auto$proc_rom.cc:150:do_switch$634$rdmux[0][1][1]$b$1527 [2] 2'00 $memory$flatten\top_inst.\U1.\frqdiv.$auto$proc_rom.cc:150:do_switch$634$rdmux[0][1][1]$b$1527 [2] $memory$flatten\top_inst.\U1.\frqdiv.$auto$proc_rom.cc:150:do_switch$634$rdmux[0][1][1]$b$1527 [2] 2'00 $memory$flatten\top_inst.\U1.\frqdiv.$auto$proc_rom.cc:150:do_switch$634$rdmux[0][1][1]$b$1527 [2] 3'001 }
    Consolidated identical input bits for $mux cell $memory$flatten\top_inst.\U1.\frqdiv.$auto$proc_rom.cc:150:do_switch$634$rdmux[0][2][2]$1534:
      Old ports: A=$memory$flatten\top_inst.\U1.\frqdiv.$auto$proc_rom.cc:150:do_switch$634$rdmux[0][2][2]$a$1535, B=$memory$flatten\top_inst.\U1.\frqdiv.$auto$proc_rom.cc:150:do_switch$634$rdmux[0][2][2]$b$1536, Y=$memory$flatten\top_inst.\U1.\frqdiv.$auto$proc_rom.cc:150:do_switch$634$rdmux[0][1][1]$a$1526
      New ports: A={ 2'10 $memory$flatten\top_inst.\U1.\frqdiv.$auto$proc_rom.cc:150:do_switch$634$rdmux[0][2][2]$a$1535 [9] $memory$flatten\top_inst.\U1.\frqdiv.$auto$proc_rom.cc:150:do_switch$634$rdmux[0][2][2]$a$1535 [0] 1'0 $memory$flatten\top_inst.\U1.\frqdiv.$auto$proc_rom.cc:150:do_switch$634$rdmux[0][2][2]$a$1535 [0] $memory$flatten\top_inst.\U1.\frqdiv.$auto$proc_rom.cc:150:do_switch$634$rdmux[0][2][2]$a$1535 [0] $memory$flatten\top_inst.\U1.\frqdiv.$auto$proc_rom.cc:150:do_switch$634$rdmux[0][2][2]$a$1535 [0] }, B={ $memory$flatten\top_inst.\U1.\frqdiv.$auto$proc_rom.cc:150:do_switch$634$rdmux[0][2][2]$b$1536 [2] 1'1 $memory$flatten\top_inst.\U1.\frqdiv.$auto$proc_rom.cc:150:do_switch$634$rdmux[0][2][2]$b$1536 [5] $memory$flatten\top_inst.\U1.\frqdiv.$auto$proc_rom.cc:150:do_switch$634$rdmux[0][2][2]$b$1536 [5] $memory$flatten\top_inst.\U1.\frqdiv.$auto$proc_rom.cc:150:do_switch$634$rdmux[0][2][2]$b$1536 [5] $memory$flatten\top_inst.\U1.\frqdiv.$auto$proc_rom.cc:150:do_switch$634$rdmux[0][2][2]$b$1536 [2] 2'10 }, Y={ $memory$flatten\top_inst.\U1.\frqdiv.$auto$proc_rom.cc:150:do_switch$634$rdmux[0][1][1]$a$1526 [13] $memory$flatten\top_inst.\U1.\frqdiv.$auto$proc_rom.cc:150:do_switch$634$rdmux[0][1][1]$a$1526 [10:9] $memory$flatten\top_inst.\U1.\frqdiv.$auto$proc_rom.cc:150:do_switch$634$rdmux[0][1][1]$a$1526 [6:5] $memory$flatten\top_inst.\U1.\frqdiv.$auto$proc_rom.cc:150:do_switch$634$rdmux[0][1][1]$a$1526 [2:0] }
      New connections: { $memory$flatten\top_inst.\U1.\frqdiv.$auto$proc_rom.cc:150:do_switch$634$rdmux[0][1][1]$a$1526 [15:14] $memory$flatten\top_inst.\U1.\frqdiv.$auto$proc_rom.cc:150:do_switch$634$rdmux[0][1][1]$a$1526 [12:11] $memory$flatten\top_inst.\U1.\frqdiv.$auto$proc_rom.cc:150:do_switch$634$rdmux[0][1][1]$a$1526 [8:7] $memory$flatten\top_inst.\U1.\frqdiv.$auto$proc_rom.cc:150:do_switch$634$rdmux[0][1][1]$a$1526 [4:3] } = { 2'01 $memory$flatten\top_inst.\U1.\frqdiv.$auto$proc_rom.cc:150:do_switch$634$rdmux[0][1][1]$a$1526 [6] $memory$flatten\top_inst.\U1.\frqdiv.$auto$proc_rom.cc:150:do_switch$634$rdmux[0][1][1]$a$1526 [9] 2'01 $memory$flatten\top_inst.\U1.\frqdiv.$auto$proc_rom.cc:150:do_switch$634$rdmux[0][1][1]$a$1526 [0] 1'1 }
    Consolidated identical input bits for $mux cell $memory$flatten\top_inst.\U1.\frqdiv.$auto$proc_rom.cc:150:do_switch$634$rdmux[0][2][1]$1531:
      Old ports: A=$memory$flatten\top_inst.\U1.\frqdiv.$auto$proc_rom.cc:150:do_switch$634$rdmux[0][2][1]$a$1532, B=$memory$flatten\top_inst.\U1.\frqdiv.$auto$proc_rom.cc:150:do_switch$634$rdmux[0][2][1]$b$1533, Y=$memory$flatten\top_inst.\U1.\frqdiv.$auto$proc_rom.cc:150:do_switch$634$rdmux[0][1][0]$b$1524
      New ports: A={ 1'1 $memory$flatten\top_inst.\U1.\frqdiv.$auto$proc_rom.cc:150:do_switch$634$rdmux[0][2][1]$a$1532 [2] 2'01 $memory$flatten\top_inst.\U1.\frqdiv.$auto$proc_rom.cc:150:do_switch$634$rdmux[0][2][1]$a$1532 [2:1] 1'0 }, B={ 1'0 $memory$flatten\top_inst.\U1.\frqdiv.$auto$proc_rom.cc:150:do_switch$634$rdmux[0][2][1]$b$1533 [5] 1'1 $memory$flatten\top_inst.\U1.\frqdiv.$auto$proc_rom.cc:150:do_switch$634$rdmux[0][2][1]$b$1533 [5] $memory$flatten\top_inst.\U1.\frqdiv.$auto$proc_rom.cc:150:do_switch$634$rdmux[0][2][1]$b$1533 [0] 1'0 $memory$flatten\top_inst.\U1.\frqdiv.$auto$proc_rom.cc:150:do_switch$634$rdmux[0][2][1]$b$1533 [0] }, Y={ $memory$flatten\top_inst.\U1.\frqdiv.$auto$proc_rom.cc:150:do_switch$634$rdmux[0][1][0]$b$1524 [15] $memory$flatten\top_inst.\U1.\frqdiv.$auto$proc_rom.cc:150:do_switch$634$rdmux[0][1][0]$b$1524 [11] $memory$flatten\top_inst.\U1.\frqdiv.$auto$proc_rom.cc:150:do_switch$634$rdmux[0][1][0]$b$1524 [7] $memory$flatten\top_inst.\U1.\frqdiv.$auto$proc_rom.cc:150:do_switch$634$rdmux[0][1][0]$b$1524 [5] $memory$flatten\top_inst.\U1.\frqdiv.$auto$proc_rom.cc:150:do_switch$634$rdmux[0][1][0]$b$1524 [2:0] }
      New connections: { $memory$flatten\top_inst.\U1.\frqdiv.$auto$proc_rom.cc:150:do_switch$634$rdmux[0][1][0]$b$1524 [14:12] $memory$flatten\top_inst.\U1.\frqdiv.$auto$proc_rom.cc:150:do_switch$634$rdmux[0][1][0]$b$1524 [10:8] $memory$flatten\top_inst.\U1.\frqdiv.$auto$proc_rom.cc:150:do_switch$634$rdmux[0][1][0]$b$1524 [6] $memory$flatten\top_inst.\U1.\frqdiv.$auto$proc_rom.cc:150:do_switch$634$rdmux[0][1][0]$b$1524 [4:3] } = { $memory$flatten\top_inst.\U1.\frqdiv.$auto$proc_rom.cc:150:do_switch$634$rdmux[0][1][0]$b$1524 [7] $memory$flatten\top_inst.\U1.\frqdiv.$auto$proc_rom.cc:150:do_switch$634$rdmux[0][1][0]$b$1524 [7] $memory$flatten\top_inst.\U1.\frqdiv.$auto$proc_rom.cc:150:do_switch$634$rdmux[0][1][0]$b$1524 [7] 2'11 $memory$flatten\top_inst.\U1.\frqdiv.$auto$proc_rom.cc:150:do_switch$634$rdmux[0][1][0]$b$1524 [0] 2'01 $memory$flatten\top_inst.\U1.\frqdiv.$auto$proc_rom.cc:150:do_switch$634$rdmux[0][1][0]$b$1524 [1] }
    Consolidated identical input bits for $mux cell $memory$flatten\top_inst.\U1.\frqdiv.$auto$proc_rom.cc:150:do_switch$634$rdmux[0][2][0]$1528:
      Old ports: A=$memory$flatten\top_inst.\U1.\frqdiv.$auto$proc_rom.cc:150:do_switch$634$rdmux[0][2][0]$a$1529, B=$memory$flatten\top_inst.\U1.\frqdiv.$auto$proc_rom.cc:150:do_switch$634$rdmux[0][2][0]$b$1530, Y=$memory$flatten\top_inst.\U1.\frqdiv.$auto$proc_rom.cc:150:do_switch$634$rdmux[0][1][0]$a$1523
      New ports: A={ 1'1 $memory$flatten\top_inst.\U1.\frqdiv.$auto$proc_rom.cc:150:do_switch$634$rdmux[0][2][0]$a$1529 [5] 1'0 $memory$flatten\top_inst.\U1.\frqdiv.$auto$proc_rom.cc:150:do_switch$634$rdmux[0][2][0]$a$1529 [5:4] 3'100 }, B={ 3'011 $memory$flatten\top_inst.\U1.\frqdiv.$auto$proc_rom.cc:150:do_switch$634$rdmux[0][2][0]$b$1530 [0] $memory$flatten\top_inst.\U1.\frqdiv.$auto$proc_rom.cc:150:do_switch$634$rdmux[0][2][0]$b$1530 [1] $memory$flatten\top_inst.\U1.\frqdiv.$auto$proc_rom.cc:150:do_switch$634$rdmux[0][2][0]$b$1530 [1] $memory$flatten\top_inst.\U1.\frqdiv.$auto$proc_rom.cc:150:do_switch$634$rdmux[0][2][0]$b$1530 [1:0] }, Y={ $memory$flatten\top_inst.\U1.\frqdiv.$auto$proc_rom.cc:150:do_switch$634$rdmux[0][1][0]$a$1523 [13] $memory$flatten\top_inst.\U1.\frqdiv.$auto$proc_rom.cc:150:do_switch$634$rdmux[0][1][0]$a$1523 [9] $memory$flatten\top_inst.\U1.\frqdiv.$auto$proc_rom.cc:150:do_switch$634$rdmux[0][1][0]$a$1523 [7] $memory$flatten\top_inst.\U1.\frqdiv.$auto$proc_rom.cc:150:do_switch$634$rdmux[0][1][0]$a$1523 [5:4] $memory$flatten\top_inst.\U1.\frqdiv.$auto$proc_rom.cc:150:do_switch$634$rdmux[0][1][0]$a$1523 [2:0] }
      New connections: { $memory$flatten\top_inst.\U1.\frqdiv.$auto$proc_rom.cc:150:do_switch$634$rdmux[0][1][0]$a$1523 [15:14] $memory$flatten\top_inst.\U1.\frqdiv.$auto$proc_rom.cc:150:do_switch$634$rdmux[0][1][0]$a$1523 [12:10] $memory$flatten\top_inst.\U1.\frqdiv.$auto$proc_rom.cc:150:do_switch$634$rdmux[0][1][0]$a$1523 [8] $memory$flatten\top_inst.\U1.\frqdiv.$auto$proc_rom.cc:150:do_switch$634$rdmux[0][1][0]$a$1523 [6] $memory$flatten\top_inst.\U1.\frqdiv.$auto$proc_rom.cc:150:do_switch$634$rdmux[0][1][0]$a$1523 [3] } = { 2'10 $memory$flatten\top_inst.\U1.\frqdiv.$auto$proc_rom.cc:150:do_switch$634$rdmux[0][1][0]$a$1523 [9] $memory$flatten\top_inst.\U1.\frqdiv.$auto$proc_rom.cc:150:do_switch$634$rdmux[0][1][0]$a$1523 [4] $memory$flatten\top_inst.\U1.\frqdiv.$auto$proc_rom.cc:150:do_switch$634$rdmux[0][1][0]$a$1523 [7] $memory$flatten\top_inst.\U1.\frqdiv.$auto$proc_rom.cc:150:do_switch$634$rdmux[0][1][0]$a$1523 [2] 2'01 }
    Consolidated identical input bits for $mux cell $flatten\top_inst.\U1.\seq_div.$procmux$1003:
      Old ports: A={ \top_inst.U1.seq_div.dividend 8'00000000 }, B=$flatten\top_inst.\U1.\seq_div.$3\next_r[23:0], Y=\top_inst.U1.seq_div.next_r
      New ports: A={ \top_inst.U1.seq_div.dividend 7'0000000 }, B={ $flatten\top_inst.\U1.\seq_div.$3\next_r[23:0] [23:8] \top_inst.U1.seq_div.R [6:0] }, Y=\top_inst.U1.seq_div.next_r [23:1]
      New connections: \top_inst.U1.seq_div.next_r [0] = 1'0
    Consolidated identical input bits for $mux cell $flatten\uart_inst.\uart_tx_inst.$procmux$707:
      Old ports: A=$flatten\uart_inst.\uart_tx_inst.$procmux$702_Y, B=19'0000000000000011111, Y=$flatten\uart_inst.\uart_tx_inst.$procmux$707_Y
      New ports: A={ $flatten\uart_inst.\uart_tx_inst.$procmux$702_Y [5] $flatten\uart_inst.\uart_tx_inst.$procmux$702_Y [0] }, B=2'01, Y={ $flatten\uart_inst.\uart_tx_inst.$procmux$707_Y [5] $flatten\uart_inst.\uart_tx_inst.$procmux$707_Y [0] }
      New connections: { $flatten\uart_inst.\uart_tx_inst.$procmux$707_Y [18:6] $flatten\uart_inst.\uart_tx_inst.$procmux$707_Y [4:1] } = { 13'0000000000000 $flatten\uart_inst.\uart_tx_inst.$procmux$707_Y [0] $flatten\uart_inst.\uart_tx_inst.$procmux$707_Y [0] $flatten\uart_inst.\uart_tx_inst.$procmux$707_Y [0] $flatten\uart_inst.\uart_tx_inst.$procmux$707_Y [0] }
  Optimizing cells in module \ice40hx8k.
    Consolidated identical input bits for $mux cell $memory$flatten\top_inst.\U1.\frqdiv.$auto$proc_rom.cc:150:do_switch$634$rdmux[0][1][1]$1525:
      Old ports: A=$memory$flatten\top_inst.\U1.\frqdiv.$auto$proc_rom.cc:150:do_switch$634$rdmux[0][1][1]$a$1526, B=$memory$flatten\top_inst.\U1.\frqdiv.$auto$proc_rom.cc:150:do_switch$634$rdmux[0][1][1]$b$1527, Y=$memory$flatten\top_inst.\U1.\frqdiv.$auto$proc_rom.cc:150:do_switch$634$rdmux[0][0][0]$b$1521
      New ports: A={ $memory$flatten\top_inst.\U1.\frqdiv.$auto$proc_rom.cc:150:do_switch$634$rdmux[0][1][1]$a$1526 [13] $memory$flatten\top_inst.\U1.\frqdiv.$auto$proc_rom.cc:150:do_switch$634$rdmux[0][1][1]$a$1526 [6] $memory$flatten\top_inst.\U1.\frqdiv.$auto$proc_rom.cc:150:do_switch$634$rdmux[0][1][1]$a$1526 [9] $memory$flatten\top_inst.\U1.\frqdiv.$auto$proc_rom.cc:150:do_switch$634$rdmux[0][1][1]$a$1526 [10:9] 2'01 $memory$flatten\top_inst.\U1.\frqdiv.$auto$proc_rom.cc:150:do_switch$634$rdmux[0][1][1]$a$1526 [6:5] $memory$flatten\top_inst.\U1.\frqdiv.$auto$proc_rom.cc:150:do_switch$634$rdmux[0][1][1]$a$1526 [0] 1'1 $memory$flatten\top_inst.\U1.\frqdiv.$auto$proc_rom.cc:150:do_switch$634$rdmux[0][1][1]$a$1526 [2:0] }, B={ 1'0 $memory$flatten\top_inst.\U1.\frqdiv.$auto$proc_rom.cc:150:do_switch$634$rdmux[0][1][1]$b$1527 [2] $memory$flatten\top_inst.\U1.\frqdiv.$auto$proc_rom.cc:150:do_switch$634$rdmux[0][1][1]$b$1527 [2] 2'00 $memory$flatten\top_inst.\U1.\frqdiv.$auto$proc_rom.cc:150:do_switch$634$rdmux[0][1][1]$b$1527 [2] $memory$flatten\top_inst.\U1.\frqdiv.$auto$proc_rom.cc:150:do_switch$634$rdmux[0][1][1]$b$1527 [2] 2'00 $memory$flatten\top_inst.\U1.\frqdiv.$auto$proc_rom.cc:150:do_switch$634$rdmux[0][1][1]$b$1527 [2] 1'0 $memory$flatten\top_inst.\U1.\frqdiv.$auto$proc_rom.cc:150:do_switch$634$rdmux[0][1][1]$b$1527 [2] 2'01 }, Y=$memory$flatten\top_inst.\U1.\frqdiv.$auto$proc_rom.cc:150:do_switch$634$rdmux[0][0][0]$b$1521 [13:0]
      New connections: $memory$flatten\top_inst.\U1.\frqdiv.$auto$proc_rom.cc:150:do_switch$634$rdmux[0][0][0]$b$1521 [15:14] = { 1'0 $memory$flatten\top_inst.\U1.\frqdiv.$auto$proc_rom.cc:150:do_switch$634$rdmux[0][0][0]$b$1521 [7] }
    Consolidated identical input bits for $mux cell $memory$flatten\top_inst.\U1.\frqdiv.$auto$proc_rom.cc:150:do_switch$634$rdmux[0][1][0]$1522:
      Old ports: A=$memory$flatten\top_inst.\U1.\frqdiv.$auto$proc_rom.cc:150:do_switch$634$rdmux[0][1][0]$a$1523, B=$memory$flatten\top_inst.\U1.\frqdiv.$auto$proc_rom.cc:150:do_switch$634$rdmux[0][1][0]$b$1524, Y=$memory$flatten\top_inst.\U1.\frqdiv.$auto$proc_rom.cc:150:do_switch$634$rdmux[0][0][0]$a$1520
      New ports: A={ 2'10 $memory$flatten\top_inst.\U1.\frqdiv.$auto$proc_rom.cc:150:do_switch$634$rdmux[0][1][0]$a$1523 [13] $memory$flatten\top_inst.\U1.\frqdiv.$auto$proc_rom.cc:150:do_switch$634$rdmux[0][1][0]$a$1523 [9] $memory$flatten\top_inst.\U1.\frqdiv.$auto$proc_rom.cc:150:do_switch$634$rdmux[0][1][0]$a$1523 [4] $memory$flatten\top_inst.\U1.\frqdiv.$auto$proc_rom.cc:150:do_switch$634$rdmux[0][1][0]$a$1523 [7] $memory$flatten\top_inst.\U1.\frqdiv.$auto$proc_rom.cc:150:do_switch$634$rdmux[0][1][0]$a$1523 [9] $memory$flatten\top_inst.\U1.\frqdiv.$auto$proc_rom.cc:150:do_switch$634$rdmux[0][1][0]$a$1523 [2] $memory$flatten\top_inst.\U1.\frqdiv.$auto$proc_rom.cc:150:do_switch$634$rdmux[0][1][0]$a$1523 [7] $memory$flatten\top_inst.\U1.\frqdiv.$auto$proc_rom.cc:150:do_switch$634$rdmux[0][1][0]$a$1523 [5:4] 1'1 $memory$flatten\top_inst.\U1.\frqdiv.$auto$proc_rom.cc:150:do_switch$634$rdmux[0][1][0]$a$1523 [2:0] }, B={ $memory$flatten\top_inst.\U1.\frqdiv.$auto$proc_rom.cc:150:do_switch$634$rdmux[0][1][0]$b$1524 [15] $memory$flatten\top_inst.\U1.\frqdiv.$auto$proc_rom.cc:150:do_switch$634$rdmux[0][1][0]$b$1524 [7] $memory$flatten\top_inst.\U1.\frqdiv.$auto$proc_rom.cc:150:do_switch$634$rdmux[0][1][0]$b$1524 [7] $memory$flatten\top_inst.\U1.\frqdiv.$auto$proc_rom.cc:150:do_switch$634$rdmux[0][1][0]$b$1524 [7] $memory$flatten\top_inst.\U1.\frqdiv.$auto$proc_rom.cc:150:do_switch$634$rdmux[0][1][0]$b$1524 [11] 2'11 $memory$flatten\top_inst.\U1.\frqdiv.$auto$proc_rom.cc:150:do_switch$634$rdmux[0][1][0]$b$1524 [0] $memory$flatten\top_inst.\U1.\frqdiv.$auto$proc_rom.cc:150:do_switch$634$rdmux[0][1][0]$b$1524 [7] $memory$flatten\top_inst.\U1.\frqdiv.$auto$proc_rom.cc:150:do_switch$634$rdmux[0][1][0]$b$1524 [5] 1'1 $memory$flatten\top_inst.\U1.\frqdiv.$auto$proc_rom.cc:150:do_switch$634$rdmux[0][1][0]$b$1524 [1] $memory$flatten\top_inst.\U1.\frqdiv.$auto$proc_rom.cc:150:do_switch$634$rdmux[0][1][0]$b$1524 [2:0] }, Y={ $memory$flatten\top_inst.\U1.\frqdiv.$auto$proc_rom.cc:150:do_switch$634$rdmux[0][0][0]$a$1520 [15:7] $memory$flatten\top_inst.\U1.\frqdiv.$auto$proc_rom.cc:150:do_switch$634$rdmux[0][0][0]$a$1520 [5:0] }
      New connections: $memory$flatten\top_inst.\U1.\frqdiv.$auto$proc_rom.cc:150:do_switch$634$rdmux[0][0][0]$a$1520 [6] = 1'0
  Optimizing cells in module \ice40hx8k.
Performed a total of 21 changes.

17.29.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ice40hx8k'.
<suppressed ~15 debug messages>
Removed a total of 5 cells.

17.29.6. Executing OPT_DFF pass (perform DFF optimizations).

17.29.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ice40hx8k..
Removed 0 unused cells and 22 unused wires.
<suppressed ~1 debug messages>

17.29.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module ice40hx8k.

17.29.9. Rerunning OPT passes. (Maybe there is more to do..)

17.29.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \ice40hx8k..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~23 debug messages>

17.29.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \ice40hx8k.
    Consolidated identical input bits for $mux cell $memory$flatten\top_inst.\U1.\frqdiv.$auto$proc_rom.cc:150:do_switch$634$rdmux[0][2][1]$1531:
      Old ports: A={ 1'1 $memory$flatten\top_inst.\U1.\frqdiv.$auto$proc_rom.cc:150:do_switch$634$rdmux[0][2][0]$a$1529 [12] 2'01 $memory$flatten\top_inst.\U1.\frqdiv.$auto$proc_rom.cc:150:do_switch$634$rdmux[0][2][0]$a$1529 [12:11] 1'0 }, B={ 1'0 $memory$flatten\top_inst.\U1.\frqdiv.$auto$proc_rom.cc:150:do_switch$634$rdmux[0][2][0]$a$1529 [12] 1'1 $memory$flatten\top_inst.\U1.\frqdiv.$auto$proc_rom.cc:150:do_switch$634$rdmux[0][2][0]$a$1529 [12:11] 1'0 $memory$flatten\top_inst.\U1.\frqdiv.$auto$proc_rom.cc:150:do_switch$634$rdmux[0][2][0]$a$1529 [11] }, Y={ $memory$flatten\top_inst.\U1.\frqdiv.$auto$proc_rom.cc:150:do_switch$634$rdmux[0][1][0]$b$1524 [15] $memory$flatten\top_inst.\U1.\frqdiv.$auto$proc_rom.cc:150:do_switch$634$rdmux[0][1][0]$b$1524 [11] $memory$flatten\top_inst.\U1.\frqdiv.$auto$proc_rom.cc:150:do_switch$634$rdmux[0][1][0]$b$1524 [14] $memory$flatten\top_inst.\U1.\frqdiv.$auto$proc_rom.cc:150:do_switch$634$rdmux[0][1][0]$b$1524 [5] $memory$flatten\top_inst.\U1.\frqdiv.$auto$proc_rom.cc:150:do_switch$634$rdmux[0][1][0]$b$1524 [2] $memory$flatten\top_inst.\U1.\frqdiv.$auto$proc_rom.cc:150:do_switch$634$rdmux[0][1][0]$b$1524 [3] $memory$flatten\top_inst.\U1.\frqdiv.$auto$proc_rom.cc:150:do_switch$634$rdmux[0][1][0]$b$1524 [8] }
      New ports: A={ 3'101 $memory$flatten\top_inst.\U1.\frqdiv.$auto$proc_rom.cc:150:do_switch$634$rdmux[0][2][0]$a$1529 [12:11] 1'0 }, B={ 2'01 $memory$flatten\top_inst.\U1.\frqdiv.$auto$proc_rom.cc:150:do_switch$634$rdmux[0][2][0]$a$1529 [12:11] 1'0 $memory$flatten\top_inst.\U1.\frqdiv.$auto$proc_rom.cc:150:do_switch$634$rdmux[0][2][0]$a$1529 [11] }, Y={ $memory$flatten\top_inst.\U1.\frqdiv.$auto$proc_rom.cc:150:do_switch$634$rdmux[0][1][0]$b$1524 [15:14] $memory$flatten\top_inst.\U1.\frqdiv.$auto$proc_rom.cc:150:do_switch$634$rdmux[0][1][0]$b$1524 [5] $memory$flatten\top_inst.\U1.\frqdiv.$auto$proc_rom.cc:150:do_switch$634$rdmux[0][1][0]$b$1524 [2] $memory$flatten\top_inst.\U1.\frqdiv.$auto$proc_rom.cc:150:do_switch$634$rdmux[0][1][0]$b$1524 [3] $memory$flatten\top_inst.\U1.\frqdiv.$auto$proc_rom.cc:150:do_switch$634$rdmux[0][1][0]$b$1524 [8] }
      New connections: $memory$flatten\top_inst.\U1.\frqdiv.$auto$proc_rom.cc:150:do_switch$634$rdmux[0][1][0]$b$1524 [11] = $memory$flatten\top_inst.\U1.\frqdiv.$auto$proc_rom.cc:150:do_switch$634$rdmux[0][2][0]$a$1529 [12]
    Consolidated identical input bits for $mux cell $memory$flatten\top_inst.\U1.\frqdiv.$auto$proc_rom.cc:150:do_switch$634$rdmux[0][2][2]$1534:
      Old ports: A={ 2'10 $memory$flatten\top_inst.\U1.\frqdiv.$auto$proc_rom.cc:150:do_switch$634$rdmux[0][2][2]$a$1535 [11] $memory$flatten\top_inst.\U1.\frqdiv.$auto$proc_rom.cc:150:do_switch$634$rdmux[0][2][2]$a$1535 [12] 1'0 $memory$flatten\top_inst.\U1.\frqdiv.$auto$proc_rom.cc:150:do_switch$634$rdmux[0][2][2]$a$1535 [12] $memory$flatten\top_inst.\U1.\frqdiv.$auto$proc_rom.cc:150:do_switch$634$rdmux[0][2][2]$a$1535 [12] $memory$flatten\top_inst.\U1.\frqdiv.$auto$proc_rom.cc:150:do_switch$634$rdmux[0][2][2]$a$1535 [12] }, B={ $memory$flatten\top_inst.\U1.\frqdiv.$auto$proc_rom.cc:150:do_switch$634$rdmux[0][2][2]$a$1535 [12] 1'1 $memory$flatten\top_inst.\U1.\frqdiv.$auto$proc_rom.cc:150:do_switch$634$rdmux[0][2][2]$a$1535 [11] $memory$flatten\top_inst.\U1.\frqdiv.$auto$proc_rom.cc:150:do_switch$634$rdmux[0][2][2]$a$1535 [11] $memory$flatten\top_inst.\U1.\frqdiv.$auto$proc_rom.cc:150:do_switch$634$rdmux[0][2][2]$a$1535 [11] $memory$flatten\top_inst.\U1.\frqdiv.$auto$proc_rom.cc:150:do_switch$634$rdmux[0][2][2]$a$1535 [12] 2'10 }, Y={ $memory$flatten\top_inst.\U1.\frqdiv.$auto$proc_rom.cc:150:do_switch$634$rdmux[0][1][1]$a$1526 [13] $memory$flatten\top_inst.\U1.\frqdiv.$auto$proc_rom.cc:150:do_switch$634$rdmux[0][1][1]$a$1526 [10] $memory$flatten\top_inst.\U1.\frqdiv.$auto$proc_rom.cc:150:do_switch$634$rdmux[0][1][1]$a$1526 [11] $memory$flatten\top_inst.\U1.\frqdiv.$auto$proc_rom.cc:150:do_switch$634$rdmux[0][1][1]$a$1526 [12] $memory$flatten\top_inst.\U1.\frqdiv.$auto$proc_rom.cc:150:do_switch$634$rdmux[0][1][1]$a$1526 [5] $memory$flatten\top_inst.\U1.\frqdiv.$auto$proc_rom.cc:150:do_switch$634$rdmux[0][1][1]$a$1526 [2:1] $memory$flatten\top_inst.\U1.\frqdiv.$auto$proc_rom.cc:150:do_switch$634$rdmux[0][1][1]$a$1526 [4] }
      New ports: A={ 2'10 $memory$flatten\top_inst.\U1.\frqdiv.$auto$proc_rom.cc:150:do_switch$634$rdmux[0][2][2]$a$1535 [12] 1'0 $memory$flatten\top_inst.\U1.\frqdiv.$auto$proc_rom.cc:150:do_switch$634$rdmux[0][2][2]$a$1535 [12] $memory$flatten\top_inst.\U1.\frqdiv.$auto$proc_rom.cc:150:do_switch$634$rdmux[0][2][2]$a$1535 [12] }, B={ $memory$flatten\top_inst.\U1.\frqdiv.$auto$proc_rom.cc:150:do_switch$634$rdmux[0][2][2]$a$1535 [12] 1'1 $memory$flatten\top_inst.\U1.\frqdiv.$auto$proc_rom.cc:150:do_switch$634$rdmux[0][2][2]$a$1535 [11] $memory$flatten\top_inst.\U1.\frqdiv.$auto$proc_rom.cc:150:do_switch$634$rdmux[0][2][2]$a$1535 [11] 2'10 }, Y={ $memory$flatten\top_inst.\U1.\frqdiv.$auto$proc_rom.cc:150:do_switch$634$rdmux[0][1][1]$a$1526 [13] $memory$flatten\top_inst.\U1.\frqdiv.$auto$proc_rom.cc:150:do_switch$634$rdmux[0][1][1]$a$1526 [10] $memory$flatten\top_inst.\U1.\frqdiv.$auto$proc_rom.cc:150:do_switch$634$rdmux[0][1][1]$a$1526 [12] $memory$flatten\top_inst.\U1.\frqdiv.$auto$proc_rom.cc:150:do_switch$634$rdmux[0][1][1]$a$1526 [5] $memory$flatten\top_inst.\U1.\frqdiv.$auto$proc_rom.cc:150:do_switch$634$rdmux[0][1][1]$a$1526 [1] $memory$flatten\top_inst.\U1.\frqdiv.$auto$proc_rom.cc:150:do_switch$634$rdmux[0][1][1]$a$1526 [4] }
      New connections: { $memory$flatten\top_inst.\U1.\frqdiv.$auto$proc_rom.cc:150:do_switch$634$rdmux[0][1][1]$a$1526 [11] $memory$flatten\top_inst.\U1.\frqdiv.$auto$proc_rom.cc:150:do_switch$634$rdmux[0][1][1]$a$1526 [2] } = { $memory$flatten\top_inst.\U1.\frqdiv.$auto$proc_rom.cc:150:do_switch$634$rdmux[0][2][2]$a$1535 [11] $memory$flatten\top_inst.\U1.\frqdiv.$auto$proc_rom.cc:150:do_switch$634$rdmux[0][2][2]$a$1535 [12] }
  Optimizing cells in module \ice40hx8k.
Performed a total of 2 changes.

17.29.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ice40hx8k'.
Removed a total of 0 cells.

17.29.13. Executing OPT_DFF pass (perform DFF optimizations).
Adding SRST signal on $auto$ff.cc:266:slice$1264 ($dffe) from module ice40hx8k (D = $auto$wreduce.cc:455:run$1321 [18:6], Q = \uart_inst.uart_tx_inst.prescale_reg [18:6], rval = 13'0000000000000).
Setting constant 0-bit at position 0 on $auto$ff.cc:266:slice$1301 ($adffe) from module ice40hx8k.

17.29.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ice40hx8k..
Removed 0 unused cells and 1 unused wires.
<suppressed ~1 debug messages>

17.29.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module ice40hx8k.

17.29.16. Rerunning OPT passes. (Maybe there is more to do..)

17.29.17. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \ice40hx8k..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~24 debug messages>

17.29.18. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \ice40hx8k.
    Consolidated identical input bits for $mux cell $flatten\top_inst.\U1.\seq_div.$procmux$1003:
      Old ports: A={ \top_inst.U1.seq_div.dividend 7'0000000 }, B={ $flatten\top_inst.\U1.\seq_div.$3\next_r[23:0] [23:8] \top_inst.U1.seq_div.R [6:1] 1'0 }, Y=\top_inst.U1.seq_div.next_r [23:1]
      New ports: A={ \top_inst.U1.seq_div.dividend 6'000000 }, B={ $flatten\top_inst.\U1.\seq_div.$3\next_r[23:0] [23:8] \top_inst.U1.seq_div.R [6:1] }, Y=\top_inst.U1.seq_div.next_r [23:2]
      New connections: \top_inst.U1.seq_div.next_r [1] = 1'0
  Optimizing cells in module \ice40hx8k.
Performed a total of 1 changes.

17.29.19. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ice40hx8k'.
Removed a total of 0 cells.

17.29.20. Executing OPT_DFF pass (perform DFF optimizations).

17.29.21. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ice40hx8k..

17.29.22. Executing OPT_EXPR pass (perform const folding).
Optimizing module ice40hx8k.

17.29.23. Rerunning OPT passes. (Maybe there is more to do..)

17.29.24. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \ice40hx8k..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~24 debug messages>

17.29.25. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \ice40hx8k.
Performed a total of 0 changes.

17.29.26. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ice40hx8k'.
Removed a total of 0 cells.

17.29.27. Executing OPT_DFF pass (perform DFF optimizations).
Setting constant 0-bit at position 0 on $auto$ff.cc:266:slice$1566 ($adffe) from module ice40hx8k.

17.29.28. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ice40hx8k..

17.29.29. Executing OPT_EXPR pass (perform const folding).
Optimizing module ice40hx8k.

17.29.30. Rerunning OPT passes. (Maybe there is more to do..)

17.29.31. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \ice40hx8k..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~24 debug messages>

17.29.32. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \ice40hx8k.
    Consolidated identical input bits for $mux cell $flatten\top_inst.\U1.\seq_div.$procmux$1003:
      Old ports: A={ \top_inst.U1.seq_div.dividend 6'000000 }, B={ $flatten\top_inst.\U1.\seq_div.$3\next_r[23:0] [23:8] \top_inst.U1.seq_div.R [6:2] 1'0 }, Y=\top_inst.U1.seq_div.next_r [23:2]
      New ports: A={ \top_inst.U1.seq_div.dividend 5'00000 }, B={ $flatten\top_inst.\U1.\seq_div.$3\next_r[23:0] [23:8] \top_inst.U1.seq_div.R [6:2] }, Y=\top_inst.U1.seq_div.next_r [23:3]
      New connections: \top_inst.U1.seq_div.next_r [2] = 1'0
  Optimizing cells in module \ice40hx8k.
Performed a total of 1 changes.

17.29.33. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ice40hx8k'.
Removed a total of 0 cells.

17.29.34. Executing OPT_DFF pass (perform DFF optimizations).

17.29.35. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ice40hx8k..

17.29.36. Executing OPT_EXPR pass (perform const folding).
Optimizing module ice40hx8k.

17.29.37. Rerunning OPT passes. (Maybe there is more to do..)

17.29.38. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \ice40hx8k..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~24 debug messages>

17.29.39. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \ice40hx8k.
Performed a total of 0 changes.

17.29.40. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ice40hx8k'.
Removed a total of 0 cells.

17.29.41. Executing OPT_DFF pass (perform DFF optimizations).
Setting constant 0-bit at position 0 on $auto$ff.cc:266:slice$1567 ($adffe) from module ice40hx8k.

17.29.42. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ice40hx8k..

17.29.43. Executing OPT_EXPR pass (perform const folding).
Optimizing module ice40hx8k.

17.29.44. Rerunning OPT passes. (Maybe there is more to do..)

17.29.45. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \ice40hx8k..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~24 debug messages>

17.29.46. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \ice40hx8k.
    Consolidated identical input bits for $mux cell $flatten\top_inst.\U1.\seq_div.$procmux$1003:
      Old ports: A={ \top_inst.U1.seq_div.dividend 5'00000 }, B={ $flatten\top_inst.\U1.\seq_div.$3\next_r[23:0] [23:8] \top_inst.U1.seq_div.R [6:3] 1'0 }, Y=\top_inst.U1.seq_div.next_r [23:3]
      New ports: A={ \top_inst.U1.seq_div.dividend 4'0000 }, B={ $flatten\top_inst.\U1.\seq_div.$3\next_r[23:0] [23:8] \top_inst.U1.seq_div.R [6:3] }, Y=\top_inst.U1.seq_div.next_r [23:4]
      New connections: \top_inst.U1.seq_div.next_r [3] = 1'0
  Optimizing cells in module \ice40hx8k.
Performed a total of 1 changes.

17.29.47. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ice40hx8k'.
Removed a total of 0 cells.

17.29.48. Executing OPT_DFF pass (perform DFF optimizations).

17.29.49. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ice40hx8k..

17.29.50. Executing OPT_EXPR pass (perform const folding).
Optimizing module ice40hx8k.

17.29.51. Rerunning OPT passes. (Maybe there is more to do..)

17.29.52. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \ice40hx8k..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~24 debug messages>

17.29.53. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \ice40hx8k.
Performed a total of 0 changes.

17.29.54. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ice40hx8k'.
Removed a total of 0 cells.

17.29.55. Executing OPT_DFF pass (perform DFF optimizations).
Setting constant 0-bit at position 0 on $auto$ff.cc:266:slice$1568 ($adffe) from module ice40hx8k.

17.29.56. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ice40hx8k..

17.29.57. Executing OPT_EXPR pass (perform const folding).
Optimizing module ice40hx8k.

17.29.58. Rerunning OPT passes. (Maybe there is more to do..)

17.29.59. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \ice40hx8k..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~24 debug messages>

17.29.60. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \ice40hx8k.
    Consolidated identical input bits for $mux cell $flatten\top_inst.\U1.\seq_div.$procmux$1003:
      Old ports: A={ \top_inst.U1.seq_div.dividend 4'0000 }, B={ $flatten\top_inst.\U1.\seq_div.$3\next_r[23:0] [23:8] \top_inst.U1.seq_div.R [6:4] 1'0 }, Y=\top_inst.U1.seq_div.next_r [23:4]
      New ports: A={ \top_inst.U1.seq_div.dividend 3'000 }, B={ $flatten\top_inst.\U1.\seq_div.$3\next_r[23:0] [23:8] \top_inst.U1.seq_div.R [6:4] }, Y=\top_inst.U1.seq_div.next_r [23:5]
      New connections: \top_inst.U1.seq_div.next_r [4] = 1'0
  Optimizing cells in module \ice40hx8k.
Performed a total of 1 changes.

17.29.61. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ice40hx8k'.
Removed a total of 0 cells.

17.29.62. Executing OPT_DFF pass (perform DFF optimizations).

17.29.63. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ice40hx8k..

17.29.64. Executing OPT_EXPR pass (perform const folding).
Optimizing module ice40hx8k.

17.29.65. Rerunning OPT passes. (Maybe there is more to do..)

17.29.66. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \ice40hx8k..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~24 debug messages>

17.29.67. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \ice40hx8k.
Performed a total of 0 changes.

17.29.68. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ice40hx8k'.
Removed a total of 0 cells.

17.29.69. Executing OPT_DFF pass (perform DFF optimizations).
Setting constant 0-bit at position 0 on $auto$ff.cc:266:slice$1569 ($adffe) from module ice40hx8k.

17.29.70. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ice40hx8k..

17.29.71. Executing OPT_EXPR pass (perform const folding).
Optimizing module ice40hx8k.

17.29.72. Rerunning OPT passes. (Maybe there is more to do..)

17.29.73. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \ice40hx8k..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~24 debug messages>

17.29.74. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \ice40hx8k.
    Consolidated identical input bits for $mux cell $flatten\top_inst.\U1.\seq_div.$procmux$1003:
      Old ports: A={ \top_inst.U1.seq_div.dividend 3'000 }, B={ $flatten\top_inst.\U1.\seq_div.$3\next_r[23:0] [23:8] \top_inst.U1.seq_div.R [6:5] 1'0 }, Y=\top_inst.U1.seq_div.next_r [23:5]
      New ports: A={ \top_inst.U1.seq_div.dividend 2'00 }, B={ $flatten\top_inst.\U1.\seq_div.$3\next_r[23:0] [23:8] \top_inst.U1.seq_div.R [6:5] }, Y=\top_inst.U1.seq_div.next_r [23:6]
      New connections: \top_inst.U1.seq_div.next_r [5] = 1'0
  Optimizing cells in module \ice40hx8k.
Performed a total of 1 changes.

17.29.75. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ice40hx8k'.
Removed a total of 0 cells.

17.29.76. Executing OPT_DFF pass (perform DFF optimizations).

17.29.77. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ice40hx8k..

17.29.78. Executing OPT_EXPR pass (perform const folding).
Optimizing module ice40hx8k.

17.29.79. Rerunning OPT passes. (Maybe there is more to do..)

17.29.80. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \ice40hx8k..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~24 debug messages>

17.29.81. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \ice40hx8k.
Performed a total of 0 changes.

17.29.82. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ice40hx8k'.
Removed a total of 0 cells.

17.29.83. Executing OPT_DFF pass (perform DFF optimizations).
Setting constant 0-bit at position 0 on $auto$ff.cc:266:slice$1570 ($adffe) from module ice40hx8k.

17.29.84. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ice40hx8k..

17.29.85. Executing OPT_EXPR pass (perform const folding).
Optimizing module ice40hx8k.

17.29.86. Rerunning OPT passes. (Maybe there is more to do..)

17.29.87. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \ice40hx8k..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~24 debug messages>

17.29.88. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \ice40hx8k.
    Consolidated identical input bits for $mux cell $flatten\top_inst.\U1.\seq_div.$procmux$1003:
      Old ports: A={ \top_inst.U1.seq_div.dividend 2'00 }, B={ $flatten\top_inst.\U1.\seq_div.$3\next_r[23:0] [23:8] \top_inst.U1.seq_div.R [6] 1'0 }, Y=\top_inst.U1.seq_div.next_r [23:6]
      New ports: A={ \top_inst.U1.seq_div.dividend 1'0 }, B={ $flatten\top_inst.\U1.\seq_div.$3\next_r[23:0] [23:8] \top_inst.U1.seq_div.R [6] }, Y=\top_inst.U1.seq_div.next_r [23:7]
      New connections: \top_inst.U1.seq_div.next_r [6] = 1'0
  Optimizing cells in module \ice40hx8k.
Performed a total of 1 changes.

17.29.89. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ice40hx8k'.
Removed a total of 0 cells.

17.29.90. Executing OPT_DFF pass (perform DFF optimizations).

17.29.91. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ice40hx8k..

17.29.92. Executing OPT_EXPR pass (perform const folding).
Optimizing module ice40hx8k.

17.29.93. Rerunning OPT passes. (Maybe there is more to do..)

17.29.94. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \ice40hx8k..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~24 debug messages>

17.29.95. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \ice40hx8k.
Performed a total of 0 changes.

17.29.96. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ice40hx8k'.
Removed a total of 0 cells.

17.29.97. Executing OPT_DFF pass (perform DFF optimizations).
Setting constant 0-bit at position 0 on $auto$ff.cc:266:slice$1571 ($adffe) from module ice40hx8k.

17.29.98. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ice40hx8k..

17.29.99. Executing OPT_EXPR pass (perform const folding).
Optimizing module ice40hx8k.

17.29.100. Rerunning OPT passes. (Maybe there is more to do..)

17.29.101. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \ice40hx8k..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~24 debug messages>

17.29.102. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \ice40hx8k.
    Consolidated identical input bits for $mux cell $flatten\top_inst.\U1.\seq_div.$procmux$1003:
      Old ports: A={ \top_inst.U1.seq_div.dividend 1'0 }, B={ $flatten\top_inst.\U1.\seq_div.$3\next_r[23:0] [23:8] 1'0 }, Y=\top_inst.U1.seq_div.next_r [23:7]
      New ports: A=\top_inst.U1.seq_div.dividend, B=$flatten\top_inst.\U1.\seq_div.$3\next_r[23:0] [23:8], Y=\top_inst.U1.seq_div.next_r [23:8]
      New connections: \top_inst.U1.seq_div.next_r [7] = 1'0
  Optimizing cells in module \ice40hx8k.
Performed a total of 1 changes.

17.29.103. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ice40hx8k'.
Removed a total of 0 cells.

17.29.104. Executing OPT_DFF pass (perform DFF optimizations).

17.29.105. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ice40hx8k..

17.29.106. Executing OPT_EXPR pass (perform const folding).
Optimizing module ice40hx8k.

17.29.107. Rerunning OPT passes. (Maybe there is more to do..)

17.29.108. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \ice40hx8k..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~24 debug messages>

17.29.109. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \ice40hx8k.
Performed a total of 0 changes.

17.29.110. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ice40hx8k'.
Removed a total of 0 cells.

17.29.111. Executing OPT_DFF pass (perform DFF optimizations).
Setting constant 0-bit at position 0 on $auto$ff.cc:266:slice$1572 ($adffe) from module ice40hx8k.

17.29.112. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ice40hx8k..

17.29.113. Executing OPT_EXPR pass (perform const folding).
Optimizing module ice40hx8k.
<suppressed ~1 debug messages>

17.29.114. Rerunning OPT passes. (Maybe there is more to do..)

17.29.115. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \ice40hx8k..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~24 debug messages>

17.29.116. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \ice40hx8k.
Performed a total of 0 changes.

17.29.117. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ice40hx8k'.
Removed a total of 0 cells.

17.29.118. Executing OPT_DFF pass (perform DFF optimizations).

17.29.119. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ice40hx8k..
Removed 0 unused cells and 1 unused wires.
<suppressed ~1 debug messages>

17.29.120. Executing OPT_EXPR pass (perform const folding).
Optimizing module ice40hx8k.

17.29.121. Rerunning OPT passes. (Maybe there is more to do..)

17.29.122. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \ice40hx8k..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~24 debug messages>

17.29.123. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \ice40hx8k.
Performed a total of 0 changes.

17.29.124. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ice40hx8k'.
Removed a total of 0 cells.

17.29.125. Executing OPT_DFF pass (perform DFF optimizations).

17.29.126. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ice40hx8k..

17.29.127. Executing OPT_EXPR pass (perform const folding).
Optimizing module ice40hx8k.

17.29.128. Finished OPT passes. (There is nothing left to do.)

17.30. Executing ICE40_WRAPCARRY pass (wrap carries).

17.31. Executing TECHMAP pass (map to technology primitives).

17.31.1. Executing Verilog-2005 frontend: /home/shay/a/ece270/bin/../share/yosys/techmap.v
Parsing Verilog input from `/home/shay/a/ece270/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

17.31.2. Executing Verilog-2005 frontend: /home/shay/a/ece270/bin/../share/yosys/ice40/arith_map.v
Parsing Verilog input from `/home/shay/a/ece270/bin/../share/yosys/ice40/arith_map.v' to AST representation.
Generating RTLIL representation for module `\_80_ice40_alu'.
Successfully finished Verilog frontend.

17.31.3. Continuing TECHMAP pass.
Using extmapper simplemap for cells of type $mux.
Using template $paramod$fc972a7a46956c1788f3cb5257b53c8f1df2d0cc\_90_alu for cells of type $alu.
Using extmapper simplemap for cells of type $adffe.
Using extmapper simplemap for cells of type $not.
Using template $paramod$484d51534650924b7ed4c69e46eed3a56904771f\_80_ice40_alu for cells of type $alu.
Using extmapper simplemap for cells of type $lut.
Using extmapper maccmap for cells of type $macc.
  add { $flatten\top_inst.\U1.\SS_FSM.$sub$source/sound_series_fsm.sv:70$137_Y [31] $flatten\top_inst.\U1.\SS_FSM.$sub$source/sound_series_fsm.sv:70$137_Y [31] $flatten\top_inst.\U1.\SS_FSM.$sub$source/sound_series_fsm.sv:70$137_Y [31] $flatten\top_inst.\U1.\SS_FSM.$sub$source/sound_series_fsm.sv:70$137_Y [31] $flatten\top_inst.\U1.\SS_FSM.$sub$source/sound_series_fsm.sv:70$137_Y [31] $flatten\top_inst.\U1.\SS_FSM.$sub$source/sound_series_fsm.sv:70$137_Y [31] $flatten\top_inst.\U1.\SS_FSM.$sub$source/sound_series_fsm.sv:70$137_Y [31] $flatten\top_inst.\U1.\SS_FSM.$sub$source/sound_series_fsm.sv:70$137_Y [31] $flatten\top_inst.\U1.\SS_FSM.$sub$source/sound_series_fsm.sv:70$137_Y [31] $flatten\top_inst.\U1.\SS_FSM.$sub$source/sound_series_fsm.sv:70$137_Y [31] $flatten\top_inst.\U1.\SS_FSM.$sub$source/sound_series_fsm.sv:70$137_Y [31] $flatten\top_inst.\U1.\SS_FSM.$sub$source/sound_series_fsm.sv:70$137_Y [31] $flatten\top_inst.\U1.\SS_FSM.$sub$source/sound_series_fsm.sv:70$137_Y [31] $flatten\top_inst.\U1.\SS_FSM.$sub$source/sound_series_fsm.sv:70$137_Y [31] $flatten\top_inst.\U1.\SS_FSM.$sub$source/sound_series_fsm.sv:70$137_Y [31] $flatten\top_inst.\U1.\SS_FSM.$sub$source/sound_series_fsm.sv:70$137_Y [31] $flatten\top_inst.\U1.\SS_FSM.$sub$source/sound_series_fsm.sv:70$137_Y [31] $flatten\top_inst.\U1.\SS_FSM.$sub$source/sound_series_fsm.sv:70$137_Y [31] $flatten\top_inst.\U1.\SS_FSM.$sub$source/sound_series_fsm.sv:70$137_Y [31] $flatten\top_inst.\U1.\SS_FSM.$sub$source/sound_series_fsm.sv:70$137_Y [31] $flatten\top_inst.\U1.\SS_FSM.$sub$source/sound_series_fsm.sv:70$137_Y [31] $flatten\top_inst.\U1.\SS_FSM.$sub$source/sound_series_fsm.sv:70$137_Y [10:2] 1'1 $flatten\top_inst.\U1.\SS_FSM.$sub$source/sound_series_fsm.sv:70$137_Y [0] } (32 bits, unsigned)
  add 32'11111111111111111111111111111101 (32 bits, unsigned)
Using extmapper simplemap for cells of type $dffe.
Using extmapper simplemap for cells of type $or.
Using template $paramod$6f67705c43e5e94c02b6ebb52209ce5aa5ade4c1\_80_ice40_alu for cells of type $alu.
Using extmapper simplemap for cells of type $logic_not.
Using extmapper simplemap for cells of type $sdffce.
Using extmapper simplemap for cells of type $eq.
Using extmapper simplemap for cells of type $reduce_and.
Using extmapper simplemap for cells of type $reduce_or.
Using extmapper simplemap for cells of type $reduce_bool.
Using extmapper simplemap for cells of type $ne.
Using template $paramod$20b1d0597707d55efcb9664e40f63985956d7680\_80_ice40_alu for cells of type $alu.
Using template $paramod$8742280fdebca84e1c87f2a86ed84f62d558f4cc\_80_ice40_alu for cells of type $alu.
Using extmapper simplemap for cells of type $adff.
Using template $paramod$9398518f3a66906c93ac7eaad9a961f31111e0c1\_90_pmux for cells of type $pmux.
Using extmapper simplemap for cells of type $and.
Using template $paramod$97565c3687be688407d1272a293bd9d0ae6852dc\_90_pmux for cells of type $pmux.
Using extmapper simplemap for cells of type $logic_or.
Using template $paramod$5fb3cea3e36078ed44b85aadf768a6588af6651e\_80_ice40_alu for cells of type $alu.
Using template $paramod$constmap:d2b52b2873b8ac6fdf4d482b2b1857d688ffcd1d$paramod$69e287a62a5c7f41fd2c9969ff3a44b6a0ad0d2a\_90_shift_shiftx for cells of type $shiftx.
Using template $paramod$93b49458bab1c00eb32aff458c583f46ff61e60f\_80_ice40_alu for cells of type $alu.
Using extmapper simplemap for cells of type $logic_and.
Using template $paramod$c3cd1564c35d873179656addd6052d7ea8b6d991\_80_ice40_alu for cells of type $alu.
Using template $paramod$4e7ab332c4f4e7e4c8a648a6a417480f7ed6e86d\_80_ice40_alu for cells of type $alu.
Using template $paramod$2af30114e9bd4ccb04dad757b3f0a8f6bf0615b0\_80_ice40_alu for cells of type $alu.
Using template $paramod$521ce43182eecb9f60c72393a788160d2c356bf5\_90_pmux for cells of type $pmux.
Using template $paramod$645fe0cc96ae5edb83bff90cc2c78f4a20ca3e3c\_90_pmux for cells of type $pmux.
Using template $paramod$a1bc51c02ce12ac21eb18988e83292af48ed7d72\_80_ice40_alu for cells of type $alu.
Using template $paramod$6df0329addda9228fcc2546de2aaf14ad26c98e1\_80_ice40_alu for cells of type $alu.
Using template $paramod$c8f9642fe0e0f4527ea400b1bd678c474f53d556\_80_ice40_alu for cells of type $alu.
Using template $paramod$3ef7d3dd227da7627a99c5e5a6a4deb817573e39\_80_ice40_alu for cells of type $alu.
Using template $paramod$constmap:0926405b5b54609f48e76b9324b4f8bf7b09d41e$paramod$b5c0c851c47cd60343f9cd29f600668ee4a8a3fb\_90_shift_shiftx for cells of type $shift.
Using template $paramod$3826c06832e910ed7e3a5e37dc9a6adea7917f5a\_80_ice40_alu for cells of type $alu.
Using extmapper simplemap for cells of type $pos.
Using extmapper simplemap for cells of type $xor.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000000001 for cells of type $lcu.
Using template $paramod$fbc7873bff55778c0b3173955b7e4bce1d9d6834\_80_ice40_alu for cells of type $alu.
No more expansions possible.
<suppressed ~2495 debug messages>

17.32. Executing OPT pass (performing simple optimizations).

17.32.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module ice40hx8k.
<suppressed ~33821 debug messages>

17.32.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ice40hx8k'.
<suppressed ~30447 debug messages>
Removed a total of 10149 cells.

17.32.3. Executing OPT_DFF pass (perform DFF optimizations).

17.32.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ice40hx8k..
Removed 23824 unused cells and 744 unused wires.
<suppressed ~23825 debug messages>

17.32.5. Finished fast OPT passes.

17.33. Executing ICE40_OPT pass (performing simple optimizations).

17.33.1. Running ICE40 specific optimizations.
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) ice40hx8k.$auto$alumacc.cc:485:replace_alu$1333.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$1333.BB [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) ice40hx8k.$auto$alumacc.cc:485:replace_alu$1371.slice[0].carry: CO=\top_inst.U1.pwm.count [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) ice40hx8k.$auto$alumacc.cc:485:replace_alu$1393.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$1393.BB [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) ice40hx8k.$auto$alumacc.cc:485:replace_alu$1402.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$1402.BB [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) ice40hx8k.$auto$alumacc.cc:485:replace_alu$1402.slice[10].carry: CO=$auto$alumacc.cc:485:replace_alu$1402.C [10]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) ice40hx8k.$auto$alumacc.cc:485:replace_alu$1402.slice[11].carry: CO=$auto$alumacc.cc:485:replace_alu$1402.C [11]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) ice40hx8k.$auto$alumacc.cc:485:replace_alu$1402.slice[12].carry: CO=$auto$alumacc.cc:485:replace_alu$1402.C [12]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) ice40hx8k.$auto$alumacc.cc:485:replace_alu$1402.slice[13].carry: CO=$auto$alumacc.cc:485:replace_alu$1402.C [13]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) ice40hx8k.$auto$alumacc.cc:485:replace_alu$1402.slice[14].carry: CO=$auto$alumacc.cc:485:replace_alu$1402.C [14]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) ice40hx8k.$auto$alumacc.cc:485:replace_alu$1402.slice[15].carry: CO=$auto$alumacc.cc:485:replace_alu$1402.C [15]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) ice40hx8k.$auto$alumacc.cc:485:replace_alu$1402.slice[16].carry: CO=$auto$alumacc.cc:485:replace_alu$1402.C [16]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) ice40hx8k.$auto$alumacc.cc:485:replace_alu$1402.slice[17].carry: CO=$auto$alumacc.cc:485:replace_alu$1402.C [17]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) ice40hx8k.$auto$alumacc.cc:485:replace_alu$1402.slice[18].carry: CO=$auto$alumacc.cc:485:replace_alu$1402.C [18]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) ice40hx8k.$auto$alumacc.cc:485:replace_alu$1402.slice[19].carry: CO=$auto$alumacc.cc:485:replace_alu$1402.C [19]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) ice40hx8k.$auto$alumacc.cc:485:replace_alu$1402.slice[20].carry: CO=$auto$alumacc.cc:485:replace_alu$1402.C [20]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) ice40hx8k.$auto$alumacc.cc:485:replace_alu$1402.slice[21].carry: CO=$auto$alumacc.cc:485:replace_alu$1402.C [21]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) ice40hx8k.$auto$alumacc.cc:485:replace_alu$1402.slice[22].carry: CO=$auto$alumacc.cc:485:replace_alu$1402.C [22]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) ice40hx8k.$auto$alumacc.cc:485:replace_alu$1402.slice[23].carry: CO=$auto$alumacc.cc:485:replace_alu$1402.C [23]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) ice40hx8k.$auto$alumacc.cc:485:replace_alu$1402.slice[24].carry: CO=$auto$alumacc.cc:485:replace_alu$1402.C [24]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) ice40hx8k.$auto$alumacc.cc:485:replace_alu$1402.slice[25].carry: CO=$auto$alumacc.cc:485:replace_alu$1402.C [25]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) ice40hx8k.$auto$alumacc.cc:485:replace_alu$1402.slice[26].carry: CO=$auto$alumacc.cc:485:replace_alu$1402.C [26]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) ice40hx8k.$auto$alumacc.cc:485:replace_alu$1402.slice[27].carry: CO=$auto$alumacc.cc:485:replace_alu$1402.C [27]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) ice40hx8k.$auto$alumacc.cc:485:replace_alu$1402.slice[28].carry: CO=$auto$alumacc.cc:485:replace_alu$1402.C [28]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) ice40hx8k.$auto$alumacc.cc:485:replace_alu$1402.slice[29].carry: CO=$auto$alumacc.cc:485:replace_alu$1402.C [29]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) ice40hx8k.$auto$alumacc.cc:485:replace_alu$1402.slice[30].carry: CO=$auto$alumacc.cc:485:replace_alu$1402.C [30]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) ice40hx8k.$auto$alumacc.cc:485:replace_alu$1402.slice[31].carry: CO=$auto$alumacc.cc:485:replace_alu$1402.C [31]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) ice40hx8k.$auto$alumacc.cc:485:replace_alu$1402.slice[4].carry: CO=$auto$alumacc.cc:485:replace_alu$1402.C [4]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) ice40hx8k.$auto$alumacc.cc:485:replace_alu$1402.slice[5].carry: CO=$auto$alumacc.cc:485:replace_alu$1402.C [5]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) ice40hx8k.$auto$alumacc.cc:485:replace_alu$1402.slice[6].carry: CO=$auto$alumacc.cc:485:replace_alu$1402.C [6]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) ice40hx8k.$auto$alumacc.cc:485:replace_alu$1402.slice[7].carry: CO=$auto$alumacc.cc:485:replace_alu$1402.C [7]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) ice40hx8k.$auto$alumacc.cc:485:replace_alu$1402.slice[8].carry: CO=$auto$alumacc.cc:485:replace_alu$1402.C [8]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) ice40hx8k.$auto$alumacc.cc:485:replace_alu$1402.slice[9].carry: CO=$auto$alumacc.cc:485:replace_alu$1402.C [9]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) ice40hx8k.$auto$alumacc.cc:485:replace_alu$1405.slice[0].carry: CO=\uart_inst.uart_tx_inst.prescale_reg [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) ice40hx8k.$auto$alumacc.cc:485:replace_alu$1408.slice[0].carry: CO=\top_inst.U1.SS_FSM.count [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) ice40hx8k.$auto$alumacc.cc:485:replace_alu$1414.slice[0].carry: CO=\top_inst.U1.clk8.count [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) ice40hx8k.$auto$alumacc.cc:485:replace_alu$1417.slice[0].carry: CO=\top_inst.U1.clk_div.count [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) ice40hx8k.$auto$alumacc.cc:485:replace_alu$1420.slice[0].carry: CO=\top_inst.U1.osc.count [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) ice40hx8k.$auto$alumacc.cc:485:replace_alu$1423.slice[0].carry: CO=\top_inst.U1.pwm.count [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) ice40hx8k.$auto$alumacc.cc:485:replace_alu$1426.slice[0].carry: CO=\top_inst.U1.seq_div.count_div [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) ice40hx8k.$auto$alumacc.cc:485:replace_alu$1429.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$1429.BB [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) ice40hx8k.$auto$alumacc.cc:485:replace_alu$1435.slice[0].carry: CO=\uart_inst.uart_tx_inst.bit_cnt [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) ice40hx8k.$auto$maccmap.cc:240:synth$1741.slice[0].carry: CO=1'1
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) ice40hx8k.$auto$maccmap.cc:240:synth$1741.slice[1].carry: CO=$auto$maccmap.cc:240:synth$1741.C [1]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) ice40hx8k.$auto$opt_expr.cc:1942:replace_const_cells$1462.slice[0].carry: CO=\top_inst.U1.SS_FSM.count [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) ice40hx8k.$auto$opt_expr.cc:1942:replace_const_cells$1462.slice[9].carry: CO=$auto$opt_expr.cc:1942:replace_const_cells$1462.C [9]

17.33.2. Executing OPT_EXPR pass (perform const folding).
Optimizing module ice40hx8k.
<suppressed ~85 debug messages>

17.33.3. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ice40hx8k'.
<suppressed ~171 debug messages>
Removed a total of 57 cells.

17.33.4. Executing OPT_DFF pass (perform DFF optimizations).

17.33.5. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ice40hx8k..
Removed 3 unused cells and 30 unused wires.
<suppressed ~4 debug messages>

17.33.6. Rerunning OPT passes. (Removed registers in this run.)

17.33.7. Running ICE40 specific optimizations.
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) ice40hx8k.$auto$maccmap.cc:240:synth$1741.slice[2].carry: CO=1'1

17.33.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module ice40hx8k.
<suppressed ~28 debug messages>

17.33.9. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ice40hx8k'.
Removed a total of 0 cells.

17.33.10. Executing OPT_DFF pass (perform DFF optimizations).

17.33.11. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ice40hx8k..
Removed 0 unused cells and 27 unused wires.
<suppressed ~1 debug messages>

17.33.12. Rerunning OPT passes. (Removed registers in this run.)

17.33.13. Running ICE40 specific optimizations.
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) ice40hx8k.$auto$maccmap.cc:240:synth$1741.slice[3].carry: CO=1'1

17.33.14. Executing OPT_EXPR pass (perform const folding).
Optimizing module ice40hx8k.

17.33.15. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ice40hx8k'.
Removed a total of 0 cells.

17.33.16. Executing OPT_DFF pass (perform DFF optimizations).

17.33.17. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ice40hx8k..

17.33.18. Rerunning OPT passes. (Removed registers in this run.)

17.33.19. Running ICE40 specific optimizations.
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) ice40hx8k.$auto$maccmap.cc:240:synth$1741.slice[4].carry: CO=1'1

17.33.20. Executing OPT_EXPR pass (perform const folding).
Optimizing module ice40hx8k.

17.33.21. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ice40hx8k'.
Removed a total of 0 cells.

17.33.22. Executing OPT_DFF pass (perform DFF optimizations).

17.33.23. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ice40hx8k..

17.33.24. Rerunning OPT passes. (Removed registers in this run.)

17.33.25. Running ICE40 specific optimizations.
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) ice40hx8k.$auto$maccmap.cc:240:synth$1741.slice[5].carry: CO=1'1

17.33.26. Executing OPT_EXPR pass (perform const folding).
Optimizing module ice40hx8k.

17.33.27. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ice40hx8k'.
Removed a total of 0 cells.

17.33.28. Executing OPT_DFF pass (perform DFF optimizations).

17.33.29. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ice40hx8k..

17.33.30. Rerunning OPT passes. (Removed registers in this run.)

17.33.31. Running ICE40 specific optimizations.
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) ice40hx8k.$auto$maccmap.cc:240:synth$1741.slice[6].carry: CO=1'1

17.33.32. Executing OPT_EXPR pass (perform const folding).
Optimizing module ice40hx8k.

17.33.33. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ice40hx8k'.
Removed a total of 0 cells.

17.33.34. Executing OPT_DFF pass (perform DFF optimizations).

17.33.35. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ice40hx8k..

17.33.36. Rerunning OPT passes. (Removed registers in this run.)

17.33.37. Running ICE40 specific optimizations.
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) ice40hx8k.$auto$maccmap.cc:240:synth$1741.slice[7].carry: CO=1'1

17.33.38. Executing OPT_EXPR pass (perform const folding).
Optimizing module ice40hx8k.

17.33.39. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ice40hx8k'.
Removed a total of 0 cells.

17.33.40. Executing OPT_DFF pass (perform DFF optimizations).

17.33.41. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ice40hx8k..

17.33.42. Rerunning OPT passes. (Removed registers in this run.)

17.33.43. Running ICE40 specific optimizations.
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) ice40hx8k.$auto$maccmap.cc:240:synth$1741.slice[8].carry: CO=1'1

17.33.44. Executing OPT_EXPR pass (perform const folding).
Optimizing module ice40hx8k.

17.33.45. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ice40hx8k'.
Removed a total of 0 cells.

17.33.46. Executing OPT_DFF pass (perform DFF optimizations).

17.33.47. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ice40hx8k..

17.33.48. Rerunning OPT passes. (Removed registers in this run.)

17.33.49. Running ICE40 specific optimizations.
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) ice40hx8k.$auto$maccmap.cc:240:synth$1741.slice[9].carry: CO=1'1

17.33.50. Executing OPT_EXPR pass (perform const folding).
Optimizing module ice40hx8k.

17.33.51. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ice40hx8k'.
Removed a total of 0 cells.

17.33.52. Executing OPT_DFF pass (perform DFF optimizations).

17.33.53. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ice40hx8k..

17.33.54. Rerunning OPT passes. (Removed registers in this run.)

17.33.55. Running ICE40 specific optimizations.
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) ice40hx8k.$auto$maccmap.cc:240:synth$1741.slice[10].carry: CO=1'1

17.33.56. Executing OPT_EXPR pass (perform const folding).
Optimizing module ice40hx8k.

17.33.57. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ice40hx8k'.
Removed a total of 0 cells.

17.33.58. Executing OPT_DFF pass (perform DFF optimizations).

17.33.59. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ice40hx8k..

17.33.60. Rerunning OPT passes. (Removed registers in this run.)

17.33.61. Running ICE40 specific optimizations.
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) ice40hx8k.$auto$maccmap.cc:240:synth$1741.slice[11].carry: CO=1'1

17.33.62. Executing OPT_EXPR pass (perform const folding).
Optimizing module ice40hx8k.

17.33.63. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ice40hx8k'.
Removed a total of 0 cells.

17.33.64. Executing OPT_DFF pass (perform DFF optimizations).

17.33.65. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ice40hx8k..

17.33.66. Rerunning OPT passes. (Removed registers in this run.)

17.33.67. Running ICE40 specific optimizations.
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) ice40hx8k.$auto$maccmap.cc:240:synth$1741.slice[12].carry: CO=1'1

17.33.68. Executing OPT_EXPR pass (perform const folding).
Optimizing module ice40hx8k.

17.33.69. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ice40hx8k'.
<suppressed ~3 debug messages>
Removed a total of 1 cells.

17.33.70. Executing OPT_DFF pass (perform DFF optimizations).

17.33.71. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ice40hx8k..

17.33.72. Rerunning OPT passes. (Removed registers in this run.)

17.33.73. Running ICE40 specific optimizations.
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) ice40hx8k.$auto$maccmap.cc:240:synth$1741.slice[13].carry: CO=1'1

17.33.74. Executing OPT_EXPR pass (perform const folding).
Optimizing module ice40hx8k.

17.33.75. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ice40hx8k'.
<suppressed ~3 debug messages>
Removed a total of 1 cells.

17.33.76. Executing OPT_DFF pass (perform DFF optimizations).

17.33.77. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ice40hx8k..

17.33.78. Rerunning OPT passes. (Removed registers in this run.)

17.33.79. Running ICE40 specific optimizations.
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) ice40hx8k.$auto$maccmap.cc:240:synth$1741.slice[14].carry: CO=1'1

17.33.80. Executing OPT_EXPR pass (perform const folding).
Optimizing module ice40hx8k.

17.33.81. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ice40hx8k'.
<suppressed ~3 debug messages>
Removed a total of 1 cells.

17.33.82. Executing OPT_DFF pass (perform DFF optimizations).

17.33.83. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ice40hx8k..

17.33.84. Rerunning OPT passes. (Removed registers in this run.)

17.33.85. Running ICE40 specific optimizations.
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) ice40hx8k.$auto$maccmap.cc:240:synth$1741.slice[15].carry: CO=1'1

17.33.86. Executing OPT_EXPR pass (perform const folding).
Optimizing module ice40hx8k.

17.33.87. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ice40hx8k'.
<suppressed ~3 debug messages>
Removed a total of 1 cells.

17.33.88. Executing OPT_DFF pass (perform DFF optimizations).

17.33.89. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ice40hx8k..

17.33.90. Rerunning OPT passes. (Removed registers in this run.)

17.33.91. Running ICE40 specific optimizations.
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) ice40hx8k.$auto$maccmap.cc:240:synth$1741.slice[16].carry: CO=1'1

17.33.92. Executing OPT_EXPR pass (perform const folding).
Optimizing module ice40hx8k.

17.33.93. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ice40hx8k'.
<suppressed ~3 debug messages>
Removed a total of 1 cells.

17.33.94. Executing OPT_DFF pass (perform DFF optimizations).

17.33.95. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ice40hx8k..

17.33.96. Rerunning OPT passes. (Removed registers in this run.)

17.33.97. Running ICE40 specific optimizations.
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) ice40hx8k.$auto$maccmap.cc:240:synth$1741.slice[17].carry: CO=1'1

17.33.98. Executing OPT_EXPR pass (perform const folding).
Optimizing module ice40hx8k.

17.33.99. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ice40hx8k'.
<suppressed ~3 debug messages>
Removed a total of 1 cells.

17.33.100. Executing OPT_DFF pass (perform DFF optimizations).

17.33.101. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ice40hx8k..

17.33.102. Rerunning OPT passes. (Removed registers in this run.)

17.33.103. Running ICE40 specific optimizations.
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) ice40hx8k.$auto$maccmap.cc:240:synth$1741.slice[18].carry: CO=1'1

17.33.104. Executing OPT_EXPR pass (perform const folding).
Optimizing module ice40hx8k.

17.33.105. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ice40hx8k'.
<suppressed ~3 debug messages>
Removed a total of 1 cells.

17.33.106. Executing OPT_DFF pass (perform DFF optimizations).

17.33.107. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ice40hx8k..

17.33.108. Rerunning OPT passes. (Removed registers in this run.)

17.33.109. Running ICE40 specific optimizations.
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) ice40hx8k.$auto$maccmap.cc:240:synth$1741.slice[19].carry: CO=1'1

17.33.110. Executing OPT_EXPR pass (perform const folding).
Optimizing module ice40hx8k.

17.33.111. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ice40hx8k'.
<suppressed ~3 debug messages>
Removed a total of 1 cells.

17.33.112. Executing OPT_DFF pass (perform DFF optimizations).

17.33.113. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ice40hx8k..

17.33.114. Rerunning OPT passes. (Removed registers in this run.)

17.33.115. Running ICE40 specific optimizations.
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) ice40hx8k.$auto$maccmap.cc:240:synth$1741.slice[20].carry: CO=1'1

17.33.116. Executing OPT_EXPR pass (perform const folding).
Optimizing module ice40hx8k.

17.33.117. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ice40hx8k'.
<suppressed ~3 debug messages>
Removed a total of 1 cells.

17.33.118. Executing OPT_DFF pass (perform DFF optimizations).

17.33.119. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ice40hx8k..

17.33.120. Rerunning OPT passes. (Removed registers in this run.)

17.33.121. Running ICE40 specific optimizations.
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) ice40hx8k.$auto$maccmap.cc:240:synth$1741.slice[21].carry: CO=1'1

17.33.122. Executing OPT_EXPR pass (perform const folding).
Optimizing module ice40hx8k.

17.33.123. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ice40hx8k'.
<suppressed ~3 debug messages>
Removed a total of 1 cells.

17.33.124. Executing OPT_DFF pass (perform DFF optimizations).

17.33.125. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ice40hx8k..

17.33.126. Rerunning OPT passes. (Removed registers in this run.)

17.33.127. Running ICE40 specific optimizations.
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) ice40hx8k.$auto$maccmap.cc:240:synth$1741.slice[22].carry: CO=1'1

17.33.128. Executing OPT_EXPR pass (perform const folding).
Optimizing module ice40hx8k.

17.33.129. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ice40hx8k'.
<suppressed ~3 debug messages>
Removed a total of 1 cells.

17.33.130. Executing OPT_DFF pass (perform DFF optimizations).

17.33.131. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ice40hx8k..

17.33.132. Rerunning OPT passes. (Removed registers in this run.)

17.33.133. Running ICE40 specific optimizations.
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) ice40hx8k.$auto$maccmap.cc:240:synth$1741.slice[23].carry: CO=1'1

17.33.134. Executing OPT_EXPR pass (perform const folding).
Optimizing module ice40hx8k.

17.33.135. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ice40hx8k'.
<suppressed ~3 debug messages>
Removed a total of 1 cells.

17.33.136. Executing OPT_DFF pass (perform DFF optimizations).

17.33.137. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ice40hx8k..

17.33.138. Rerunning OPT passes. (Removed registers in this run.)

17.33.139. Running ICE40 specific optimizations.
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) ice40hx8k.$auto$maccmap.cc:240:synth$1741.slice[24].carry: CO=1'1

17.33.140. Executing OPT_EXPR pass (perform const folding).
Optimizing module ice40hx8k.

17.33.141. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ice40hx8k'.
<suppressed ~3 debug messages>
Removed a total of 1 cells.

17.33.142. Executing OPT_DFF pass (perform DFF optimizations).

17.33.143. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ice40hx8k..

17.33.144. Rerunning OPT passes. (Removed registers in this run.)

17.33.145. Running ICE40 specific optimizations.
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) ice40hx8k.$auto$maccmap.cc:240:synth$1741.slice[25].carry: CO=1'1

17.33.146. Executing OPT_EXPR pass (perform const folding).
Optimizing module ice40hx8k.

17.33.147. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ice40hx8k'.
<suppressed ~3 debug messages>
Removed a total of 1 cells.

17.33.148. Executing OPT_DFF pass (perform DFF optimizations).

17.33.149. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ice40hx8k..

17.33.150. Rerunning OPT passes. (Removed registers in this run.)

17.33.151. Running ICE40 specific optimizations.
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) ice40hx8k.$auto$maccmap.cc:240:synth$1741.slice[26].carry: CO=1'1

17.33.152. Executing OPT_EXPR pass (perform const folding).
Optimizing module ice40hx8k.

17.33.153. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ice40hx8k'.
<suppressed ~3 debug messages>
Removed a total of 1 cells.

17.33.154. Executing OPT_DFF pass (perform DFF optimizations).

17.33.155. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ice40hx8k..

17.33.156. Rerunning OPT passes. (Removed registers in this run.)

17.33.157. Running ICE40 specific optimizations.
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) ice40hx8k.$auto$maccmap.cc:240:synth$1741.slice[27].carry: CO=1'1

17.33.158. Executing OPT_EXPR pass (perform const folding).
Optimizing module ice40hx8k.

17.33.159. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ice40hx8k'.
<suppressed ~3 debug messages>
Removed a total of 1 cells.

17.33.160. Executing OPT_DFF pass (perform DFF optimizations).

17.33.161. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ice40hx8k..

17.33.162. Rerunning OPT passes. (Removed registers in this run.)

17.33.163. Running ICE40 specific optimizations.
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) ice40hx8k.$auto$maccmap.cc:240:synth$1741.slice[28].carry: CO=1'1

17.33.164. Executing OPT_EXPR pass (perform const folding).
Optimizing module ice40hx8k.

17.33.165. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ice40hx8k'.
<suppressed ~3 debug messages>
Removed a total of 1 cells.

17.33.166. Executing OPT_DFF pass (perform DFF optimizations).

17.33.167. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ice40hx8k..

17.33.168. Rerunning OPT passes. (Removed registers in this run.)

17.33.169. Running ICE40 specific optimizations.
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) ice40hx8k.$auto$maccmap.cc:240:synth$1741.slice[29].carry: CO=1'1

17.33.170. Executing OPT_EXPR pass (perform const folding).
Optimizing module ice40hx8k.

17.33.171. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ice40hx8k'.
<suppressed ~3 debug messages>
Removed a total of 1 cells.

17.33.172. Executing OPT_DFF pass (perform DFF optimizations).

17.33.173. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ice40hx8k..

17.33.174. Rerunning OPT passes. (Removed registers in this run.)

17.33.175. Running ICE40 specific optimizations.
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) ice40hx8k.$auto$maccmap.cc:240:synth$1741.slice[30].carry: CO=1'1

17.33.176. Executing OPT_EXPR pass (perform const folding).
Optimizing module ice40hx8k.

17.33.177. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ice40hx8k'.
<suppressed ~3 debug messages>
Removed a total of 1 cells.

17.33.178. Executing OPT_DFF pass (perform DFF optimizations).

17.33.179. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ice40hx8k..
Removed 0 unused cells and 1 unused wires.
<suppressed ~1 debug messages>

17.33.180. Rerunning OPT passes. (Removed registers in this run.)

17.33.181. Running ICE40 specific optimizations.
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) ice40hx8k.$auto$maccmap.cc:240:synth$1741.slice[31].carry: CO=1'1

17.33.182. Executing OPT_EXPR pass (perform const folding).
Optimizing module ice40hx8k.

17.33.183. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ice40hx8k'.
<suppressed ~3 debug messages>
Removed a total of 1 cells.

17.33.184. Executing OPT_DFF pass (perform DFF optimizations).

17.33.185. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ice40hx8k..
Removed 0 unused cells and 1 unused wires.
<suppressed ~1 debug messages>

17.33.186. Rerunning OPT passes. (Removed registers in this run.)

17.33.187. Running ICE40 specific optimizations.

17.33.188. Executing OPT_EXPR pass (perform const folding).
Optimizing module ice40hx8k.

17.33.189. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ice40hx8k'.
Removed a total of 0 cells.

17.33.190. Executing OPT_DFF pass (perform DFF optimizations).

17.33.191. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ice40hx8k..

17.33.192. Finished OPT passes. (There is nothing left to do.)

17.34. Executing DFFLEGALIZE pass (convert FFs to types supported by the target).

17.35. Executing TECHMAP pass (map to technology primitives).

17.35.1. Executing Verilog-2005 frontend: /home/shay/a/ece270/bin/../share/yosys/ice40/ff_map.v
Parsing Verilog input from `/home/shay/a/ece270/bin/../share/yosys/ice40/ff_map.v' to AST representation.
Generating RTLIL representation for module `\$_DFF_N_'.
Generating RTLIL representation for module `\$_DFF_P_'.
Generating RTLIL representation for module `\$_DFFE_NP_'.
Generating RTLIL representation for module `\$_DFFE_PP_'.
Generating RTLIL representation for module `\$_DFF_NP0_'.
Generating RTLIL representation for module `\$_DFF_NP1_'.
Generating RTLIL representation for module `\$_DFF_PP0_'.
Generating RTLIL representation for module `\$_DFF_PP1_'.
Generating RTLIL representation for module `\$_DFFE_NP0P_'.
Generating RTLIL representation for module `\$_DFFE_NP1P_'.
Generating RTLIL representation for module `\$_DFFE_PP0P_'.
Generating RTLIL representation for module `\$_DFFE_PP1P_'.
Generating RTLIL representation for module `\$_SDFF_NP0_'.
Generating RTLIL representation for module `\$_SDFF_NP1_'.
Generating RTLIL representation for module `\$_SDFF_PP0_'.
Generating RTLIL representation for module `\$_SDFF_PP1_'.
Generating RTLIL representation for module `\$_SDFFCE_NP0P_'.
Generating RTLIL representation for module `\$_SDFFCE_NP1P_'.
Generating RTLIL representation for module `\$_SDFFCE_PP0P_'.
Generating RTLIL representation for module `\$_SDFFCE_PP1P_'.
Successfully finished Verilog frontend.

17.35.2. Continuing TECHMAP pass.
Using template \$_DFF_PP0_ for cells of type $_DFF_PP0_.
Using template \$_DFFE_PP0P_ for cells of type $_DFFE_PP0P_.
Using template \$_DFFE_PP1P_ for cells of type $_DFFE_PP1P_.
Using template \$_DFF_PP1_ for cells of type $_DFF_PP1_.
Using template \$_SDFFCE_PP1P_ for cells of type $_SDFFCE_PP1P_.
Using template \$_SDFFCE_PP0P_ for cells of type $_SDFFCE_PP0P_.
Using template \$_DFFE_PP_ for cells of type $_DFFE_PP_.
No more expansions possible.
<suppressed ~223 debug messages>

17.36. Executing OPT_EXPR pass (perform const folding).
Optimizing module ice40hx8k.

17.37. Executing SIMPLEMAP pass (map simple cells to gate primitives).
Mapping ice40hx8k.$auto$alumacc.cc:485:replace_alu$1402.slice[0].carry ($lut).
Mapping ice40hx8k.$auto$alumacc.cc:485:replace_alu$1402.slice[18].carry ($lut).
Mapping ice40hx8k.$auto$alumacc.cc:485:replace_alu$1405.slice[0].carry ($lut).
Mapping ice40hx8k.$auto$alumacc.cc:485:replace_alu$1408.slice[0].carry ($lut).
Mapping ice40hx8k.$auto$alumacc.cc:485:replace_alu$1414.slice[0].carry ($lut).
Mapping ice40hx8k.$auto$alumacc.cc:485:replace_alu$1417.slice[0].carry ($lut).
Mapping ice40hx8k.$auto$alumacc.cc:485:replace_alu$1420.slice[0].carry ($lut).
Mapping ice40hx8k.$auto$alumacc.cc:485:replace_alu$1423.slice[0].carry ($lut).
Mapping ice40hx8k.$auto$alumacc.cc:485:replace_alu$1426.slice[0].carry ($lut).
Mapping ice40hx8k.$auto$alumacc.cc:485:replace_alu$1429.slice[0].carry ($lut).
Mapping ice40hx8k.$auto$alumacc.cc:485:replace_alu$1435.slice[0].carry ($lut).
Mapping ice40hx8k.$auto$maccmap.cc:240:synth$1741.slice[0].carry ($lut).
Mapping ice40hx8k.$auto$maccmap.cc:240:synth$1741.slice[10].carry ($lut).
Mapping ice40hx8k.$auto$maccmap.cc:240:synth$1741.slice[11].carry ($lut).
Mapping ice40hx8k.$auto$maccmap.cc:240:synth$1741.slice[1].carry ($lut).
Mapping ice40hx8k.$auto$maccmap.cc:240:synth$1741.slice[2].carry ($lut).
Mapping ice40hx8k.$auto$maccmap.cc:240:synth$1741.slice[3].carry ($lut).
Mapping ice40hx8k.$auto$maccmap.cc:240:synth$1741.slice[4].carry ($lut).
Mapping ice40hx8k.$auto$maccmap.cc:240:synth$1741.slice[5].carry ($lut).
Mapping ice40hx8k.$auto$maccmap.cc:240:synth$1741.slice[6].carry ($lut).
Mapping ice40hx8k.$auto$maccmap.cc:240:synth$1741.slice[7].carry ($lut).
Mapping ice40hx8k.$auto$maccmap.cc:240:synth$1741.slice[8].carry ($lut).
Mapping ice40hx8k.$auto$maccmap.cc:240:synth$1741.slice[9].carry ($lut).
Mapping ice40hx8k.$auto$opt_expr.cc:1942:replace_const_cells$1462.slice[0].carry ($lut).
Mapping ice40hx8k.$auto$opt_expr.cc:1942:replace_const_cells$1462.slice[9].carry ($lut).

17.38. Executing ICE40_OPT pass (performing simple optimizations).

17.38.1. Running ICE40 specific optimizations.

17.38.2. Executing OPT_EXPR pass (perform const folding).
Optimizing module ice40hx8k.
<suppressed ~662 debug messages>

17.38.3. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ice40hx8k'.
<suppressed ~591 debug messages>
Removed a total of 197 cells.

17.38.4. Executing OPT_DFF pass (perform DFF optimizations).

17.38.5. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ice40hx8k..
Removed 9 unused cells and 1242 unused wires.
<suppressed ~10 debug messages>

17.38.6. Rerunning OPT passes. (Removed registers in this run.)

17.38.7. Running ICE40 specific optimizations.

17.38.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module ice40hx8k.
<suppressed ~20 debug messages>

17.38.9. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ice40hx8k'.
<suppressed ~48 debug messages>
Removed a total of 16 cells.

17.38.10. Executing OPT_DFF pass (perform DFF optimizations).

17.38.11. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ice40hx8k..

17.38.12. Rerunning OPT passes. (Removed registers in this run.)

17.38.13. Running ICE40 specific optimizations.

17.38.14. Executing OPT_EXPR pass (perform const folding).
Optimizing module ice40hx8k.
<suppressed ~1 debug messages>

17.38.15. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ice40hx8k'.
Removed a total of 0 cells.

17.38.16. Executing OPT_DFF pass (perform DFF optimizations).

17.38.17. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ice40hx8k..

17.38.18. Rerunning OPT passes. (Removed registers in this run.)

17.38.19. Running ICE40 specific optimizations.

17.38.20. Executing OPT_EXPR pass (perform const folding).
Optimizing module ice40hx8k.

17.38.21. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ice40hx8k'.
Removed a total of 0 cells.

17.38.22. Executing OPT_DFF pass (perform DFF optimizations).

17.38.23. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ice40hx8k..

17.38.24. Finished OPT passes. (There is nothing left to do.)

17.39. Executing TECHMAP pass (map to technology primitives).

17.39.1. Executing Verilog-2005 frontend: /home/shay/a/ece270/bin/../share/yosys/ice40/latches_map.v
Parsing Verilog input from `/home/shay/a/ece270/bin/../share/yosys/ice40/latches_map.v' to AST representation.
Generating RTLIL representation for module `\$_DLATCH_N_'.
Generating RTLIL representation for module `\$_DLATCH_P_'.
Successfully finished Verilog frontend.

17.39.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~4 debug messages>

17.40. Executing ABC pass (technology mapping using ABC).

17.40.1. Extracting gate netlist of module `\ice40hx8k' to `<abc-temp-dir>/input.blif'..
Extracted 968 gates and 1256 wires to a netlist network with 286 inputs and 239 outputs.

17.40.1.1. Executing ABC.
Running ABC command: "<yosys-exe-dir>/yosys-abc" -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_lut <abc-temp-dir>/lutdefs.txt 
ABC: + strash 
ABC: + &get -n 
ABC: + &fraig -x 
ABC: + &put 
ABC: + scorr 
ABC: Warning: The network is combinational (run "fraig" or "fraig_sweep").
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + dch -f 
ABC: + if 
ABC: + mfs2 
ABC: + lutpack -S 1 
ABC: + dress <abc-temp-dir>/input.blif 
ABC: Total number of equiv classes                =     327.
ABC: Participating nodes from both networks       =     692.
ABC: Participating nodes from the first network   =     328. (  71.15 % of nodes)
ABC: Participating nodes from the second network  =     364. (  78.96 % of nodes)
ABC: Node pairs (any polarity)                    =     328. (  71.15 % of names can be moved)
ABC: Node pairs (same polarity)                   =     274. (  59.44 % of names can be moved)
ABC: Total runtime =     0.10 sec
ABC: + write_blif <abc-temp-dir>/output.blif 

17.40.1.2. Re-integrating ABC results.
ABC RESULTS:              $lut cells:      460
ABC RESULTS:        internal signals:      731
ABC RESULTS:           input signals:      286
ABC RESULTS:          output signals:      239
Removing temp directory.

17.41. Executing ICE40_WRAPCARRY pass (wrap carries).

17.42. Executing TECHMAP pass (map to technology primitives).

17.42.1. Executing Verilog-2005 frontend: /home/shay/a/ece270/bin/../share/yosys/ice40/ff_map.v
Parsing Verilog input from `/home/shay/a/ece270/bin/../share/yosys/ice40/ff_map.v' to AST representation.
Generating RTLIL representation for module `\$_DFF_N_'.
Generating RTLIL representation for module `\$_DFF_P_'.
Generating RTLIL representation for module `\$_DFFE_NP_'.
Generating RTLIL representation for module `\$_DFFE_PP_'.
Generating RTLIL representation for module `\$_DFF_NP0_'.
Generating RTLIL representation for module `\$_DFF_NP1_'.
Generating RTLIL representation for module `\$_DFF_PP0_'.
Generating RTLIL representation for module `\$_DFF_PP1_'.
Generating RTLIL representation for module `\$_DFFE_NP0P_'.
Generating RTLIL representation for module `\$_DFFE_NP1P_'.
Generating RTLIL representation for module `\$_DFFE_PP0P_'.
Generating RTLIL representation for module `\$_DFFE_PP1P_'.
Generating RTLIL representation for module `\$_SDFF_NP0_'.
Generating RTLIL representation for module `\$_SDFF_NP1_'.
Generating RTLIL representation for module `\$_SDFF_PP0_'.
Generating RTLIL representation for module `\$_SDFF_PP1_'.
Generating RTLIL representation for module `\$_SDFFCE_NP0P_'.
Generating RTLIL representation for module `\$_SDFFCE_NP1P_'.
Generating RTLIL representation for module `\$_SDFFCE_PP0P_'.
Generating RTLIL representation for module `\$_SDFFCE_PP1P_'.
Successfully finished Verilog frontend.

17.42.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~22 debug messages>
Removed 82 unused cells and 801 unused wires.

17.43. Executing OPT_LUT pass (optimize LUTs).
Discovering LUTs.
Number of LUTs:      564
  1-LUT               88
  2-LUT               92
  3-LUT              203
  4-LUT              181
  with \SB_CARRY    (#0)   99
  with \SB_CARRY    (#1)  113

Eliminating LUTs.
Number of LUTs:      564
  1-LUT               88
  2-LUT               92
  3-LUT              203
  4-LUT              181
  with \SB_CARRY    (#0)   99
  with \SB_CARRY    (#1)  113

Combining LUTs.
Number of LUTs:      531
  1-LUT               87
  2-LUT               57
  3-LUT              177
  4-LUT              210
  with \SB_CARRY    (#0)   99
  with \SB_CARRY    (#1)  113

Eliminated 0 LUTs.
Combined 33 LUTs.
<suppressed ~3372 debug messages>

17.44. Executing TECHMAP pass (map to technology primitives).

17.44.1. Executing Verilog-2005 frontend: /home/shay/a/ece270/bin/../share/yosys/ice40/cells_map.v
Parsing Verilog input from `/home/shay/a/ece270/bin/../share/yosys/ice40/cells_map.v' to AST representation.
Generating RTLIL representation for module `\$lut'.
Successfully finished Verilog frontend.

17.44.2. Continuing TECHMAP pass.
Using template $paramod$571404c0889eaf57f492cb5e37f8acb5df5852f9\$lut for cells of type $lut.
Using template $paramod$6e238df02989b317f10820a22773676e71120644\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'10000000 for cells of type $lut.
Using template $paramod$658b9ed803f0d3d335616d3858b53e0a2522f1e8\$lut for cells of type $lut.
Using template $paramod$fd904e9e35cfd343a9df248824bd3f1408724879\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'00010000 for cells of type $lut.
Using template $paramod$3dac3077b74f27a9efa822cf00e7ed45fb866074\$lut for cells of type $lut.
Using template $paramod$0f52647588235a7349ddd3f3432c9ac1e33ad9e1\$lut for cells of type $lut.
Using template $paramod$a59507d273cd827eb6c46c37820d50a1b717efdf\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'00000001 for cells of type $lut.
Using template $paramod$7d45bd12c01d1778446c9474bd2c34ae7ad041ca\$lut for cells of type $lut.
Using template $paramod$bba54c1ef87367812b4c15f4aed5ac70773df775\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000010\LUT=4'1000 for cells of type $lut.
Using template $paramod$0de052767abdccc3aefc818722bdc3c7850d25d6\$lut for cells of type $lut.
Using template $paramod$fccccf8bb2add7667329c686feec7546eb9a3ae3\$lut for cells of type $lut.
Using template $paramod$272652f6c6fbe9a75eff76e45cc7e2788835518b\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'00011111 for cells of type $lut.
Using template $paramod$6d6beead1425af15cf78b27fd9b11b41b5d4bce8\$lut for cells of type $lut.
Using template $paramod$a8b2b0f3a3fd7b01c99e8d61bb72f602bd41af54\$lut for cells of type $lut.
Using template $paramod$cd6c4b4da6d8737b72fd2dc8f5d83d8967445809\$lut for cells of type $lut.
Using template $paramod$b637cf4714c2e93484bb499728e176a6ab69c910\$lut for cells of type $lut.
Using template $paramod$97e449d15b607612c49291044eca4e2c8b59088e\$lut for cells of type $lut.
Using template $paramod$8379cb6cc067198df3735466802bba2672d8d35f\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'11000101 for cells of type $lut.
Using template $paramod$de3d8c0ac9a85f776878d56395b6e0bf04ae72e7\$lut for cells of type $lut.
Using template $paramod$20f7b1e6e447234cbb6bb4b7e7178198ac1337f1\$lut for cells of type $lut.
Using template $paramod$7e0277340d3f34d16bb7c3938d5c21ff955fcc9d\$lut for cells of type $lut.
Using template $paramod$71d951b20e73043168c1656217d126e617052faa\$lut for cells of type $lut.
Using template $paramod$9c2dece5be18da29d8c978059399d07b00f5921c\$lut for cells of type $lut.
Using template $paramod$c9b8ca8a2f9e325123f32d9c043547bed8ca9015\$lut for cells of type $lut.
Using template $paramod$db17a9a11e777f7a9691b0c8dcc9d5785e9de410\$lut for cells of type $lut.
Using template $paramod$9f135fba3de3ba24cef5852dbc0be35267668f2e\$lut for cells of type $lut.
Using template $paramod$d6d3aaeac1b9aa2c4b652c48e0deb565040dda72\$lut for cells of type $lut.
Using template $paramod$50f7e15b535aea3b809b98699236d9eaaff81565\$lut for cells of type $lut.
Using template $paramod$048d4aa2263b685fba6c6b0d38f6224df0dc3042\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'01110000 for cells of type $lut.
Using template $paramod$a50be0e6fa3a01511bb234559cb74fb8bd3e2061\$lut for cells of type $lut.
Using template $paramod$e0bde73e598487237493c8a43ca52c95a3727354\$lut for cells of type $lut.
Using template $paramod$e91fd7c0b83fa86f9e17b44e81b053b9681b527b\$lut for cells of type $lut.
Using template $paramod$b22e1de0c50840dcbbf24001663ffaaba9d5d7b8\$lut for cells of type $lut.
Using template $paramod$4da2782c2e024b3eded45331a6607870b9d0254f\$lut for cells of type $lut.
Using template $paramod$1bf62ab10e48d71d6497bccacf5c70420c470fe9\$lut for cells of type $lut.
Using template $paramod$bd92e5a7eb89d7d8b2d725787609a2da55480d43\$lut for cells of type $lut.
Using template $paramod$81d8a60fd95b1a9f9ef71c12a774ae6988cb9fd5\$lut for cells of type $lut.
Using template $paramod$4a8739123d48424666d29a12eabcd109490f649a\$lut for cells of type $lut.
Using template $paramod$bbbb64386b555cc1df8aa214efc72a5aed123638\$lut for cells of type $lut.
Using template $paramod$e3d05bc31d7552266fa5d60ff30198d00d04feda\$lut for cells of type $lut.
Using template $paramod$a3cdc1eb771a2c6a16f64da161e11100ac409d2b\$lut for cells of type $lut.
Using template $paramod$bf60f6ec407ee294958b6566514fc3125ec42258\$lut for cells of type $lut.
Using template $paramod$252e5d27cdb5c71c046044e4af3e4b66b3df8acf\$lut for cells of type $lut.
Using template $paramod$e9c77024ca501b890c641f9c0b10e27242db8730\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'11101011 for cells of type $lut.
Using template $paramod$47699ad2bdf0b981a44d905fe0c777ead01798e8\$lut for cells of type $lut.
Using template $paramod$a4df2b5be2b644499880e088a11556935f22b401\$lut for cells of type $lut.
Using template $paramod$24db8a275c3287b26e3f71801dd72f7dfd646944\$lut for cells of type $lut.
Using template $paramod$30c7bb594369ca20ff4ff844ba6ed3179f45572d\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000010\LUT=4'0110 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000010\LUT=4'0001 for cells of type $lut.
Using template $paramod$99eb1ea876c2fcd2463282e1d08fa89d31eb901c\$lut for cells of type $lut.
Using template $paramod$cc7f44fc33da239871f9f4dc567e954c3c872113\$lut for cells of type $lut.
Using template $paramod$14bf4d6cadf1fd9ca4c56f9d25e40a420b38c8b5\$lut for cells of type $lut.
Using template $paramod$4b2297966ddb718657b80566604f97685ffc0120\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'01000000 for cells of type $lut.
Using template $paramod$94ac66a11090dca84889e55fcf03297912a5b7ec\$lut for cells of type $lut.
Using template $paramod$b4f85a6321a00b090afc4e21d68e7b99eb94d149\$lut for cells of type $lut.
Using template $paramod$8b24407096beec47292ddeb1567a058197a320b9\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'00010110 for cells of type $lut.
Using template $paramod$4a747bba912ce472662a080aaf1b10a66330aa41\$lut for cells of type $lut.
Using template $paramod$b2a4860cd839ff40d9dca4c3f237b2b534267028\$lut for cells of type $lut.
Using template $paramod$b4d0f4738a5ce50c7f36c2aa2ecc09cfb874f2b6\$lut for cells of type $lut.
Using template $paramod$06a49eeef9c9c0ca3eeb308c4b5ee09a412d6201\$lut for cells of type $lut.
Using template $paramod$baa939b0bd5b3e0c8760492528669bd58f640542\$lut for cells of type $lut.
Using template $paramod$b93d1ea7a612a32c185108f67a153d44ffb9aac2\$lut for cells of type $lut.
Using template $paramod$3525bc88021caeb0b6fb10b051fd947bd104e42a\$lut for cells of type $lut.
Using template $paramod$a2a25fd4ebcbc82527f7d0bda85980e44f2816b0\$lut for cells of type $lut.
Using template $paramod$0a94662b0161fc067fc2a1123fd5ac94da2ec1db\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'11110100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000001\LUT=2'01 for cells of type $lut.
Using template $paramod$11ec7271d8e6e5aeaace08c13e4c601f10e31038\$lut for cells of type $lut.
Using template $paramod$9d707d218adbd63b6f9a0c79d7ee037306fb6296\$lut for cells of type $lut.
Using template $paramod$f63fe32f78d5f3c5de711945c592c8c5ec2303ae\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'01010011 for cells of type $lut.
Using template $paramod$b431bfd938e35871dd0b7668e1503c7e8b9d491c\$lut for cells of type $lut.
Using template $paramod$6d23198eb2b8f79a41c7626605a61009695893b1\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'10111101 for cells of type $lut.
Using template $paramod$b297295e19b03521716155b85537bbe86d6a9ae6\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'00001110 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'00011110 for cells of type $lut.
Using template $paramod$451540f0f4d6738aa7ad07d81c5f0cead4cc4a73\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'11100000 for cells of type $lut.
Using template $paramod$3b4098f667ff8021cf0922e7abb002265fc63690\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000010\LUT=4'0100 for cells of type $lut.
Using template $paramod$9e397ebe328dd6e99655d7894c835c6e05d9ca3f\$lut for cells of type $lut.
Using template $paramod$052ca015f1400ebf950f85d5f181f7a5865c336c\$lut for cells of type $lut.
Using template $paramod$2d07c1a6c53c7b878509360922c4fa5ebedc3011\$lut for cells of type $lut.
Using template $paramod$973818279bc95792902f3c09371fd2407d04a2a5\$lut for cells of type $lut.
Using template $paramod$5ef3e2a003d9029352faafd477743177813cd767\$lut for cells of type $lut.
Using template $paramod$a15fd389a2f54cb7b94707b25934d226e68d9e2e\$lut for cells of type $lut.
Using template $paramod$df196ed0a1da5c4a58c5e08a1dac304fd3fccaab\$lut for cells of type $lut.
Using template $paramod$ba05b8a1a425003df083aea0e69541f5cbdc68f2\$lut for cells of type $lut.
Using template $paramod$59c595af41d4a5cce2d588c3a5f1342749ce7a77\$lut for cells of type $lut.
Using template $paramod$e49f6e3576ef1a6d2f58c54414dbb786af8cc869\$lut for cells of type $lut.
Using template $paramod$4282def8dbd6df3d1248ad282c629bee684502c2\$lut for cells of type $lut.
Using template $paramod$6b0849254d6c87461fb93e37cc18f089f61eb912\$lut for cells of type $lut.
Using template $paramod$05f19d9c2311a3d1ab38ece311a1bb9f96c62043\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'11111000 for cells of type $lut.
Using template $paramod$9850450c7f2ce6ec6d61697515f47872a7c4eee5\$lut for cells of type $lut.
Using template $paramod$d7f4570f04f68175b1fa25c1bac92938027a2c96\$lut for cells of type $lut.
Using template $paramod$d4fae2c0d9ad2966369cd4e39b81c71bcd1327c9\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'10110100 for cells of type $lut.
Using template $paramod$6eab9b2b3e64691c131343dd016fab9a9af7832b\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'01100000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'10111100 for cells of type $lut.
Using template $paramod$8c24dc0cdd336b7fb88bbf7eed45cec5cbae862b\$lut for cells of type $lut.
Using template $paramod$df0b68f8e63b2deb6710e23abd8b8ff0796d4897\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000010\LUT=4'1001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'10101100 for cells of type $lut.
Using template $paramod$2703356930112cf5ec44d1fc81b6b237e911c8bb\$lut for cells of type $lut.
Using template $paramod$99b108e57094a4794425471421a2ce3c899d89af\$lut for cells of type $lut.
Using template $paramod$12c7f1171b139e4f4e6443ddc13932509cabbc36\$lut for cells of type $lut.
Using template $paramod$c1a19a87ccbbb03d43a72335db63f692ddf82cc1\$lut for cells of type $lut.
Using template $paramod$7614968db5bb082ee538195c00594779836d04ec\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000010\LUT=4'0111 for cells of type $lut.
Using template $paramod$fb5ee0bdef1c4e74aaf1fd8efae98b46a2f5e564\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000010\LUT=4'1110 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'11111110 for cells of type $lut.
Using template $paramod$ae9b8abdb4f811ce37985dd5106af9cd21223954\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'11110001 for cells of type $lut.
No more expansions possible.
<suppressed ~2198 debug messages>
Removed 0 unused cells and 1144 unused wires.

17.45. Executing AUTONAME pass.
Renamed 19086 objects in module ice40hx8k (55 iterations).
<suppressed ~1097 debug messages>

17.46. Executing HIERARCHY pass (managing design hierarchy).

17.46.1. Analyzing design hierarchy..
Top module:  \ice40hx8k

17.46.2. Analyzing design hierarchy..
Top module:  \ice40hx8k
Removed 0 unused modules.

17.47. Printing statistics.

=== ice40hx8k ===

   Number of wires:                334
   Number of wire bits:           3072
   Number of public wires:         334
   Number of public wire bits:    3072
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                903
     SB_CARRY                      170
     SB_DFFE                        14
     SB_DFFER                       76
     SB_DFFES                        2
     SB_DFFESR                      15
     SB_DFFESS                       4
     SB_DFFR                        89
     SB_DFFS                         1
     SB_LUT4                       531
     SB_PLL40_CORE                   1

17.48. Executing CHECK pass (checking for obvious problems).
Checking module ice40hx8k...
Found and reported 0 problems.

17.49. Executing JSON backend.

Warnings: 80 unique messages, 80 total
End of script. Logfile hash: b329437c15, CPU: user 9.61s system 0.22s, MEM: 288.50 MB peak
Yosys 0.27 (git sha1 5f88c218b, gcc 11.3.0-1ubuntu1~22.04 -fPIC -O3)
Time spent: 26% 79x opt_expr (2 sec), 12% 70x opt_merge (1 sec), ...
